(()=>{"use strict";var __webpack_modules__={598:()=>{eval('\n;// CONCATENATED MODULE: ./src/storage.js\n// Save data to local storage\nfunction saveTasksToLocalStorage(tasksArr) {\n  var data = JSON.stringify(tasksArr);\n  localStorage.setItem("tasks", data);\n}\n\n// load tasks from localStorage and parse them back into JavaScript objects:\nfunction loadTasksFromLocalStorage() {\n  var data = localStorage.getItem("tasks");\n  if (data) {\n    return JSON.parse(data);\n  } else {\n    return []; // Return an empty array if no data is found\n  }\n}\n;// CONCATENATED MODULE: ./src/todayTasks.js\n\nfunction renderTodayTasks() {\n  var todayDiv = document.createElement("div");\n  todayDiv.classList.add("today-div");\n  var todayH1 = document.createElement("h1");\n  todayH1.textContent = "Today Tasks";\n  var allTasksContainer = document.createElement("div");\n  allTasksContainer.classList.add("all-tasks-container");\n  todayDiv.appendChild(todayH1);\n  todayDiv.appendChild(allTasksContainer);\n  displayTodayTasks();\n  return todayDiv;\n}\nfunction displayTodayTasks() {\n  var allTasksContainer = document.querySelector(".all-tasks-container");\n  if (allTasksContainer) {\n    // if there are tasks in inbox\n    allTasksContainer.innerHTML = ""; // Clear previous content\n\n    var todayTasks = tasksArr.filter(function (task) {\n      return isDueToday(task.schedule);\n    });\n    if (todayTasks.length > 0) {\n      todayTasks.forEach(function (task) {\n        var taskElement = createTodayTaskElement(task);\n        allTasksContainer.appendChild(taskElement);\n      });\n    } else {\n      // No tasks for today\n      var noTaskMessage = document.createElement("p");\n      noTaskMessage.textContent = "No tasks today!";\n      noTaskMessage.classList.add("no-task-msg");\n      allTasksContainer.appendChild(noTaskMessage);\n    }\n  }\n}\nfunction isDueToday(taskDate) {\n  var today = new Date();\n  today.setHours(0, 0, 0, 0);\n  var dueDate = new Date(taskDate);\n  dueDate.setHours(0, 0, 0, 0);\n  return today.getTime() === dueDate.getTime();\n}\nfunction createTodayTaskElement(task) {\n  var taskContainer = document.createElement("div");\n  taskContainer.classList.add("task-container");\n  var taskTitle = document.createElement("p");\n  taskTitle.classList.add("task-title");\n  taskTitle.textContent = task.title;\n  taskContainer.appendChild(taskTitle);\n  return taskContainer;\n}\n;// CONCATENATED MODULE: ./src/projectManager.js\nfunction enableProjectAddition() {\n  var addProjectLink = document.querySelector(".add-project");\n\n  // Create the input container if it doesn\'t exist\n  var projectNameInputContainer = document.querySelector(".project-name-input-container");\n  if (!projectNameInputContainer) {\n    projectNameInputContainer = document.createElement("div");\n    projectNameInputContainer.classList.add("project-name-input-container");\n    var projectNameInput = document.createElement("input");\n    projectNameInput.type = "text";\n\n    // add and cancel buttons\n    var buttonsContainer = document.createElement("div");\n    buttonsContainer.classList.add("buttons-container");\n    var addBtn = document.createElement("button");\n    addBtn.textContent = "Add";\n    addBtn.classList.add("add-project-btn");\n    var cancelBtn = document.createElement("button");\n    cancelBtn.textContent = "Cancel";\n    cancelBtn.classList.add("cancel-adding-btn");\n    projectNameInputContainer.appendChild(projectNameInput);\n    buttonsContainer.appendChild(cancelBtn);\n    buttonsContainer.appendChild(addBtn);\n    projectNameInputContainer.appendChild(buttonsContainer);\n\n    // Append the container to the DOM\n    addProjectLink.after(projectNameInputContainer);\n\n    // Initially show the input container\n    projectNameInputContainer.style.display = "flex";\n\n    // Hide the container and clear the input when \'Cancel\' is clicked\n    cancelBtn.addEventListener("click", function () {\n      projectNameInputContainer.style.display = "none";\n      projectNameInput.value = "";\n    });\n\n    // Add the new project name when add project is clicked\n    addBtn.addEventListener("click", function () {\n      var projectsNamesContainer = document.createElement("div");\n      projectsNamesContainer.classList.add("projects-names-container");\n      var projectNameContainer = document.createElement("div");\n      projectNameContainer.classList.add("project-name-container");\n      var projectName = document.createElement("div");\n      var projectNameValue = projectNameInput.value.trim();\n      projectName.textContent = projectNameValue;\n      projectName.classList.add("project-name");\n      // add cross icon\n      var crossIcon = document.createElement("img");\n      crossIcon.src = "./images/icons8-cross-16.png";\n      crossIcon.alt = "cross";\n      crossIcon.classList.add("cross-icon");\n      crossIcon.addEventListener("click", function () {\n        projectsNamesContainer.removeChild(projectNameContainer);\n      });\n      projectNameContainer.appendChild(projectName);\n      projectNameContainer.appendChild(crossIcon);\n      projectsNamesContainer.appendChild(projectNameContainer);\n      addProjectLink.after(projectsNamesContainer);\n      projectNameInputContainer.style.display = "none";\n      projectNameInput.value = "";\n    });\n\n    // Add an event listener for the add project link\n    addProjectLink.addEventListener("click", function () {\n      projectNameInputContainer.style.display = projectNameInputContainer.style.display === "none" ? "flex" : "none";\n    });\n  }\n}\n;// CONCATENATED MODULE: ./src/importantTasks.js\n\nfunction renderImportantTasks() {\n  var importantDiv = document.createElement("div");\n  importantDiv.classList.add("important-div");\n  var importantH1 = document.createElement("h1");\n  importantH1.textContent = "Important Tasks";\n  var allTasksContainer = document.createElement("div");\n  allTasksContainer.classList.add("all-tasks-container");\n  importantDiv.appendChild(importantH1);\n  importantDiv.appendChild(allTasksContainer);\n  return importantDiv;\n}\nfunction displayImportantTasks() {\n  // in the task array check for objects that their priority is high,\n  // if that so, add these tasks to tasks container in important div\n  var allTasksContainer = document.querySelector(".all-tasks-container");\n  if (allTasksContainer) {\n    // Clear existing content\n    allTasksContainer.innerHTML = "";\n\n    // Loop through tasks and add high-priority tasks\n    tasksArr.forEach(function (task) {\n      if (task.priority === "high") {\n        var importantTask = createImportantTaskElement(task);\n        allTasksContainer.appendChild(importantTask);\n      }\n    });\n  }\n}\nfunction createImportantTaskElement(task) {\n  var taskContainer = document.createElement("div");\n  taskContainer.classList.add("task-container");\n  var taskTitle = document.createElement("p");\n  taskTitle.classList.add("task-title");\n  taskTitle.textContent = task.title;\n  taskContainer.appendChild(taskTitle);\n  return taskContainer;\n}\n;// CONCATENATED MODULE: ./src/completedTasks.js\n\nfunction renderCompletedTasks() {\n  var completedDiv = document.createElement("div");\n  completedDiv.classList.add("completed-div");\n  var completedH1 = document.createElement("h1");\n  completedH1.textContent = "Completed Tasks";\n  var allTasksContainer = document.createElement("div");\n  allTasksContainer.classList.add("all-tasks-container");\n  completedDiv.appendChild(completedH1);\n  completedDiv.appendChild(allTasksContainer);\n  return completedDiv;\n}\nfunction displayCompletedTasks() {\n  // for each task check if the \'done\' is equal to true for showing it in the completed div\n  var allTasksContainer = document.querySelector(".all-tasks-container");\n  if (allTasksContainer) {\n    // Clear existing content\n    allTasksContainer.innerHTML = "";\n\n    // Loop through tasks and add high-priority tasks\n    tasksArr.forEach(function (task) {\n      if (task.done === true) {\n        var completedTask = createCompletedTaskElement(task);\n        allTasksContainer.appendChild(completedTask);\n      }\n    });\n  }\n}\nfunction createCompletedTaskElement(task) {\n  var taskContainer = document.createElement("div");\n  taskContainer.classList.add("task-container");\n  var taskTitle = document.createElement("p");\n  taskTitle.classList.add("task-title");\n  taskTitle.textContent = task.title;\n  taskContainer.appendChild(taskTitle);\n  return taskContainer;\n}\n;// CONCATENATED MODULE: ./src/UI.js\n\n\n\n\n\n\n\n\nfunction updateMainContent() {\n  var mainContent = document.querySelector(".main-content");\n\n  // Grab all sidebar links\n  var sidebarLinks = document.querySelectorAll(".sidebar a");\n\n  // Add an event listener to each link\n  sidebarLinks.forEach(function (link) {\n    link.addEventListener("click", function (event) {\n      event.preventDefault(); // Prevent the default link action\n      // Clear the main content\n      mainContent.textContent = " ";\n\n      // Determine which function to call based on clicked link\'s class\n      if (link.classList.contains("inbox")) {\n        var inboxContent = renderInbox();\n        mainContent.appendChild(inboxContent);\n        createAndAddNewTask(); // by clicking add btn in dialog add the new task to tasksArr and the all tasks container in the inbox\n        attachEventListenersToTasksContainer(); // event listener delegation\n\n        if (tasksArr.length > 0) {\n          // if there is already some tasks added show them when navigate back to inbox link\n          renderNewTask();\n        }\n      } else if (link.classList.contains("today")) {\n        var todayContent = renderTodayTasks();\n        mainContent.appendChild(todayContent);\n        displayTodayTasks();\n      } else if (link.classList.contains("completed")) {\n        var completedContent = renderCompletedTasks();\n        mainContent.appendChild(completedContent);\n        displayCompletedTasks();\n      } else if (link.classList.contains("important")) {\n        var importantContent = renderImportantTasks();\n        mainContent.appendChild(importantContent);\n        displayImportantTasks();\n      } else if (link.classList.contains("add-project")) {\n        enableProjectAddition();\n      }\n    });\n  });\n}\n\n// DOM for to do list tasks\n\nfunction clearTasks() {\n  var allTasksContainer = document.querySelector(".all-tasks-container");\n  allTasksContainer.innerHTML = "";\n}\nfunction createTaskElement(task) {\n  var taskContainer = document.createElement("div");\n  taskContainer.classList.add("task-container");\n  var taskStatusTitle = document.createElement("div");\n  taskStatusTitle.classList.add("task-status-title");\n  var taskDetails = document.createElement("div");\n  taskDetails.classList.add("task-details");\n\n  // add the status icon\n  var statusIcon = document.createElement("img");\n  statusIcon.classList.add("circle-icon", "task-icon");\n  statusIcon.src = "./images/circle_FILL0_wght400_GRAD0_opsz24.svg";\n  taskStatusTitle.appendChild(statusIcon);\n\n  // add task title\n  var taskTitle = document.createElement("p");\n  taskTitle.classList.add("task-title");\n  taskTitle.textContent = task.title;\n  taskStatusTitle.appendChild(taskTitle);\n\n  // add schedule\n  var schedule = document.createElement("span");\n  schedule.classList.add("schedule");\n  schedule.textContent = task.schedule;\n  taskDetails.appendChild(schedule);\n\n  // add priority\n  var priority = document.createElement("span");\n  priority.classList.add("priority");\n  priority.textContent = task.priority;\n  taskDetails.appendChild(priority);\n\n  // add trash icon\n\n  var trashIcon = document.createElement("img");\n  trashIcon.classList.add("trash-icon", "task-icon");\n  trashIcon.src = "./images/delete_FILL0_wght400_GRAD0_opsz24.svg";\n  taskDetails.appendChild(trashIcon);\n  taskContainer.appendChild(taskStatusTitle);\n  taskContainer.appendChild(taskDetails);\n  return taskContainer;\n}\nfunction addTaskToContainer(taskElement) {\n  var allTasksContainer = document.querySelector(".all-tasks-container");\n  allTasksContainer.appendChild(taskElement);\n}\nfunction removeTaskFromContainer(taskElement) {\n  var allTasksContainer = document.querySelector(".all-tasks-container");\n  allTasksContainer.removeChild(taskElement);\n}\nfunction toggleStatusIcon(task, taskElement) {\n  var statusIcon = taskElement.querySelector(".circle-icon");\n  task.done = !task.done;\n  var taskTitle = taskElement.querySelector(".task-title");\n\n  // Change the visual representation of the status icon\n  if (task.done) {\n    statusIcon.src = "images/check_circle_FILL0_wght400_GRAD0_opsz24.svg";\n    taskTitle.style.textDecoration = "line-through";\n  } else {\n    statusIcon.src = "./images/circle_FILL0_wght400_GRAD0_opsz24.svg";\n    taskTitle.style.textDecoration = "none";\n  }\n}\n;// CONCATENATED MODULE: ./src/toDoItem.js\n\n\n\nfunction renderNewTask() {\n  clearTasks(); // clear all tasks container so when adding a new task the previous tasks are not added again with the new one.\n\n  tasksArr.forEach(function (task) {\n    var taskElement = createTaskElement(task);\n    updateTaskUI(task, taskElement);\n    addTaskToContainer(taskElement);\n  });\n}\nfunction updateTaskUI(task, taskElement) {\n  var statusIcon = taskElement.querySelector(".circle-icon");\n  var taskTitle = taskElement.querySelector(".task-title");\n  if (task.done) {\n    statusIcon.src = "images/check_circle_FILL0_wght400_GRAD0_opsz24.svg";\n    taskTitle.style.textDecoration = "line-through";\n  } else {\n    statusIcon.src = "./images/circle_FILL0_wght400_GRAD0_opsz24.svg";\n    taskTitle.style.textDecoration = "none";\n  }\n}\nfunction attachEventListenersToTasksContainer() {\n  var allTasksContainer = document.querySelector(".all-tasks-container");\n  allTasksContainer.addEventListener("click", function (event) {\n    var taskElement = event.target.closest(".task-container");\n    if (!taskElement) return;\n    if (event.target.classList.contains("circle-icon")) {\n      var index = Array.from(allTasksContainer.children).indexOf(taskElement);\n      toggleStatusIcon(tasksArr[index], taskElement);\n    } else if (event.target.classList.contains("trash-icon")) {\n      var _index = Array.from(allTasksContainer.children).indexOf(taskElement);\n      removeTaskFromContainer(taskElement);\n      tasksArr.splice(_index, 1);\n    }\n\n    // save the updated tasks array to local storage\n    saveTasksToLocalStorage(tasksArr);\n  });\n}\n;// CONCATENATED MODULE: ./src/inbox.js\n\n\nvar tasksArr = loadTasksFromLocalStorage();\nfunction renderInbox() {\n  var inboxDiv = document.createElement("div");\n  inboxDiv.classList.add("inbox-div");\n  var inboxH1 = document.createElement("h1");\n  inboxH1.textContent = "Inbox";\n\n  // all tasks container which is below the header and above the add new task div\n  var allTasksContainer = document.createElement("div");\n  allTasksContainer.classList.add("all-tasks-container");\n  var addNewTaskDiv = document.createElement("div");\n  addNewTaskDiv.classList.add("add-new-task");\n  var plusIcon = document.createElement("img");\n  plusIcon.src = "./images/add_FILL0_wght400_GRAD0_opsz24.svg";\n  plusIcon.classList.add("task-plus-icon");\n  plusIcon.alt = "plus";\n  addNewTaskDiv.appendChild(plusIcon);\n  var addTaskP = document.createElement("p");\n  addTaskP.classList.add("add-task-text");\n  addTaskP.textContent = "Add a new task";\n  addNewTaskDiv.appendChild(addTaskP);\n  inboxDiv.appendChild(inboxH1);\n  inboxDiv.appendChild(allTasksContainer);\n  inboxDiv.appendChild(addNewTaskDiv);\n  createAddTaskDialog();\n  return inboxDiv;\n}\nfunction createAddTaskDialog() {\n  // Create dialog element\n  var dialog = document.createElement("dialog");\n  dialog.classList.add("add-task-dialog");\n\n  // Create form\n  var form = document.createElement("form");\n  form.action = "dialog";\n\n  // Form inputs\n  var inputsDiv = document.createElement("div");\n  inputsDiv.classList.add("inputsDiv");\n\n  // label input div for each of inputs\n  var individualInput = document.createElement("div");\n  individualInput.classList.add("individual-input");\n\n  // Task title input\n  var taskTitleDiv = document.createElement("div");\n  taskTitleDiv.classList.add("task-title");\n  var taskTitleLabel = document.createElement("label");\n  taskTitleLabel.htmlFor = "task-title";\n  taskTitleLabel.textContent = "Task Title*";\n  var taskTitleInput = document.createElement("input");\n  taskTitleInput.type = "text";\n  taskTitleInput.name = "task-title";\n  taskTitleInput.id = "task-title";\n  taskTitleInput.classList.add("task-title--input");\n  taskTitleInput.placeholder = "e.g. Workout";\n  taskTitleInput.required = true;\n  taskTitleDiv.appendChild(taskTitleLabel);\n  taskTitleDiv.appendChild(taskTitleInput);\n  individualInput.appendChild(taskTitleDiv);\n\n  // Priority select\n  var priorityDiv = document.createElement("div");\n  priorityDiv.classList.add("priority");\n  var priorityLabel = document.createElement("label");\n  priorityLabel.htmlFor = "priority";\n  priorityLabel.textContent = "Priority";\n  var prioritySelect = document.createElement("select");\n  prioritySelect.name = "priority";\n  prioritySelect.id = "priority";\n  prioritySelect.classList.add("priority--select");\n  ["Low", "Medium", "High"].forEach(function (priority) {\n    var option = document.createElement("option");\n    option.value = priority.toLowerCase();\n    option.textContent = priority;\n    prioritySelect.appendChild(option);\n  });\n  priorityDiv.appendChild(priorityLabel);\n  priorityDiv.appendChild(prioritySelect);\n  individualInput.appendChild(priorityDiv);\n\n  // Schedule date input\n  var scheduleDiv = document.createElement("div");\n  scheduleDiv.classList.add("schedule");\n  var scheduleLabel = document.createElement("label");\n  scheduleLabel.htmlFor = "schedule";\n  scheduleLabel.textContent = "Schedule";\n  var scheduleInput = document.createElement("input");\n  scheduleInput.type = "date";\n  scheduleInput.name = "schedule";\n  scheduleInput.id = "schedule";\n  scheduleInput.classList.add("due-date");\n  scheduleDiv.appendChild(scheduleLabel);\n  scheduleDiv.appendChild(scheduleInput);\n  individualInput.appendChild(scheduleDiv);\n\n  // Buttons\n  var buttonsDiv = document.createElement("div");\n  buttonsDiv.classList.add("buttons");\n  var cancelButton = document.createElement("button");\n  cancelButton.classList.add("cancel-btn");\n  cancelButton.textContent = "Cancel";\n  var addButton = document.createElement("button");\n  addButton.type = "submit";\n  addButton.classList.add("add-btn");\n  addButton.textContent = "Add";\n  buttonsDiv.appendChild(cancelButton);\n  buttonsDiv.appendChild(addButton);\n\n  // Append all inputs and their labels in inputsDiv\n  inputsDiv.appendChild(individualInput);\n\n  // Append all parts to form\n  form.appendChild(inputsDiv);\n  form.appendChild(buttonsDiv);\n  dialog.appendChild(form);\n  return dialog;\n}\nfunction createAndAddNewTask() {\n  // add the new task to the tasks container\n\n  var addNewTaskDiv = document.querySelector(".add-new-task");\n\n  // Attach the event listener to the .add-new-task div\n  addNewTaskDiv.addEventListener("click", function () {\n    var dialog = createAddTaskDialog();\n    document.body.appendChild(dialog);\n    dialog.showModal();\n    var cancelButton = dialog.querySelector(".cancel-btn");\n    var addButton = dialog.querySelector(".add-btn");\n    cancelButton.addEventListener("click", function () {\n      dialog.close();\n      document.body.removeChild(dialog); // removing the dialog after closing\n    });\n    addButton.addEventListener("click", function (e) {\n      e.preventDefault();\n      var title = dialog.querySelector("#task-title").value.trim();\n      var priority = dialog.querySelector("#priority").value;\n      var schedule = dialog.querySelector("#schedule").value;\n      if (!title) {\n        alert("Task title is required");\n        return;\n      }\n\n      // Handle the situation when the selected due time is in the past\n      var todayDate = new Date();\n      var dueDate = new Date(schedule);\n      todayDate.setHours(0, 0, 0, 0);\n      dueDate.setHours(0, 0, 0, 0);\n      if (todayDate > dueDate) {\n        alert("Please select a date in the future, not the past!");\n        return;\n      }\n      var newTask = {\n        title: title,\n        priority: priority,\n        schedule: schedule,\n        done: false\n      };\n      tasksArr.push(newTask);\n      dialog.close();\n      document.body.removeChild(dialog);\n\n      // add the task to the UI when add button is clicked\n      renderNewTask();\n      // save the updated tasks array to local storage\n      saveTasksToLocalStorage(tasksArr);\n    });\n  });\n}\n;// CONCATENATED MODULE: ./src/initializeWebsite.js\n\n\n\nfunction createHeader() {\n  var header = document.createElement("header");\n  var headerLogo = document.createElement("img");\n  headerLogo.classList.add("logo");\n  headerLogo.src = "./images/todolist.svg";\n  headerLogo.alt = "logo";\n  var headerH1 = document.createElement("h1");\n  headerH1.textContent = "Todo List";\n\n  // add menu icon ( only be shown when on the mobile devices)\n  var menuIcon = document.createElement("img");\n  menuIcon.classList.add("menu-icon");\n  menuIcon.src = "./images/icons8-menu-24.svg";\n  menuIcon.alt = "menu";\n  header.appendChild(headerLogo);\n  header.appendChild(headerH1);\n  header.appendChild(menuIcon);\n\n  // Call checkWindowSize with menuIcon as a parameter\n  checkWindowSize(menuIcon);\n  return header;\n}\n\n// Modify checkWindowSize to accept the menuIcon as a parameter\nfunction checkWindowSize(menuIcon) {\n  if (window.innerWidth <= 768) {\n    menuIcon.style.display = "block";\n  } else {\n    menuIcon.style.display = "none";\n  }\n}\n\n// Update the event listener for window resize to also pass menuIcon\nwindow.addEventListener("resize", function () {\n  var menuIcon = document.querySelector("img.menu-icon");\n  checkWindowSize(menuIcon);\n});\nfunction createSidebar() {\n  var nav = document.createElement("nav");\n  var sidebar = document.createElement("div");\n  sidebar.classList.add("sidebar");\n  var sidebarItems = [{\n    "class": "inbox",\n    text: "Inbox",\n    imgSrc: "./images/inbox_FILL0_wght400_GRAD0_opsz24.svg",\n    altText: "inbox"\n  }, {\n    "class": "today",\n    text: "Today",\n    imgSrc: "./images/today_FILL0_wght400_GRAD0_opsz24.svg",\n    altText: "today"\n  }, {\n    "class": "important",\n    text: "Important",\n    imgSrc: "./images/stars_FILL0_wght400_GRAD0_opsz24.svg",\n    altText: "important"\n  }, {\n    "class": "completed",\n    text: "Completed",\n    imgSrc: "./images/done_all_FILL0_wght400_GRAD0_opsz24.svg",\n    altText: "completed"\n  }, {\n    "class": "add-project",\n    text: "Projects",\n    imgSrc: "./images/add_FILL0_wght400_GRAD0_opsz24.svg",\n    altText: "plus"\n  }];\n\n  // Loop through each sidebar item and create its elements\n  sidebarItems.forEach(function (item) {\n    var anchor = document.createElement("a");\n    anchor.classList.add(item["class"]);\n    var img = document.createElement("img");\n    img.src = item.imgSrc;\n    img.alt = item.altText;\n    img.classList.add("navbar", "icon");\n    var p = document.createElement("p");\n    p.textContent = item.text;\n    p.classList.add(item["class"]);\n    if (item["class"] === "add-project") {\n      // Append the text before the icon\n      anchor.appendChild(p);\n      anchor.appendChild(img);\n    } else {\n      // Append the icon before the text\n      anchor.appendChild(img);\n      anchor.appendChild(p);\n    }\n    sidebar.appendChild(anchor);\n  });\n  nav.appendChild(sidebar);\n  return nav;\n}\nfunction createMain() {\n  var main = document.createElement("main");\n  main.classList.add("main-content");\n  return main;\n}\nfunction createFooter() {\n  var footer = document.createElement("footer");\n  var p = document.createElement("p");\n  p.textContent = "Copyright © 2024 ";\n  var a = document.createElement("a");\n  a.href = "https://github.com/zahrabateninia";\n  a.textContent = "zahrabateninia";\n  a.setAttribute("target", "_blank"); // Opens link in new tab\n\n  p.appendChild(a);\n  var img = document.createElement("img");\n  img.src = "images/github.svg";\n  img.alt = "github";\n  footer.appendChild(p);\n  footer.appendChild(img);\n  return footer;\n}\n\n// toggle sidebar\n\nfunction toggleSidebar() {\n  var menuIcon = document.querySelector(".menu-icon");\n  var sidebar = document.querySelector("nav");\n  menuIcon.addEventListener("click", function () {\n    // Toggle sidebar visibility\n    sidebar.style.left = sidebar.style.left === "0px" ? "-60%" : "0px";\n  });\n  document.addEventListener("click", function (event) {\n    // Check if the click is outside the sidebar\n    var isClickInsideSidebar = sidebar.contains(event.target);\n    var isClickOnMenuIcon = menuIcon.contains(event.target);\n    if (!isClickInsideSidebar && !isClickOnMenuIcon && sidebar.style.left === "0px") {\n      // Hide the sidebar if it\'s open and the click was outside\n      sidebar.style.left = "-60%";\n    }\n  });\n}\nfunction initializeWebsite() {\n  var wrapper = document.createElement("div");\n  wrapper.classList.add("wrapper");\n  var htmlContent = document.querySelector(".content");\n  htmlContent.appendChild(wrapper);\n  wrapper.appendChild(createHeader());\n  wrapper.appendChild(createSidebar());\n  toggleSidebar();\n  var mainContent = createMain();\n  wrapper.appendChild(mainContent);\n\n  // when the website is rendered, the inbox contents (with previous added tasks) are shown as a default \n  var inboxContent = renderInbox();\n  mainContent.appendChild(inboxContent);\n  if (tasksArr) {\n    var data = loadTasksFromLocalStorage(); // tasks are stored in an array in data\n    // push the data(tasks) to the tasks container\n    data.forEach(function (task) {\n      renderNewTask();\n    });\n  }\n  createAndAddNewTask();\n  attachEventListenersToTasksContainer();\n  wrapper.appendChild(createFooter());\n  return wrapper;\n}\n;// CONCATENATED MODULE: ./src/index.js\n\n\ninitializeWebsite();\nupdateMainContent();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///598\n')}},__webpack_exports__={};__webpack_modules__[598]()})();