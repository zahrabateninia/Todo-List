(()=>{"use strict";var __webpack_modules__={397:()=>{eval("\n;// CONCATENATED MODULE: ./src/initializeWebsite.js\nfunction createHeader(){\n    const header = document.createElement('header');\n\n    const headerLogo = document.createElement('img');\n    headerLogo.classList.add('logo');\n    headerLogo.src = \"./images/todolist.svg\";\n    headerLogo.alt = 'logo';\n\n    const headerH1 = document.createElement('h1');\n    headerH1.textContent = 'Todo List';\n\n    header.appendChild(headerLogo);\n    header.appendChild(headerH1);\n    return header;\n}\n\n\nfunction createSidebar() {\n    const nav = document.createElement('nav');\n    const sidebar = document.createElement('div');\n    sidebar.classList.add('sidebar');\n\n    const sidebarItems = [\n        { class: 'inbox', text: 'Inbox', imgSrc: './images/inbox_FILL0_wght400_GRAD0_opsz24.svg', altText: 'inbox'},\n        { class: 'today', text: 'Today', imgSrc: './images/today_FILL0_wght400_GRAD0_opsz24.svg', altText: 'today' },\n        { class: 'important', text: 'Important', imgSrc: './images/stars_FILL0_wght400_GRAD0_opsz24.svg', altText: 'important' },\n        { class: 'completed', text: 'Completed', imgSrc: './images/done_all_FILL0_wght400_GRAD0_opsz24.svg', altText: 'completed' },\n        { class: 'add-project', text: 'Projects', imgSrc: './images/add_FILL0_wght400_GRAD0_opsz24.svg', altText: 'plus' }\n    ];\n\n    // Loop through each sidebar item and create its elements\n    sidebarItems.forEach(item => {\n        const anchor = document.createElement('a');\n        anchor.classList.add(item.class);\n\n        const img = document.createElement('img');\n        img.src = item.imgSrc;\n        img.alt = item.altText;\n        img.classList.add('navbar', 'icon');\n\n        const p = document.createElement('p');\n        p.textContent = item.text;\n        p.classList.add(item.class);\n\n        if (item.class === 'add-project') {\n            // Append the text before the icon\n            anchor.appendChild(p);\n            anchor.appendChild(img);\n        } else {\n            // Append the icon before the text\n            anchor.appendChild(img);\n            anchor.appendChild(p);\n        }\n        sidebar.appendChild(anchor);\n    });\n\n    nav.appendChild(sidebar);\n\n    return nav; \n}\n\nfunction createMain(){\n    const main = document.createElement('main');\n    main.classList.add('main-content');\n\n    return main;\n}\n\nfunction createFooter() {\n    const footer = document.createElement('footer');\n\n    const p = document.createElement('p');\n    p.textContent = 'Copyright Â© 2023 ';\n\n    const a = document.createElement('a');\n    a.href = 'https://github.com/zahrabateninia';\n    a.textContent = 'zahrabateninia'; \n    a.setAttribute('target', '_blank'); // Opens link in new tab\n\n    p.appendChild(a);\n\n    const img = document.createElement('img');\n    img.src = 'images/github.svg';\n    img.alt = 'github';\n\n    footer.appendChild(p);\n    footer.appendChild(img);\n\n    return footer;\n}\n\nfunction initializeWebsite(){\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('wrapper');\n\n    const htmlContent = document.querySelector('.content');\n    htmlContent.appendChild(wrapper);\n\n    wrapper.appendChild(createHeader());\n    wrapper.appendChild(createSidebar());\n    wrapper.appendChild(createMain());\n    wrapper.appendChild(createFooter());\n\n    return wrapper;\n\n}\n\n\n;// CONCATENATED MODULE: ./src/toDoItem.js\n\n\n\nfunction renderNewTask(){\n    clearTasks(); // Clear all previous tasks before rendering new ones\n\n    tasksArr.forEach((task, index) => {\n        const taskElement = createTaskElement(task);  // Creates new task element\n\n        // Add event listeners for toggling completion and removing task\n        taskElement.querySelector('.circle-icon').addEventListener('click', () => toggleStatusIcon(task, taskElement));\n        taskElement.querySelector('.trash-icon').addEventListener('click', () => {\n            removeTaskFromContainer(taskElement);\n            tasksArr.splice(index, 1);  // Remove the task from the array\n        });\n\n        addTaskToContainer(taskElement);  // Adds task element to container\n    });\n}\n\n;// CONCATENATED MODULE: ./src/inbox.js\n\n\nfunction renderInbox(){\n    const inboxDiv = document.createElement('div');\n    inboxDiv.classList.add('inbox-div');\n\n    const inboxH1= document.createElement('h1');\n    inboxH1.textContent= 'Inbox';\n\n    // all tasks container which is below the header and above the add new task div\n    const allTasksContainer = document.createElement('div');\n    allTasksContainer.classList.add('all-tasks-container');\n\n\n    const addNewTaskDiv = document.createElement('div');\n    addNewTaskDiv.classList.add('add-new-task');\n\n    const plusIcon =  document.createElement('img');\n    plusIcon.src = './images/add_FILL0_wght400_GRAD0_opsz24.svg';\n    plusIcon.classList.add('task-plus-icon')\n    plusIcon.alt = 'plus';\n    addNewTaskDiv.appendChild(plusIcon);\n\n    const addTaskP = document.createElement('p');\n    addTaskP.classList.add('add-task-text');\n    addTaskP.textContent = 'Add a new task'\n    addNewTaskDiv.appendChild(addTaskP);\n    \n    inboxDiv.appendChild(inboxH1);\n    inboxDiv.appendChild(allTasksContainer);\n    inboxDiv.appendChild(addNewTaskDiv);\n    createAddTaskDialog();\n    return inboxDiv;\n};\n\n\n\nfunction createAddTaskDialog() {\n    // Create dialog element\n    const dialog = document.createElement('dialog');\n    dialog.classList.add('add-task-dialog');\n\n    // Create dialog title\n    const title = document.createElement('h2');\n    title.classList.add('dialog-title');\n    title.textContent = 'New Task';\n\n    // Create form\n    const form = document.createElement('form');\n    form.action = \"dialog\"; \n\n    // Form inputs\n    const inputsDiv = document.createElement('div'); \n    inputsDiv.classList.add('inputsDiv');\n\n    // label input div for each of inputs\n    const individualInput = document.createElement('div');\n    individualInput.classList.add('individual-input');\n\n\n    // Task title input\n    const taskTitleDiv = document.createElement('div');\n    taskTitleDiv.classList.add('task-title');\n    const taskTitleLabel = document.createElement('label');\n    taskTitleLabel.htmlFor = 'task-title';\n    taskTitleLabel.textContent = 'Task Title*';\n    const taskTitleInput = document.createElement('input');\n    taskTitleInput.type = 'text';\n    taskTitleInput.name = 'task-title';\n    taskTitleInput.id = 'task-title';\n    taskTitleInput.classList.add('task-title--input');\n    taskTitleInput.placeholder = 'e.g. Workout';\n    taskTitleInput.required = true;\n    taskTitleDiv.appendChild(taskTitleLabel);\n    taskTitleDiv.appendChild(taskTitleInput);\n\n    individualInput.appendChild(taskTitleDiv);\n\n    // Priority select\n    const priorityDiv = document.createElement('div');\n    priorityDiv.classList.add('priority');\n    const priorityLabel = document.createElement('label');\n    priorityLabel.htmlFor = 'priority';\n    priorityLabel.textContent = 'Priority';\n    const prioritySelect = document.createElement('select');\n    prioritySelect.name = 'priority';\n    prioritySelect.id = 'priority';\n    prioritySelect.classList.add('priority--select');\n    ['Low', 'Medium', 'High'].forEach((priority) => {\n        const option = document.createElement('option');\n        option.value = priority.toLowerCase();\n        option.textContent = priority;\n        prioritySelect.appendChild(option);\n    });\n    priorityDiv.appendChild(priorityLabel);\n    priorityDiv.appendChild(prioritySelect);\n\n    individualInput.appendChild(priorityDiv);\n\n    // Schedule date input\n    const scheduleDiv = document.createElement('div');\n    scheduleDiv.classList.add('schedule');\n    const scheduleLabel = document.createElement('label');\n    scheduleLabel.htmlFor = 'schedule';\n    scheduleLabel.textContent = 'Schedule';\n    const scheduleInput = document.createElement('input');\n    scheduleInput.type = 'date';\n    scheduleInput.name = 'schedule';\n    scheduleInput.id = 'schedule';\n    scheduleInput.classList.add('due-date');\n    scheduleDiv.appendChild(scheduleLabel);\n    scheduleDiv.appendChild(scheduleInput);\n\n    individualInput.appendChild(scheduleDiv);\n\n    // Buttons\n    const buttonsDiv = document.createElement('div');\n    buttonsDiv.classList.add('buttons');\n    const cancelButton = document.createElement('button');\n    cancelButton.classList.add('cancel-btn');\n    cancelButton.textContent = 'Cancel';\n    const addButton = document.createElement('button');\n    addButton.type = 'submit';\n    addButton.classList.add('add-btn');\n    addButton.textContent = 'Add';\n    buttonsDiv.appendChild(cancelButton);\n    buttonsDiv.appendChild(addButton);\n\n    // Append all inputs and their labels in inputsDiv \n    inputsDiv.appendChild(individualInput);\n\n    // Append all parts to form\n    form.appendChild(inputsDiv);\n    form.appendChild(buttonsDiv);\n\n    // Append form to dialog\n    dialog.appendChild(title);\n    dialog.appendChild(form);\n\n    return dialog;\n};\n\n// Global tasks container\nlet tasksContainer; // Will be initialized only once\nconst tasksArr = [];\n\nfunction addTaskDialog() {\n    // Ensure tasksContainer is created and appended only once\n    if (!tasksContainer) {\n        tasksContainer = document.createElement('div');\n        tasksContainer.classList.add('tasks-container');\n        document.querySelector('.main-content').appendChild(tasksContainer);\n    }\n\n    const addNewTaskDiv = document.querySelector('.add-new-task');\n\n    // Attach the event listener to the .add-new-task div\n    addNewTaskDiv.addEventListener('click', () => {\n        const dialog = createAddTaskDialog();\n        document.body.appendChild(dialog);\n        dialog.showModal();\n\n        const cancelButton = dialog.querySelector('.cancel-btn'); \n        const addButton = dialog.querySelector('.add-btn');\n\n        cancelButton.addEventListener('click', () => {\n            dialog.close();\n            document.body.removeChild(dialog); // removing the dialog after closing\n        });\n\n        addButton.addEventListener('click', (e) =>{\n            e.preventDefault();\n\n            const title = dialog.querySelector('#task-title').value;\n            const priority = dialog.querySelector('#priority').value;\n            const schedule = dialog.querySelector('#schedule').value;\n\n            const newTask = {\n                title: title,\n                priority: priority,\n                schedule: schedule,\n                done: false\n            };\n\n            tasksArr.push(newTask);\n\n            dialog.close();\n            document.body.removeChild(dialog);\n\n            renderNewTask(); // handle rendering all tasks\n        });\n    });\n}\n\n;// CONCATENATED MODULE: ./src/projectManager.js\nfunction enableProjectAddition() {\n    const addProjectLink = document.querySelector('.add-project');\n\n    // Create the input container if it doesn't exist\n    let projectNameInputContainer = document.querySelector('.project-name-input-container');\n    if (!projectNameInputContainer) {\n        projectNameInputContainer = document.createElement('div');\n        projectNameInputContainer.classList.add('project-name-input-container');\n\n        const projectNameInput = document.createElement('input');\n        projectNameInput.type = 'text';\n\n        // add and cancel buttons\n        const buttonsContainer = document.createElement('div');\n        buttonsContainer.classList.add('buttons-container');\n\n\n        const addBtn = document.createElement('button');\n        addBtn.textContent = 'Add';\n        addBtn.classList.add('add-project-btn');\n\n        const cancelBtn = document.createElement('button');\n        cancelBtn.textContent = 'Cancel';\n        cancelBtn.classList.add('cancel-adding-btn')\n\n        projectNameInputContainer.appendChild(projectNameInput);\n        buttonsContainer.appendChild(cancelBtn);\n        buttonsContainer.appendChild(addBtn);\n        projectNameInputContainer.appendChild(buttonsContainer);\n\n        // Append the container to the DOM\n        addProjectLink.after(projectNameInputContainer);\n\n        // Initially show the input container\n        projectNameInputContainer.style.display = 'flex';\n\n        // Hide the container and clear the input when 'Cancel' is clicked\n        cancelBtn.addEventListener('click', () => {\n            projectNameInputContainer.style.display = 'none';\n            projectNameInput.value = '';\n        });\n\n        // Add the new project name when add project is clicked\n        addBtn.addEventListener('click', ()=>{\n            const projectsNamesContainer = document.createElement('div');\n            projectsNamesContainer.classList.add('projects-names-container');\n\n            const projectNameContainer = document.createElement('div');\n            projectNameContainer.classList.add('project-name-container');\n\n            const projectName = document.createElement('div');\n            const projectNameValue = projectNameInput.value.trim();\n            projectName.textContent = projectNameValue;\n            projectName.classList.add('project-name');\n \n            projectNameContainer.appendChild(projectName);\n\n            projectsNamesContainer.appendChild(projectNameContainer);\n            addProjectLink.after(projectsNamesContainer);\n\n            projectNameInputContainer.style.display = 'none';\n            projectNameInput.value = '';\n\n\n            \n\n\n        })\n\n        // Add an event listener for the add project link\n        addProjectLink.addEventListener('click', () => {\n            projectNameInputContainer.style.display = projectNameInputContainer.style.display === 'none' ? 'flex' : 'none';\n        });\n    }\n}\n\n;// CONCATENATED MODULE: ./src/UI.js\n\n\n\nfunction updateMainContent(){\n    const mainContent = document.querySelector('.main-content');\n\n    \n    // Grab all sidebar links\n    const sidebarLinks = document.querySelectorAll('.sidebar a');\n    \n    // Add an event listener to each link\n    sidebarLinks.forEach(link => {\n        link.addEventListener('click', (event) => {\n            event.preventDefault();  // Prevent the default link action\n            // Clear the main content\n            mainContent.textContent = ' ';\n\n            // Determine which function to call based on clicked link's class\n            if(link.classList.contains('inbox')){\n                const inboxContent = renderInbox();\n                mainContent.appendChild(inboxContent);\n                addTaskDialog();\n            }\n            else if(link.classList.contains('today')){\n                // mainContent.textContent = renderToday();\n            }\n            else if(link.classList.contains('completed')){\n                // mainContent.textContent = renderCompleted();\n            }\n            else if(link.classList.contains('important')){\n                // mainContent.textContent = renderImportant();\n            }\n            else if(link.classList.contains('add-project')){\n                enableProjectAddition();\n            };\n        });\n    });\n};\n\n// DOM for to do list tasks\n\nfunction clearTasks() {\n    const allTasksContainer = document.querySelector('.all-tasks-container');\n    allTasksContainer.innerHTML = '';\n}\n\n\nfunction createTaskElement(task) {\n        const taskContainer = document.createElement('div');\n        taskContainer.classList.add('task-container');\n        const taskStatusTitle = document.createElement('div');\n        taskStatusTitle.classList.add('task-status-title');\n        const taskDetails = document.createElement('div');\n        taskDetails.classList.add('task-details');\n\n        // add the status icon\n        const statusIcon = document.createElement('img');\n        statusIcon.classList.add('circle-icon', 'task-icon');\n        statusIcon.src = \"./images/circle_FILL0_wght400_GRAD0_opsz24.svg\";\n        taskStatusTitle.appendChild(statusIcon);\n\n        // add task title \n        const taskTitle = document.createElement('p');\n        taskTitle.classList.add('task-title');\n        taskTitle.textContent = task.title;\n        taskStatusTitle.appendChild(taskTitle);\n\n\n        // add schedule\n        const schedule = document.createElement('span');\n        schedule.classList.add('schedule');\n        schedule.textContent = task.schedule;\n        taskDetails.appendChild(schedule);\n\n        // add priority\n        const priority = document.createElement('span');\n        priority.classList.add('priority');\n        priority.textContent = task.priority;\n        taskDetails.appendChild(priority);\n\n        // add other icons\n\n        const editIcon = document.createElement('img');\n        editIcon.classList.add('edit-icon', 'task-icon');\n        editIcon.src = \"./images/edit_FILL0_wght400_GRAD0_opsz24.svg\";\n        taskDetails.appendChild(editIcon);\n\n\n        const trashIcon = document.createElement('img');\n        trashIcon.classList.add('trash-icon', 'task-icon');\n        trashIcon.src = \"./images/delete_FILL0_wght400_GRAD0_opsz24.svg\";\n        taskDetails.appendChild(trashIcon);\n\n        taskContainer.appendChild(taskStatusTitle);\n        taskContainer.appendChild(taskDetails);\n\n    return taskContainer; \n}\n\nfunction addTaskToContainer(taskElement) {\n    const allTasksContainer = document.querySelector('.all-tasks-container');\n    allTasksContainer.appendChild(taskElement);\n}\n\nfunction removeTaskFromContainer(taskElement) {\n    const allTasksContainer = document.querySelector('.all-tasks-container');\n    allTasksContainer.removeChild(taskElement);\n}\n\nfunction toggleStatusIcon(task, taskElement){\n    const statusIcon = taskElement.querySelector('.circle-icon');\n    task.done = !task.done;\n    const taskTitle = taskElement.querySelector('.task-title');\n\n    if(task.done){\n        statusIcon.src = \"images/check_circle_FILL0_wght400_GRAD0_opsz24.svg\";\n        taskTitle.style.textDecoration = 'line-through';\n    }else{\n        statusIcon.src = \"./images/circle_FILL0_wght400_GRAD0_opsz24.svg\";\n        taskTitle.style.textDecoration = 'none';\n    }\n};\n\n\n\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\ninitializeWebsite()\nupdateMainContent()//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzk3LmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFVBQVUseUdBQXlHO0FBQ25ILFVBQVUsMEdBQTBHO0FBQ3BILFVBQVUsc0hBQXNIO0FBQ2hJLFVBQVUseUhBQXlIO0FBQ25JLFVBQVU7QUFDVjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDOztBQUV4Qzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVlO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOzs7O0FDekdtQztBQUNpRjs7QUFFN0c7QUFDUCxJQUFJLFVBQVUsSUFBSTs7QUFFbEIsSUFBSSxRQUFRO0FBQ1osNEJBQTRCLGlCQUFpQixTQUFTOztBQUV0RDtBQUNBLGtGQUFrRixnQkFBZ0I7QUFDbEc7QUFDQSxZQUFZLHVCQUF1QjtBQUNuQyxZQUFZLFFBQVEsb0JBQW9CO0FBQ3hDLFNBQVM7O0FBRVQsUUFBUSxrQkFBa0IsZ0JBQWdCO0FBQzFDLEtBQUs7QUFDTDs7O0FDbEIyQzs7QUFFcEM7QUFDUDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esb0JBQW9CO0FBQ2I7O0FBRUE7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwrQ0FBK0M7QUFDL0MsU0FBUzs7QUFFVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQSxZQUFZLGFBQWEsSUFBSTtBQUM3QixTQUFTO0FBQ1QsS0FBSztBQUNMOzs7QUNoTU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTs7O0FBR0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7O0FDMUV1RDtBQUNFOztBQUVsRDtBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFDQUFxQyxXQUFXO0FBQ2hEO0FBQ0EsZ0JBQWdCLGFBQWE7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxQkFBcUI7QUFDckM7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMOztBQUVBOztBQUVPO0FBQ1A7QUFDQTtBQUNBOzs7QUFHTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUN6SG9EO0FBQ1g7O0FBRXpDLGlCQUFpQjtBQUNqQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5pdGlhbGl6ZVdlYnNpdGUuanM/Mjc0ZSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvdG9Eb0l0ZW0uanM/OGYwOSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5ib3guanM/ZWEyZSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvcHJvamVjdE1hbmFnZXIuanM/ZGQyYyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvVUkuanM/YTE2MiIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBjcmVhdGVIZWFkZXIoKXtcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoZWFkZXInKTtcblxuICAgIGNvbnN0IGhlYWRlckxvZ28gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICBoZWFkZXJMb2dvLmNsYXNzTGlzdC5hZGQoJ2xvZ28nKTtcbiAgICBoZWFkZXJMb2dvLnNyYyA9IFwiLi9pbWFnZXMvdG9kb2xpc3Quc3ZnXCI7XG4gICAgaGVhZGVyTG9nby5hbHQgPSAnbG9nbyc7XG5cbiAgICBjb25zdCBoZWFkZXJIMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XG4gICAgaGVhZGVySDEudGV4dENvbnRlbnQgPSAnVG9kbyBMaXN0JztcblxuICAgIGhlYWRlci5hcHBlbmRDaGlsZChoZWFkZXJMb2dvKTtcbiAgICBoZWFkZXIuYXBwZW5kQ2hpbGQoaGVhZGVySDEpO1xuICAgIHJldHVybiBoZWFkZXI7XG59XG5cblxuZnVuY3Rpb24gY3JlYXRlU2lkZWJhcigpIHtcbiAgICBjb25zdCBuYXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCduYXYnKTtcbiAgICBjb25zdCBzaWRlYmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc2lkZWJhci5jbGFzc0xpc3QuYWRkKCdzaWRlYmFyJyk7XG5cbiAgICBjb25zdCBzaWRlYmFySXRlbXMgPSBbXG4gICAgICAgIHsgY2xhc3M6ICdpbmJveCcsIHRleHQ6ICdJbmJveCcsIGltZ1NyYzogJy4vaW1hZ2VzL2luYm94X0ZJTEwwX3dnaHQ0MDBfR1JBRDBfb3BzejI0LnN2ZycsIGFsdFRleHQ6ICdpbmJveCd9LFxuICAgICAgICB7IGNsYXNzOiAndG9kYXknLCB0ZXh0OiAnVG9kYXknLCBpbWdTcmM6ICcuL2ltYWdlcy90b2RheV9GSUxMMF93Z2h0NDAwX0dSQUQwX29wc3oyNC5zdmcnLCBhbHRUZXh0OiAndG9kYXknIH0sXG4gICAgICAgIHsgY2xhc3M6ICdpbXBvcnRhbnQnLCB0ZXh0OiAnSW1wb3J0YW50JywgaW1nU3JjOiAnLi9pbWFnZXMvc3RhcnNfRklMTDBfd2dodDQwMF9HUkFEMF9vcHN6MjQuc3ZnJywgYWx0VGV4dDogJ2ltcG9ydGFudCcgfSxcbiAgICAgICAgeyBjbGFzczogJ2NvbXBsZXRlZCcsIHRleHQ6ICdDb21wbGV0ZWQnLCBpbWdTcmM6ICcuL2ltYWdlcy9kb25lX2FsbF9GSUxMMF93Z2h0NDAwX0dSQUQwX29wc3oyNC5zdmcnLCBhbHRUZXh0OiAnY29tcGxldGVkJyB9LFxuICAgICAgICB7IGNsYXNzOiAnYWRkLXByb2plY3QnLCB0ZXh0OiAnUHJvamVjdHMnLCBpbWdTcmM6ICcuL2ltYWdlcy9hZGRfRklMTDBfd2dodDQwMF9HUkFEMF9vcHN6MjQuc3ZnJywgYWx0VGV4dDogJ3BsdXMnIH1cbiAgICBdO1xuXG4gICAgLy8gTG9vcCB0aHJvdWdoIGVhY2ggc2lkZWJhciBpdGVtIGFuZCBjcmVhdGUgaXRzIGVsZW1lbnRzXG4gICAgc2lkZWJhckl0ZW1zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgIGNvbnN0IGFuY2hvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgICAgYW5jaG9yLmNsYXNzTGlzdC5hZGQoaXRlbS5jbGFzcyk7XG5cbiAgICAgICAgY29uc3QgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgICAgIGltZy5zcmMgPSBpdGVtLmltZ1NyYztcbiAgICAgICAgaW1nLmFsdCA9IGl0ZW0uYWx0VGV4dDtcbiAgICAgICAgaW1nLmNsYXNzTGlzdC5hZGQoJ25hdmJhcicsICdpY29uJyk7XG5cbiAgICAgICAgY29uc3QgcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgcC50ZXh0Q29udGVudCA9IGl0ZW0udGV4dDtcbiAgICAgICAgcC5jbGFzc0xpc3QuYWRkKGl0ZW0uY2xhc3MpO1xuXG4gICAgICAgIGlmIChpdGVtLmNsYXNzID09PSAnYWRkLXByb2plY3QnKSB7XG4gICAgICAgICAgICAvLyBBcHBlbmQgdGhlIHRleHQgYmVmb3JlIHRoZSBpY29uXG4gICAgICAgICAgICBhbmNob3IuYXBwZW5kQ2hpbGQocCk7XG4gICAgICAgICAgICBhbmNob3IuYXBwZW5kQ2hpbGQoaW1nKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIEFwcGVuZCB0aGUgaWNvbiBiZWZvcmUgdGhlIHRleHRcbiAgICAgICAgICAgIGFuY2hvci5hcHBlbmRDaGlsZChpbWcpO1xuICAgICAgICAgICAgYW5jaG9yLmFwcGVuZENoaWxkKHApO1xuICAgICAgICB9XG4gICAgICAgIHNpZGViYXIuYXBwZW5kQ2hpbGQoYW5jaG9yKTtcbiAgICB9KTtcblxuICAgIG5hdi5hcHBlbmRDaGlsZChzaWRlYmFyKTtcblxuICAgIHJldHVybiBuYXY7IFxufVxuXG5mdW5jdGlvbiBjcmVhdGVNYWluKCl7XG4gICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ21haW4nKTtcbiAgICBtYWluLmNsYXNzTGlzdC5hZGQoJ21haW4tY29udGVudCcpO1xuXG4gICAgcmV0dXJuIG1haW47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUZvb3RlcigpIHtcbiAgICBjb25zdCBmb290ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb290ZXInKTtcblxuICAgIGNvbnN0IHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgcC50ZXh0Q29udGVudCA9ICdDb3B5cmlnaHQgwqkgMjAyMyAnO1xuXG4gICAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICBhLmhyZWYgPSAnaHR0cHM6Ly9naXRodWIuY29tL3phaHJhYmF0ZW5pbmlhJztcbiAgICBhLnRleHRDb250ZW50ID0gJ3phaHJhYmF0ZW5pbmlhJzsgXG4gICAgYS5zZXRBdHRyaWJ1dGUoJ3RhcmdldCcsICdfYmxhbmsnKTsgLy8gT3BlbnMgbGluayBpbiBuZXcgdGFiXG5cbiAgICBwLmFwcGVuZENoaWxkKGEpO1xuXG4gICAgY29uc3QgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgaW1nLnNyYyA9ICdpbWFnZXMvZ2l0aHViLnN2Zyc7XG4gICAgaW1nLmFsdCA9ICdnaXRodWInO1xuXG4gICAgZm9vdGVyLmFwcGVuZENoaWxkKHApO1xuICAgIGZvb3Rlci5hcHBlbmRDaGlsZChpbWcpO1xuXG4gICAgcmV0dXJuIGZvb3Rlcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5pdGlhbGl6ZVdlYnNpdGUoKXtcbiAgICBjb25zdCB3cmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgd3JhcHBlci5jbGFzc0xpc3QuYWRkKCd3cmFwcGVyJyk7XG5cbiAgICBjb25zdCBodG1sQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50Jyk7XG4gICAgaHRtbENvbnRlbnQuYXBwZW5kQ2hpbGQod3JhcHBlcik7XG5cbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGNyZWF0ZUhlYWRlcigpKTtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGNyZWF0ZVNpZGViYXIoKSk7XG4gICAgd3JhcHBlci5hcHBlbmRDaGlsZChjcmVhdGVNYWluKCkpO1xuICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoY3JlYXRlRm9vdGVyKCkpO1xuXG4gICAgcmV0dXJuIHdyYXBwZXI7XG5cbn1cblxuIiwiaW1wb3J0IHsgdGFza3NBcnIgfSBmcm9tIFwiLi9pbmJveFwiO1xuaW1wb3J0IHsgY3JlYXRlVGFza0VsZW1lbnQsIGFkZFRhc2tUb0NvbnRhaW5lciwgdG9nZ2xlU3RhdHVzSWNvbiwgcmVtb3ZlVGFza0Zyb21Db250YWluZXIsIGNsZWFyVGFza3MgfSBmcm9tIFwiLi9VSVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyTmV3VGFzaygpe1xuICAgIGNsZWFyVGFza3MoKTsgLy8gQ2xlYXIgYWxsIHByZXZpb3VzIHRhc2tzIGJlZm9yZSByZW5kZXJpbmcgbmV3IG9uZXNcblxuICAgIHRhc2tzQXJyLmZvckVhY2goKHRhc2ssIGluZGV4KSA9PiB7XG4gICAgICAgIGNvbnN0IHRhc2tFbGVtZW50ID0gY3JlYXRlVGFza0VsZW1lbnQodGFzayk7ICAvLyBDcmVhdGVzIG5ldyB0YXNrIGVsZW1lbnRcblxuICAgICAgICAvLyBBZGQgZXZlbnQgbGlzdGVuZXJzIGZvciB0b2dnbGluZyBjb21wbGV0aW9uIGFuZCByZW1vdmluZyB0YXNrXG4gICAgICAgIHRhc2tFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jaXJjbGUtaWNvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdG9nZ2xlU3RhdHVzSWNvbih0YXNrLCB0YXNrRWxlbWVudCkpO1xuICAgICAgICB0YXNrRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcudHJhc2gtaWNvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgcmVtb3ZlVGFza0Zyb21Db250YWluZXIodGFza0VsZW1lbnQpO1xuICAgICAgICAgICAgdGFza3NBcnIuc3BsaWNlKGluZGV4LCAxKTsgIC8vIFJlbW92ZSB0aGUgdGFzayBmcm9tIHRoZSBhcnJheVxuICAgICAgICB9KTtcblxuICAgICAgICBhZGRUYXNrVG9Db250YWluZXIodGFza0VsZW1lbnQpOyAgLy8gQWRkcyB0YXNrIGVsZW1lbnQgdG8gY29udGFpbmVyXG4gICAgfSk7XG59XG4iLCJpbXBvcnQgeyByZW5kZXJOZXdUYXNrIH0gZnJvbSBcIi4vdG9Eb0l0ZW1cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlckluYm94KCl7XG4gICAgY29uc3QgaW5ib3hEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBpbmJveERpdi5jbGFzc0xpc3QuYWRkKCdpbmJveC1kaXYnKTtcblxuICAgIGNvbnN0IGluYm94SDE9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XG4gICAgaW5ib3hIMS50ZXh0Q29udGVudD0gJ0luYm94JztcblxuICAgIC8vIGFsbCB0YXNrcyBjb250YWluZXIgd2hpY2ggaXMgYmVsb3cgdGhlIGhlYWRlciBhbmQgYWJvdmUgdGhlIGFkZCBuZXcgdGFzayBkaXZcbiAgICBjb25zdCBhbGxUYXNrc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGFsbFRhc2tzQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2FsbC10YXNrcy1jb250YWluZXInKTtcblxuXG4gICAgY29uc3QgYWRkTmV3VGFza0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGFkZE5ld1Rhc2tEaXYuY2xhc3NMaXN0LmFkZCgnYWRkLW5ldy10YXNrJyk7XG5cbiAgICBjb25zdCBwbHVzSWNvbiA9ICBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICBwbHVzSWNvbi5zcmMgPSAnLi9pbWFnZXMvYWRkX0ZJTEwwX3dnaHQ0MDBfR1JBRDBfb3BzejI0LnN2Zyc7XG4gICAgcGx1c0ljb24uY2xhc3NMaXN0LmFkZCgndGFzay1wbHVzLWljb24nKVxuICAgIHBsdXNJY29uLmFsdCA9ICdwbHVzJztcbiAgICBhZGROZXdUYXNrRGl2LmFwcGVuZENoaWxkKHBsdXNJY29uKTtcblxuICAgIGNvbnN0IGFkZFRhc2tQID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIGFkZFRhc2tQLmNsYXNzTGlzdC5hZGQoJ2FkZC10YXNrLXRleHQnKTtcbiAgICBhZGRUYXNrUC50ZXh0Q29udGVudCA9ICdBZGQgYSBuZXcgdGFzaydcbiAgICBhZGROZXdUYXNrRGl2LmFwcGVuZENoaWxkKGFkZFRhc2tQKTtcbiAgICBcbiAgICBpbmJveERpdi5hcHBlbmRDaGlsZChpbmJveEgxKTtcbiAgICBpbmJveERpdi5hcHBlbmRDaGlsZChhbGxUYXNrc0NvbnRhaW5lcik7XG4gICAgaW5ib3hEaXYuYXBwZW5kQ2hpbGQoYWRkTmV3VGFza0Rpdik7XG4gICAgY3JlYXRlQWRkVGFza0RpYWxvZygpO1xuICAgIHJldHVybiBpbmJveERpdjtcbn07XG5cblxuXG5mdW5jdGlvbiBjcmVhdGVBZGRUYXNrRGlhbG9nKCkge1xuICAgIC8vIENyZWF0ZSBkaWFsb2cgZWxlbWVudFxuICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpYWxvZycpO1xuICAgIGRpYWxvZy5jbGFzc0xpc3QuYWRkKCdhZGQtdGFzay1kaWFsb2cnKTtcblxuICAgIC8vIENyZWF0ZSBkaWFsb2cgdGl0bGVcbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XG4gICAgdGl0bGUuY2xhc3NMaXN0LmFkZCgnZGlhbG9nLXRpdGxlJyk7XG4gICAgdGl0bGUudGV4dENvbnRlbnQgPSAnTmV3IFRhc2snO1xuXG4gICAgLy8gQ3JlYXRlIGZvcm1cbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xuICAgIGZvcm0uYWN0aW9uID0gXCJkaWFsb2dcIjsgXG5cbiAgICAvLyBGb3JtIGlucHV0c1xuICAgIGNvbnN0IGlucHV0c0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICBpbnB1dHNEaXYuY2xhc3NMaXN0LmFkZCgnaW5wdXRzRGl2Jyk7XG5cbiAgICAvLyBsYWJlbCBpbnB1dCBkaXYgZm9yIGVhY2ggb2YgaW5wdXRzXG4gICAgY29uc3QgaW5kaXZpZHVhbElucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgaW5kaXZpZHVhbElucHV0LmNsYXNzTGlzdC5hZGQoJ2luZGl2aWR1YWwtaW5wdXQnKTtcblxuXG4gICAgLy8gVGFzayB0aXRsZSBpbnB1dFxuICAgIGNvbnN0IHRhc2tUaXRsZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRhc2tUaXRsZURpdi5jbGFzc0xpc3QuYWRkKCd0YXNrLXRpdGxlJyk7XG4gICAgY29uc3QgdGFza1RpdGxlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIHRhc2tUaXRsZUxhYmVsLmh0bWxGb3IgPSAndGFzay10aXRsZSc7XG4gICAgdGFza1RpdGxlTGFiZWwudGV4dENvbnRlbnQgPSAnVGFzayBUaXRsZSonO1xuICAgIGNvbnN0IHRhc2tUaXRsZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICB0YXNrVGl0bGVJbnB1dC50eXBlID0gJ3RleHQnO1xuICAgIHRhc2tUaXRsZUlucHV0Lm5hbWUgPSAndGFzay10aXRsZSc7XG4gICAgdGFza1RpdGxlSW5wdXQuaWQgPSAndGFzay10aXRsZSc7XG4gICAgdGFza1RpdGxlSW5wdXQuY2xhc3NMaXN0LmFkZCgndGFzay10aXRsZS0taW5wdXQnKTtcbiAgICB0YXNrVGl0bGVJbnB1dC5wbGFjZWhvbGRlciA9ICdlLmcuIFdvcmtvdXQnO1xuICAgIHRhc2tUaXRsZUlucHV0LnJlcXVpcmVkID0gdHJ1ZTtcbiAgICB0YXNrVGl0bGVEaXYuYXBwZW5kQ2hpbGQodGFza1RpdGxlTGFiZWwpO1xuICAgIHRhc2tUaXRsZURpdi5hcHBlbmRDaGlsZCh0YXNrVGl0bGVJbnB1dCk7XG5cbiAgICBpbmRpdmlkdWFsSW5wdXQuYXBwZW5kQ2hpbGQodGFza1RpdGxlRGl2KTtcblxuICAgIC8vIFByaW9yaXR5IHNlbGVjdFxuICAgIGNvbnN0IHByaW9yaXR5RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgcHJpb3JpdHlEaXYuY2xhc3NMaXN0LmFkZCgncHJpb3JpdHknKTtcbiAgICBjb25zdCBwcmlvcml0eUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBwcmlvcml0eUxhYmVsLmh0bWxGb3IgPSAncHJpb3JpdHknO1xuICAgIHByaW9yaXR5TGFiZWwudGV4dENvbnRlbnQgPSAnUHJpb3JpdHknO1xuICAgIGNvbnN0IHByaW9yaXR5U2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VsZWN0Jyk7XG4gICAgcHJpb3JpdHlTZWxlY3QubmFtZSA9ICdwcmlvcml0eSc7XG4gICAgcHJpb3JpdHlTZWxlY3QuaWQgPSAncHJpb3JpdHknO1xuICAgIHByaW9yaXR5U2VsZWN0LmNsYXNzTGlzdC5hZGQoJ3ByaW9yaXR5LS1zZWxlY3QnKTtcbiAgICBbJ0xvdycsICdNZWRpdW0nLCAnSGlnaCddLmZvckVhY2goKHByaW9yaXR5KSA9PiB7XG4gICAgICAgIGNvbnN0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICAgICAgICBvcHRpb24udmFsdWUgPSBwcmlvcml0eS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBvcHRpb24udGV4dENvbnRlbnQgPSBwcmlvcml0eTtcbiAgICAgICAgcHJpb3JpdHlTZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcbiAgICB9KTtcbiAgICBwcmlvcml0eURpdi5hcHBlbmRDaGlsZChwcmlvcml0eUxhYmVsKTtcbiAgICBwcmlvcml0eURpdi5hcHBlbmRDaGlsZChwcmlvcml0eVNlbGVjdCk7XG5cbiAgICBpbmRpdmlkdWFsSW5wdXQuYXBwZW5kQ2hpbGQocHJpb3JpdHlEaXYpO1xuXG4gICAgLy8gU2NoZWR1bGUgZGF0ZSBpbnB1dFxuICAgIGNvbnN0IHNjaGVkdWxlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc2NoZWR1bGVEaXYuY2xhc3NMaXN0LmFkZCgnc2NoZWR1bGUnKTtcbiAgICBjb25zdCBzY2hlZHVsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBzY2hlZHVsZUxhYmVsLmh0bWxGb3IgPSAnc2NoZWR1bGUnO1xuICAgIHNjaGVkdWxlTGFiZWwudGV4dENvbnRlbnQgPSAnU2NoZWR1bGUnO1xuICAgIGNvbnN0IHNjaGVkdWxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHNjaGVkdWxlSW5wdXQudHlwZSA9ICdkYXRlJztcbiAgICBzY2hlZHVsZUlucHV0Lm5hbWUgPSAnc2NoZWR1bGUnO1xuICAgIHNjaGVkdWxlSW5wdXQuaWQgPSAnc2NoZWR1bGUnO1xuICAgIHNjaGVkdWxlSW5wdXQuY2xhc3NMaXN0LmFkZCgnZHVlLWRhdGUnKTtcbiAgICBzY2hlZHVsZURpdi5hcHBlbmRDaGlsZChzY2hlZHVsZUxhYmVsKTtcbiAgICBzY2hlZHVsZURpdi5hcHBlbmRDaGlsZChzY2hlZHVsZUlucHV0KTtcblxuICAgIGluZGl2aWR1YWxJbnB1dC5hcHBlbmRDaGlsZChzY2hlZHVsZURpdik7XG5cbiAgICAvLyBCdXR0b25zXG4gICAgY29uc3QgYnV0dG9uc0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGJ1dHRvbnNEaXYuY2xhc3NMaXN0LmFkZCgnYnV0dG9ucycpO1xuICAgIGNvbnN0IGNhbmNlbEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNhbmNlbEJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdjYW5jZWwtYnRuJyk7XG4gICAgY2FuY2VsQnV0dG9uLnRleHRDb250ZW50ID0gJ0NhbmNlbCc7XG4gICAgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgYWRkQnV0dG9uLnR5cGUgPSAnc3VibWl0JztcbiAgICBhZGRCdXR0b24uY2xhc3NMaXN0LmFkZCgnYWRkLWJ0bicpO1xuICAgIGFkZEJ1dHRvbi50ZXh0Q29udGVudCA9ICdBZGQnO1xuICAgIGJ1dHRvbnNEaXYuYXBwZW5kQ2hpbGQoY2FuY2VsQnV0dG9uKTtcbiAgICBidXR0b25zRGl2LmFwcGVuZENoaWxkKGFkZEJ1dHRvbik7XG5cbiAgICAvLyBBcHBlbmQgYWxsIGlucHV0cyBhbmQgdGhlaXIgbGFiZWxzIGluIGlucHV0c0RpdiBcbiAgICBpbnB1dHNEaXYuYXBwZW5kQ2hpbGQoaW5kaXZpZHVhbElucHV0KTtcblxuICAgIC8vIEFwcGVuZCBhbGwgcGFydHMgdG8gZm9ybVxuICAgIGZvcm0uYXBwZW5kQ2hpbGQoaW5wdXRzRGl2KTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGJ1dHRvbnNEaXYpO1xuXG4gICAgLy8gQXBwZW5kIGZvcm0gdG8gZGlhbG9nXG4gICAgZGlhbG9nLmFwcGVuZENoaWxkKHRpdGxlKTtcbiAgICBkaWFsb2cuYXBwZW5kQ2hpbGQoZm9ybSk7XG5cbiAgICByZXR1cm4gZGlhbG9nO1xufTtcblxuLy8gR2xvYmFsIHRhc2tzIGNvbnRhaW5lclxubGV0IHRhc2tzQ29udGFpbmVyOyAvLyBXaWxsIGJlIGluaXRpYWxpemVkIG9ubHkgb25jZVxuZXhwb3J0IGNvbnN0IHRhc2tzQXJyID0gW107XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRUYXNrRGlhbG9nKCkge1xuICAgIC8vIEVuc3VyZSB0YXNrc0NvbnRhaW5lciBpcyBjcmVhdGVkIGFuZCBhcHBlbmRlZCBvbmx5IG9uY2VcbiAgICBpZiAoIXRhc2tzQ29udGFpbmVyKSB7XG4gICAgICAgIHRhc2tzQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRhc2tzQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3Rhc2tzLWNvbnRhaW5lcicpO1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWFpbi1jb250ZW50JykuYXBwZW5kQ2hpbGQodGFza3NDb250YWluZXIpO1xuICAgIH1cblxuICAgIGNvbnN0IGFkZE5ld1Rhc2tEaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLW5ldy10YXNrJyk7XG5cbiAgICAvLyBBdHRhY2ggdGhlIGV2ZW50IGxpc3RlbmVyIHRvIHRoZSAuYWRkLW5ldy10YXNrIGRpdlxuICAgIGFkZE5ld1Rhc2tEaXYuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpYWxvZyA9IGNyZWF0ZUFkZFRhc2tEaWFsb2coKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaWFsb2cpO1xuICAgICAgICBkaWFsb2cuc2hvd01vZGFsKCk7XG5cbiAgICAgICAgY29uc3QgY2FuY2VsQnV0dG9uID0gZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoJy5jYW5jZWwtYnRuJyk7IFxuICAgICAgICBjb25zdCBhZGRCdXR0b24gPSBkaWFsb2cucXVlcnlTZWxlY3RvcignLmFkZC1idG4nKTtcblxuICAgICAgICBjYW5jZWxCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICBkaWFsb2cuY2xvc2UoKTtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZGlhbG9nKTsgLy8gcmVtb3ZpbmcgdGhlIGRpYWxvZyBhZnRlciBjbG9zaW5nXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PntcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgY29uc3QgdGl0bGUgPSBkaWFsb2cucXVlcnlTZWxlY3RvcignI3Rhc2stdGl0bGUnKS52YWx1ZTtcbiAgICAgICAgICAgIGNvbnN0IHByaW9yaXR5ID0gZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoJyNwcmlvcml0eScpLnZhbHVlO1xuICAgICAgICAgICAgY29uc3Qgc2NoZWR1bGUgPSBkaWFsb2cucXVlcnlTZWxlY3RvcignI3NjaGVkdWxlJykudmFsdWU7XG5cbiAgICAgICAgICAgIGNvbnN0IG5ld1Rhc2sgPSB7XG4gICAgICAgICAgICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgICAgICAgICAgIHByaW9yaXR5OiBwcmlvcml0eSxcbiAgICAgICAgICAgICAgICBzY2hlZHVsZTogc2NoZWR1bGUsXG4gICAgICAgICAgICAgICAgZG9uZTogZmFsc2VcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRhc2tzQXJyLnB1c2gobmV3VGFzayk7XG5cbiAgICAgICAgICAgIGRpYWxvZy5jbG9zZSgpO1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChkaWFsb2cpO1xuXG4gICAgICAgICAgICByZW5kZXJOZXdUYXNrKCk7IC8vIGhhbmRsZSByZW5kZXJpbmcgYWxsIHRhc2tzXG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGVuYWJsZVByb2plY3RBZGRpdGlvbigpIHtcbiAgICBjb25zdCBhZGRQcm9qZWN0TGluayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtcHJvamVjdCcpO1xuXG4gICAgLy8gQ3JlYXRlIHRoZSBpbnB1dCBjb250YWluZXIgaWYgaXQgZG9lc24ndCBleGlzdFxuICAgIGxldCBwcm9qZWN0TmFtZUlucHV0Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3QtbmFtZS1pbnB1dC1jb250YWluZXInKTtcbiAgICBpZiAoIXByb2plY3ROYW1lSW5wdXRDb250YWluZXIpIHtcbiAgICAgICAgcHJvamVjdE5hbWVJbnB1dENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBwcm9qZWN0TmFtZUlucHV0Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QtbmFtZS1pbnB1dC1jb250YWluZXInKTtcblxuICAgICAgICBjb25zdCBwcm9qZWN0TmFtZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgcHJvamVjdE5hbWVJbnB1dC50eXBlID0gJ3RleHQnO1xuXG4gICAgICAgIC8vIGFkZCBhbmQgY2FuY2VsIGJ1dHRvbnNcbiAgICAgICAgY29uc3QgYnV0dG9uc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBidXR0b25zQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2J1dHRvbnMtY29udGFpbmVyJyk7XG5cblxuICAgICAgICBjb25zdCBhZGRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgYWRkQnRuLnRleHRDb250ZW50ID0gJ0FkZCc7XG4gICAgICAgIGFkZEJ0bi5jbGFzc0xpc3QuYWRkKCdhZGQtcHJvamVjdC1idG4nKTtcblxuICAgICAgICBjb25zdCBjYW5jZWxCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgY2FuY2VsQnRuLnRleHRDb250ZW50ID0gJ0NhbmNlbCc7XG4gICAgICAgIGNhbmNlbEJ0bi5jbGFzc0xpc3QuYWRkKCdjYW5jZWwtYWRkaW5nLWJ0bicpXG5cbiAgICAgICAgcHJvamVjdE5hbWVJbnB1dENvbnRhaW5lci5hcHBlbmRDaGlsZChwcm9qZWN0TmFtZUlucHV0KTtcbiAgICAgICAgYnV0dG9uc0NvbnRhaW5lci5hcHBlbmRDaGlsZChjYW5jZWxCdG4pO1xuICAgICAgICBidXR0b25zQ29udGFpbmVyLmFwcGVuZENoaWxkKGFkZEJ0bik7XG4gICAgICAgIHByb2plY3ROYW1lSW5wdXRDb250YWluZXIuYXBwZW5kQ2hpbGQoYnV0dG9uc0NvbnRhaW5lcik7XG5cbiAgICAgICAgLy8gQXBwZW5kIHRoZSBjb250YWluZXIgdG8gdGhlIERPTVxuICAgICAgICBhZGRQcm9qZWN0TGluay5hZnRlcihwcm9qZWN0TmFtZUlucHV0Q29udGFpbmVyKTtcblxuICAgICAgICAvLyBJbml0aWFsbHkgc2hvdyB0aGUgaW5wdXQgY29udGFpbmVyXG4gICAgICAgIHByb2plY3ROYW1lSW5wdXRDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICdmbGV4JztcblxuICAgICAgICAvLyBIaWRlIHRoZSBjb250YWluZXIgYW5kIGNsZWFyIHRoZSBpbnB1dCB3aGVuICdDYW5jZWwnIGlzIGNsaWNrZWRcbiAgICAgICAgY2FuY2VsQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgcHJvamVjdE5hbWVJbnB1dENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgcHJvamVjdE5hbWVJbnB1dC52YWx1ZSA9ICcnO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBBZGQgdGhlIG5ldyBwcm9qZWN0IG5hbWUgd2hlbiBhZGQgcHJvamVjdCBpcyBjbGlja2VkXG4gICAgICAgIGFkZEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57XG4gICAgICAgICAgICBjb25zdCBwcm9qZWN0c05hbWVzQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBwcm9qZWN0c05hbWVzQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3RzLW5hbWVzLWNvbnRhaW5lcicpO1xuXG4gICAgICAgICAgICBjb25zdCBwcm9qZWN0TmFtZUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgcHJvamVjdE5hbWVDb250YWluZXIuY2xhc3NMaXN0LmFkZCgncHJvamVjdC1uYW1lLWNvbnRhaW5lcicpO1xuXG4gICAgICAgICAgICBjb25zdCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgY29uc3QgcHJvamVjdE5hbWVWYWx1ZSA9IHByb2plY3ROYW1lSW5wdXQudmFsdWUudHJpbSgpO1xuICAgICAgICAgICAgcHJvamVjdE5hbWUudGV4dENvbnRlbnQgPSBwcm9qZWN0TmFtZVZhbHVlO1xuICAgICAgICAgICAgcHJvamVjdE5hbWUuY2xhc3NMaXN0LmFkZCgncHJvamVjdC1uYW1lJyk7XG4gXG4gICAgICAgICAgICBwcm9qZWN0TmFtZUNvbnRhaW5lci5hcHBlbmRDaGlsZChwcm9qZWN0TmFtZSk7XG5cbiAgICAgICAgICAgIHByb2plY3RzTmFtZXNDb250YWluZXIuYXBwZW5kQ2hpbGQocHJvamVjdE5hbWVDb250YWluZXIpO1xuICAgICAgICAgICAgYWRkUHJvamVjdExpbmsuYWZ0ZXIocHJvamVjdHNOYW1lc0NvbnRhaW5lcik7XG5cbiAgICAgICAgICAgIHByb2plY3ROYW1lSW5wdXRDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgIHByb2plY3ROYW1lSW5wdXQudmFsdWUgPSAnJztcblxuXG4gICAgICAgICAgICBcblxuXG4gICAgICAgIH0pXG5cbiAgICAgICAgLy8gQWRkIGFuIGV2ZW50IGxpc3RlbmVyIGZvciB0aGUgYWRkIHByb2plY3QgbGlua1xuICAgICAgICBhZGRQcm9qZWN0TGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIHByb2plY3ROYW1lSW5wdXRDb250YWluZXIuc3R5bGUuZGlzcGxheSA9IHByb2plY3ROYW1lSW5wdXRDb250YWluZXIuc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnID8gJ2ZsZXgnIDogJ25vbmUnO1xuICAgICAgICB9KTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyByZW5kZXJJbmJveCAsICBhZGRUYXNrRGlhbG9nIH0gZnJvbSBcIi4vaW5ib3hcIjtcbmltcG9ydCB7IGVuYWJsZVByb2plY3RBZGRpdGlvbiB9IGZyb20gXCIuL3Byb2plY3RNYW5hZ2VyXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVNYWluQ29udGVudCgpe1xuICAgIGNvbnN0IG1haW5Db250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4tY29udGVudCcpO1xuXG4gICAgXG4gICAgLy8gR3JhYiBhbGwgc2lkZWJhciBsaW5rc1xuICAgIGNvbnN0IHNpZGViYXJMaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zaWRlYmFyIGEnKTtcbiAgICBcbiAgICAvLyBBZGQgYW4gZXZlbnQgbGlzdGVuZXIgdG8gZWFjaCBsaW5rXG4gICAgc2lkZWJhckxpbmtzLmZvckVhY2gobGluayA9PiB7XG4gICAgICAgIGxpbmsuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7ICAvLyBQcmV2ZW50IHRoZSBkZWZhdWx0IGxpbmsgYWN0aW9uXG4gICAgICAgICAgICAvLyBDbGVhciB0aGUgbWFpbiBjb250ZW50XG4gICAgICAgICAgICBtYWluQ29udGVudC50ZXh0Q29udGVudCA9ICcgJztcblxuICAgICAgICAgICAgLy8gRGV0ZXJtaW5lIHdoaWNoIGZ1bmN0aW9uIHRvIGNhbGwgYmFzZWQgb24gY2xpY2tlZCBsaW5rJ3MgY2xhc3NcbiAgICAgICAgICAgIGlmKGxpbmsuY2xhc3NMaXN0LmNvbnRhaW5zKCdpbmJveCcpKXtcbiAgICAgICAgICAgICAgICBjb25zdCBpbmJveENvbnRlbnQgPSByZW5kZXJJbmJveCgpO1xuICAgICAgICAgICAgICAgIG1haW5Db250ZW50LmFwcGVuZENoaWxkKGluYm94Q29udGVudCk7XG4gICAgICAgICAgICAgICAgYWRkVGFza0RpYWxvZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZihsaW5rLmNsYXNzTGlzdC5jb250YWlucygndG9kYXknKSl7XG4gICAgICAgICAgICAgICAgLy8gbWFpbkNvbnRlbnQudGV4dENvbnRlbnQgPSByZW5kZXJUb2RheSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZihsaW5rLmNsYXNzTGlzdC5jb250YWlucygnY29tcGxldGVkJykpe1xuICAgICAgICAgICAgICAgIC8vIG1haW5Db250ZW50LnRleHRDb250ZW50ID0gcmVuZGVyQ29tcGxldGVkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmKGxpbmsuY2xhc3NMaXN0LmNvbnRhaW5zKCdpbXBvcnRhbnQnKSl7XG4gICAgICAgICAgICAgICAgLy8gbWFpbkNvbnRlbnQudGV4dENvbnRlbnQgPSByZW5kZXJJbXBvcnRhbnQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYobGluay5jbGFzc0xpc3QuY29udGFpbnMoJ2FkZC1wcm9qZWN0Jykpe1xuICAgICAgICAgICAgICAgIGVuYWJsZVByb2plY3RBZGRpdGlvbigpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuXG4vLyBET00gZm9yIHRvIGRvIGxpc3QgdGFza3NcblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyVGFza3MoKSB7XG4gICAgY29uc3QgYWxsVGFza3NDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWxsLXRhc2tzLWNvbnRhaW5lcicpO1xuICAgIGFsbFRhc2tzQ29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUYXNrRWxlbWVudCh0YXNrKSB7XG4gICAgICAgIGNvbnN0IHRhc2tDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdGFza0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCd0YXNrLWNvbnRhaW5lcicpO1xuICAgICAgICBjb25zdCB0YXNrU3RhdHVzVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdGFza1N0YXR1c1RpdGxlLmNsYXNzTGlzdC5hZGQoJ3Rhc2stc3RhdHVzLXRpdGxlJyk7XG4gICAgICAgIGNvbnN0IHRhc2tEZXRhaWxzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRhc2tEZXRhaWxzLmNsYXNzTGlzdC5hZGQoJ3Rhc2stZGV0YWlscycpO1xuXG4gICAgICAgIC8vIGFkZCB0aGUgc3RhdHVzIGljb25cbiAgICAgICAgY29uc3Qgc3RhdHVzSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgICAgICBzdGF0dXNJY29uLmNsYXNzTGlzdC5hZGQoJ2NpcmNsZS1pY29uJywgJ3Rhc2staWNvbicpO1xuICAgICAgICBzdGF0dXNJY29uLnNyYyA9IFwiLi9pbWFnZXMvY2lyY2xlX0ZJTEwwX3dnaHQ0MDBfR1JBRDBfb3BzejI0LnN2Z1wiO1xuICAgICAgICB0YXNrU3RhdHVzVGl0bGUuYXBwZW5kQ2hpbGQoc3RhdHVzSWNvbik7XG5cbiAgICAgICAgLy8gYWRkIHRhc2sgdGl0bGUgXG4gICAgICAgIGNvbnN0IHRhc2tUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgdGFza1RpdGxlLmNsYXNzTGlzdC5hZGQoJ3Rhc2stdGl0bGUnKTtcbiAgICAgICAgdGFza1RpdGxlLnRleHRDb250ZW50ID0gdGFzay50aXRsZTtcbiAgICAgICAgdGFza1N0YXR1c1RpdGxlLmFwcGVuZENoaWxkKHRhc2tUaXRsZSk7XG5cblxuICAgICAgICAvLyBhZGQgc2NoZWR1bGVcbiAgICAgICAgY29uc3Qgc2NoZWR1bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgIHNjaGVkdWxlLmNsYXNzTGlzdC5hZGQoJ3NjaGVkdWxlJyk7XG4gICAgICAgIHNjaGVkdWxlLnRleHRDb250ZW50ID0gdGFzay5zY2hlZHVsZTtcbiAgICAgICAgdGFza0RldGFpbHMuYXBwZW5kQ2hpbGQoc2NoZWR1bGUpO1xuXG4gICAgICAgIC8vIGFkZCBwcmlvcml0eVxuICAgICAgICBjb25zdCBwcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgICAgcHJpb3JpdHkuY2xhc3NMaXN0LmFkZCgncHJpb3JpdHknKTtcbiAgICAgICAgcHJpb3JpdHkudGV4dENvbnRlbnQgPSB0YXNrLnByaW9yaXR5O1xuICAgICAgICB0YXNrRGV0YWlscy5hcHBlbmRDaGlsZChwcmlvcml0eSk7XG5cbiAgICAgICAgLy8gYWRkIG90aGVyIGljb25zXG5cbiAgICAgICAgY29uc3QgZWRpdEljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICAgICAgZWRpdEljb24uY2xhc3NMaXN0LmFkZCgnZWRpdC1pY29uJywgJ3Rhc2staWNvbicpO1xuICAgICAgICBlZGl0SWNvbi5zcmMgPSBcIi4vaW1hZ2VzL2VkaXRfRklMTDBfd2dodDQwMF9HUkFEMF9vcHN6MjQuc3ZnXCI7XG4gICAgICAgIHRhc2tEZXRhaWxzLmFwcGVuZENoaWxkKGVkaXRJY29uKTtcblxuXG4gICAgICAgIGNvbnN0IHRyYXNoSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgICAgICB0cmFzaEljb24uY2xhc3NMaXN0LmFkZCgndHJhc2gtaWNvbicsICd0YXNrLWljb24nKTtcbiAgICAgICAgdHJhc2hJY29uLnNyYyA9IFwiLi9pbWFnZXMvZGVsZXRlX0ZJTEwwX3dnaHQ0MDBfR1JBRDBfb3BzejI0LnN2Z1wiO1xuICAgICAgICB0YXNrRGV0YWlscy5hcHBlbmRDaGlsZCh0cmFzaEljb24pO1xuXG4gICAgICAgIHRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza1N0YXR1c1RpdGxlKTtcbiAgICAgICAgdGFza0NvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrRGV0YWlscyk7XG5cbiAgICByZXR1cm4gdGFza0NvbnRhaW5lcjsgXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRUYXNrVG9Db250YWluZXIodGFza0VsZW1lbnQpIHtcbiAgICBjb25zdCBhbGxUYXNrc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGwtdGFza3MtY29udGFpbmVyJyk7XG4gICAgYWxsVGFza3NDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza0VsZW1lbnQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlVGFza0Zyb21Db250YWluZXIodGFza0VsZW1lbnQpIHtcbiAgICBjb25zdCBhbGxUYXNrc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGwtdGFza3MtY29udGFpbmVyJyk7XG4gICAgYWxsVGFza3NDb250YWluZXIucmVtb3ZlQ2hpbGQodGFza0VsZW1lbnQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdG9nZ2xlU3RhdHVzSWNvbih0YXNrLCB0YXNrRWxlbWVudCl7XG4gICAgY29uc3Qgc3RhdHVzSWNvbiA9IHRhc2tFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jaXJjbGUtaWNvbicpO1xuICAgIHRhc2suZG9uZSA9ICF0YXNrLmRvbmU7XG4gICAgY29uc3QgdGFza1RpdGxlID0gdGFza0VsZW1lbnQucXVlcnlTZWxlY3RvcignLnRhc2stdGl0bGUnKTtcblxuICAgIGlmKHRhc2suZG9uZSl7XG4gICAgICAgIHN0YXR1c0ljb24uc3JjID0gXCJpbWFnZXMvY2hlY2tfY2lyY2xlX0ZJTEwwX3dnaHQ0MDBfR1JBRDBfb3BzejI0LnN2Z1wiO1xuICAgICAgICB0YXNrVGl0bGUuc3R5bGUudGV4dERlY29yYXRpb24gPSAnbGluZS10aHJvdWdoJztcbiAgICB9ZWxzZXtcbiAgICAgICAgc3RhdHVzSWNvbi5zcmMgPSBcIi4vaW1hZ2VzL2NpcmNsZV9GSUxMMF93Z2h0NDAwX0dSQUQwX29wc3oyNC5zdmdcIjtcbiAgICAgICAgdGFza1RpdGxlLnN0eWxlLnRleHREZWNvcmF0aW9uID0gJ25vbmUnO1xuICAgIH1cbn07XG5cblxuIiwiaW1wb3J0IGluaXRpYWxpemVXZWJzaXRlIGZyb20gXCIuL2luaXRpYWxpemVXZWJzaXRlXCI7XG5pbXBvcnQgeyB1cGRhdGVNYWluQ29udGVudCB9IGZyb20gXCIuL1VJXCI7XG5cbmluaXRpYWxpemVXZWJzaXRlKClcbnVwZGF0ZU1haW5Db250ZW50KCkiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///397\n")}},__webpack_exports__={};__webpack_modules__[397]()})();