(()=>{"use strict";var __webpack_modules__={918:()=>{eval("\n;// CONCATENATED MODULE: ./src/initializeWebsite.js\nfunction createHeader(){\n    const header = document.createElement('header');\n\n    const headerLogo = document.createElement('img');\n    headerLogo.classList.add('logo');\n    headerLogo.src = \"./images/todolist.svg\";\n    headerLogo.alt = 'logo';\n\n    const headerH1 = document.createElement('h1');\n    headerH1.textContent = 'Todo List';\n\n    header.appendChild(headerLogo);\n    header.appendChild(headerH1);\n    return header;\n}\n\n\nfunction createSidebar() {\n    const nav = document.createElement('nav');\n    const sidebar = document.createElement('div');\n    sidebar.classList.add('sidebar');\n\n    const sidebarItems = [\n        { class: 'inbox', text: 'Inbox', imgSrc: './images/inbox_FILL0_wght400_GRAD0_opsz24.svg', altText: 'inbox'},\n        { class: 'today', text: 'Today', imgSrc: './images/today_FILL0_wght400_GRAD0_opsz24.svg', altText: 'today' },\n        { class: 'important', text: 'Important', imgSrc: './images/stars_FILL0_wght400_GRAD0_opsz24.svg', altText: 'important' },\n        { class: 'completed', text: 'Completed', imgSrc: './images/done_all_FILL0_wght400_GRAD0_opsz24.svg', altText: 'completed' },\n        { class: 'add-project', text: 'Projects', imgSrc: './images/add_FILL0_wght400_GRAD0_opsz24.svg', altText: 'plus' }\n    ];\n\n    // Loop through each sidebar item and create its elements\n    sidebarItems.forEach(item => {\n        const anchor = document.createElement('a');\n        anchor.classList.add(item.class);\n\n        const img = document.createElement('img');\n        img.src = item.imgSrc;\n        img.alt = item.altText;\n        img.classList.add('navbar', 'icon');\n\n        const p = document.createElement('p');\n        p.textContent = item.text;\n        p.classList.add(item.class);\n\n        if (item.class === 'add-project') {\n            // Append the text before the icon\n            anchor.appendChild(p);\n            anchor.appendChild(img);\n        } else {\n            // Append the icon before the text\n            anchor.appendChild(img);\n            anchor.appendChild(p);\n        }\n        sidebar.appendChild(anchor);\n    });\n\n    nav.appendChild(sidebar);\n\n    return nav; \n}\n\nfunction createMain(){\n    const main = document.createElement('main');\n    main.classList.add('main-content');\n\n    return main;\n}\n\nfunction createFooter() {\n    const footer = document.createElement('footer');\n\n    const p = document.createElement('p');\n    p.textContent = 'Copyright Â© 2023 ';\n\n    const a = document.createElement('a');\n    a.href = 'https://github.com/zahrabateninia';\n    a.textContent = 'zahrabateninia'; \n    a.setAttribute('target', '_blank'); // Opens link in new tab\n\n    p.appendChild(a);\n\n    const img = document.createElement('img');\n    img.src = 'images/github.svg';\n    img.alt = 'github';\n\n    footer.appendChild(p);\n    footer.appendChild(img);\n\n    return footer;\n}\n\nfunction initializeWebsite(){\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('wrapper');\n\n    const htmlContent = document.querySelector('.content');\n    htmlContent.appendChild(wrapper);\n\n    wrapper.appendChild(createHeader());\n    wrapper.appendChild(createSidebar());\n    wrapper.appendChild(createMain());\n    wrapper.appendChild(createFooter());\n\n    return wrapper;\n\n}\n\n\n;// CONCATENATED MODULE: ./src/todayTasks.js\n\n\n\nfunction renderTodayTasks(){\n    const todayDiv = document.createElement('div');\n    todayDiv.classList.add('today-div');\n\n    const todayH1= document.createElement('h1');\n    todayH1.textContent= 'Today Tasks';\n\n    const allTasksContainer = document.createElement('div');\n    allTasksContainer.classList.add('all-tasks-container');\n    \n    todayDiv.appendChild(todayH1);\n    todayDiv.appendChild(allTasksContainer);\n\n    displayTodayTasks();\n    return todayDiv;\n};\n\nfunction displayTodayTasks() {\n    const allTasksContainer = document.querySelector('.all-tasks-container');\n\n    if(allTasksContainer){ // if there are tasks in inbox\n        allTasksContainer.innerHTML = ''; // Clear previous content\n\n        const todayTasks = tasksArr.filter(task => isDueToday(task.schedule));\n\n        if (todayTasks.length > 0) {\n            todayTasks.forEach(task => {\n                const taskElement = createTaskElement(task); \n                allTasksContainer.appendChild(taskElement);\n            });\n        } else {\n            // No tasks for today\n            const noTaskMessage = document.createElement('p');\n            noTaskMessage.textContent = \"No tasks today! Time for a movie break?\";\n            noTaskMessage.classList.add('no-task-msg');\n            allTasksContainer.appendChild(noTaskMessage);\n        }\n    }\n};\n\nfunction isDueToday(taskDate) {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    const dueDate = new Date(taskDate);\n    dueDate.setHours(0, 0, 0, 0);\n\n    return today.getTime() === dueDate.getTime();\n}\n\n;// CONCATENATED MODULE: ./src/toDoItem.js\n\n\n\nfunction renderNewTask() {\n    clearTasks(); // Clear all previous tasks before rendering new ones\n\n    tasksArr.forEach((task, index) => {\n        const taskElement = createTaskElement(task);  // Creates new task element\n\n        // Add event listeners for toggling completion, editing task, and removing task\n        // Attach event listeners to icons after they are created and added to the DOM\n        taskElement.querySelector('.circle-icon').addEventListener('click', () => toggleStatusIcon(task, taskElement));\n        taskElement.querySelector('.trash-icon').addEventListener('click', () => {\n            removeTaskFromContainer(taskElement);\n            tasksArr.splice(index, 1);  // Remove the task from the array\n        });\n\n        addTaskToContainer(taskElement);  // Adds task element to container\n    });\n}\n\n;// CONCATENATED MODULE: ./src/inbox.js\n\n\n\n\nfunction renderInbox(){\n    const inboxDiv = document.createElement('div');\n    inboxDiv.classList.add('inbox-div');\n\n    const inboxH1= document.createElement('h1');\n    inboxH1.textContent= 'Inbox';\n\n    // all tasks container which is below the header and above the add new task div\n    const allTasksContainer = document.createElement('div');\n    allTasksContainer.classList.add('all-tasks-container');\n\n\n    const addNewTaskDiv = document.createElement('div');\n    addNewTaskDiv.classList.add('add-new-task');\n\n    const plusIcon =  document.createElement('img');\n    plusIcon.src = './images/add_FILL0_wght400_GRAD0_opsz24.svg';\n    plusIcon.classList.add('task-plus-icon');\n    plusIcon.alt = 'plus';\n    addNewTaskDiv.appendChild(plusIcon);\n\n    const addTaskP = document.createElement('p');\n    addTaskP.classList.add('add-task-text');\n    addTaskP.textContent = 'Add a new task'\n    addNewTaskDiv.appendChild(addTaskP);\n    \n    inboxDiv.appendChild(inboxH1);\n    inboxDiv.appendChild(allTasksContainer);\n    inboxDiv.appendChild(addNewTaskDiv);\n\n    createAddTaskDialog();\n    if(tasksArr){ // if there is already some tasks added show them when navigate back to inbox link\n        tasksArr.forEach(task => {\n            const taskElement = createTaskElement(task);\n            allTasksContainer.appendChild(taskElement);\n        });\n    };\n    \n    return inboxDiv;\n};\n\n\n\nfunction createAddTaskDialog() {\n    // Create dialog element\n    const dialog = document.createElement('dialog');\n    dialog.classList.add('add-task-dialog');\n\n\n    // Create form\n    const form = document.createElement('form');\n    form.action = \"dialog\"; \n\n    // Form inputs\n    const inputsDiv = document.createElement('div'); \n    inputsDiv.classList.add('inputsDiv');\n\n    // label input div for each of inputs\n    const individualInput = document.createElement('div');\n    individualInput.classList.add('individual-input');\n\n\n    // Task title input\n    const taskTitleDiv = document.createElement('div');\n    taskTitleDiv.classList.add('task-title');\n    const taskTitleLabel = document.createElement('label');\n    taskTitleLabel.htmlFor = 'task-title';\n    taskTitleLabel.textContent = 'Task Title*';\n    const taskTitleInput = document.createElement('input');\n    taskTitleInput.type = 'text';\n    taskTitleInput.name = 'task-title';\n    taskTitleInput.id = 'task-title';\n    taskTitleInput.classList.add('task-title--input');\n    taskTitleInput.placeholder = 'e.g. Workout';\n    taskTitleInput.required = true;\n    taskTitleDiv.appendChild(taskTitleLabel);\n    taskTitleDiv.appendChild(taskTitleInput);\n\n    individualInput.appendChild(taskTitleDiv);\n\n    // Priority select\n    const priorityDiv = document.createElement('div');\n    priorityDiv.classList.add('priority');\n    const priorityLabel = document.createElement('label');\n    priorityLabel.htmlFor = 'priority';\n    priorityLabel.textContent = 'Priority';\n    const prioritySelect = document.createElement('select');\n    prioritySelect.name = 'priority';\n    prioritySelect.id = 'priority';\n\n    prioritySelect.classList.add('priority--select');\n    ['Low', 'Medium', 'High'].forEach((priority) => {\n        const option = document.createElement('option');\n        option.value = priority.toLowerCase();\n        option.textContent = priority;\n        prioritySelect.appendChild(option);\n    });\n    priorityDiv.appendChild(priorityLabel);\n    priorityDiv.appendChild(prioritySelect);\n\n    individualInput.appendChild(priorityDiv);\n\n    // Schedule date input\n    const scheduleDiv = document.createElement('div');\n    scheduleDiv.classList.add('schedule');\n    const scheduleLabel = document.createElement('label');\n    scheduleLabel.htmlFor = 'schedule';\n    scheduleLabel.textContent = 'Schedule';\n    const scheduleInput = document.createElement('input');\n    scheduleInput.type = 'date';\n    scheduleInput.name = 'schedule';\n    scheduleInput.id = 'schedule';\n    scheduleInput.classList.add('due-date');\n    scheduleDiv.appendChild(scheduleLabel);\n    scheduleDiv.appendChild(scheduleInput);\n\n    individualInput.appendChild(scheduleDiv);\n\n    // Buttons\n    const buttonsDiv = document.createElement('div');\n    buttonsDiv.classList.add('buttons');\n    const cancelButton = document.createElement('button');\n    cancelButton.classList.add('cancel-btn');\n    cancelButton.textContent = 'Cancel';\n    const addButton = document.createElement('button');\n    addButton.type = 'submit';\n    addButton.classList.add('add-btn');\n    addButton.textContent = 'Add';\n    buttonsDiv.appendChild(cancelButton);\n    buttonsDiv.appendChild(addButton);\n\n    // Append all inputs and their labels in inputsDiv \n    inputsDiv.appendChild(individualInput);\n\n    // Append all parts to form\n    form.appendChild(inputsDiv);\n    form.appendChild(buttonsDiv);\n    \n    dialog.appendChild(form);\n\n    return dialog;\n};\n\n// Global tasks container\nlet tasksContainer; // Will be initialized only once\nconst tasksArr = [];\n\nfunction createAndAddNewTask() { // add the new task to the tasks container\n    // Ensure tasksContainer is created and appended only once\n    if (!tasksContainer) {\n        tasksContainer = document.createElement('div');\n        tasksContainer.classList.add('tasks-container');\n        document.querySelector('.main-content').appendChild(tasksContainer);\n    }\n\n    const addNewTaskDiv = document.querySelector('.add-new-task');\n\n    // Attach the event listener to the .add-new-task div\n    addNewTaskDiv.addEventListener('click', () => {\n        const dialog = createAddTaskDialog();\n        document.body.appendChild(dialog);\n        dialog.showModal();\n\n        const cancelButton = dialog.querySelector('.cancel-btn'); \n        const addButton = dialog.querySelector('.add-btn');\n\n        cancelButton.addEventListener('click', () => {\n            dialog.close();\n            document.body.removeChild(dialog); // removing the dialog after closing\n        });\n\n        addButton.addEventListener('click', (e) =>{\n            e.preventDefault();\n\n            const title = dialog.querySelector('#task-title').value.trim();\n            const priority = dialog.querySelector('#priority').value;\n            const schedule = dialog.querySelector('#schedule').value;\n            \n            if(!title){\n                alert('Task title is required');\n                return;\n            }\n\n            const newTask = {\n                title: title,\n                priority: priority,\n                schedule: schedule,\n                done: false\n            };\n\n            tasksArr.push(newTask);\n            renderTodayTasks();\n\n            dialog.close();\n            document.body.removeChild(dialog);\n\n            renderNewTask(); // handle rendering all tasks\n        });\n    });\n}\n\n;// CONCATENATED MODULE: ./src/projectManager.js\nfunction enableProjectAddition() {\n    const addProjectLink = document.querySelector('.add-project');\n\n    // Create the input container if it doesn't exist\n    let projectNameInputContainer = document.querySelector('.project-name-input-container');\n    if (!projectNameInputContainer) {\n        projectNameInputContainer = document.createElement('div');\n        projectNameInputContainer.classList.add('project-name-input-container');\n\n        const projectNameInput = document.createElement('input');\n        projectNameInput.type = 'text';\n\n        // add and cancel buttons\n        const buttonsContainer = document.createElement('div');\n        buttonsContainer.classList.add('buttons-container');\n\n\n        const addBtn = document.createElement('button');\n        addBtn.textContent = 'Add';\n        addBtn.classList.add('add-project-btn');\n\n        const cancelBtn = document.createElement('button');\n        cancelBtn.textContent = 'Cancel';\n        cancelBtn.classList.add('cancel-adding-btn')\n\n        projectNameInputContainer.appendChild(projectNameInput);\n        buttonsContainer.appendChild(cancelBtn);\n        buttonsContainer.appendChild(addBtn);\n        projectNameInputContainer.appendChild(buttonsContainer);\n\n        // Append the container to the DOM\n        addProjectLink.after(projectNameInputContainer);\n\n        // Initially show the input container\n        projectNameInputContainer.style.display = 'flex';\n\n        // Hide the container and clear the input when 'Cancel' is clicked\n        cancelBtn.addEventListener('click', () => {\n            projectNameInputContainer.style.display = 'none';\n            projectNameInput.value = '';\n        });\n\n        // Add the new project name when add project is clicked\n        addBtn.addEventListener('click', ()=>{\n            const projectsNamesContainer = document.createElement('div');\n            projectsNamesContainer.classList.add('projects-names-container');\n\n            const projectNameContainer = document.createElement('div');\n            projectNameContainer.classList.add('project-name-container');\n\n            const projectName = document.createElement('div');\n            const projectNameValue = projectNameInput.value.trim();\n            projectName.textContent = projectNameValue;\n            projectName.classList.add('project-name');\n            // add cross icon\n            const crossIcon = document.createElement('img');\n            crossIcon.src = './images/icons8-cross-16.png';\n            crossIcon.alt = 'cross';\n            crossIcon.classList.add('cross-icon');\n\n            crossIcon.addEventListener('click', ()=>{\n                projectsNamesContainer.removeChild(projectNameContainer);\n            })\n\n            projectNameContainer.appendChild(projectName);\n            projectNameContainer.appendChild(crossIcon);\n\n            projectsNamesContainer.appendChild(projectNameContainer);\n            addProjectLink.after(projectsNamesContainer);\n\n            projectNameInputContainer.style.display = 'none';\n            projectNameInput.value = '';\n        })\n\n        // Add an event listener for the add project link\n        addProjectLink.addEventListener('click', () => {\n            projectNameInputContainer.style.display = projectNameInputContainer.style.display === 'none' ? 'flex' : 'none';\n        });\n    }\n}\n\n;// CONCATENATED MODULE: ./src/importantTasks.js\n\n\n\n\nfunction renderImportantTasks(){\n    const importantDiv = document.createElement('div');\n    importantDiv.classList.add('important-div');\n\n    const importantH1= document.createElement('h1');\n    importantH1.textContent= 'Important Tasks';\n\n    const allTasksContainer = document.createElement('div');\n    allTasksContainer.classList.add('all-tasks-container');\n    \n    importantDiv.appendChild(importantH1);\n    importantDiv.appendChild(allTasksContainer);\n\n    return importantDiv;\n};\n\nfunction displayImportantTasks(){\n    // in the task array check for objects that their priority is high,\n    // if that so, add these tasks to tasks container in important div \n    const allTasksContainer = document.querySelector('.all-tasks-container'); \n\n    if (allTasksContainer) {\n        // Clear existing content\n        allTasksContainer.innerHTML = '';\n\n        // Loop through tasks and add high-priority tasks\n        tasksArr.forEach(task => {\n            if (task.priority === 'high') {\n                const importantTask = createTaskElement(task);\n                allTasksContainer.appendChild(importantTask);\n            }\n        });\n    }\n    \n}\n;// CONCATENATED MODULE: ./src/completedTasks.js\n\n\n\nfunction renderCompletedTasks(){\n    const completedDiv = document.createElement('div');\n    completedDiv.classList.add('completed-div');\n\n    const completedH1= document.createElement('h1');\n    completedH1.textContent= 'Completed Tasks';\n\n    const allTasksContainer = document.createElement('div');\n    allTasksContainer.classList.add('all-tasks-container');\n    \n    completedDiv.appendChild(completedH1);\n    completedDiv.appendChild(allTasksContainer);\n\n    return completedDiv;\n};\n\nfunction displayCompletedTasks(){\n    // for each task check if the 'done' is equal to true for showing it in the completed div \n    const allTasksContainer = document.querySelector('.all-tasks-container'); \n\n    if (allTasksContainer) {\n        // Clear existing content\n        allTasksContainer.innerHTML = '';\n\n        // Loop through tasks and add high-priority tasks\n        tasksArr.forEach(task => {\n            if (task.done === true) {\n                const completedTask = createTaskElement(task);\n                allTasksContainer.appendChild(completedTask);\n            }\n        });\n    }\n    \n}\n;// CONCATENATED MODULE: ./src/UI.js\n\n\n\n\n\n\n\n\nfunction updateMainContent(){\n    const mainContent = document.querySelector('.main-content');\n\n    \n    // Grab all sidebar links\n    const sidebarLinks = document.querySelectorAll('.sidebar a');\n    \n    // Add an event listener to each link\n    sidebarLinks.forEach(link => {\n        link.addEventListener('click', (event) => {\n            event.preventDefault();  // Prevent the default link action\n            // Clear the main content\n            mainContent.textContent = ' ';\n\n            // Determine which function to call based on clicked link's class\n            if(link.classList.contains('inbox')){\n                const inboxContent = renderInbox();\n                mainContent.appendChild(inboxContent);\n                createAndAddNewTask();\n\n            }\n            else if(link.classList.contains('today')){\n                const todayContent = renderTodayTasks();\n                mainContent.appendChild(todayContent);\n                displayTodayTasks();\n            }\n            else if(link.classList.contains('completed')){\n                const completedContent = renderCompletedTasks();\n                mainContent.appendChild(completedContent);\n                displayCompletedTasks();\n            }\n            else if(link.classList.contains('important')){\n                const importantContent = renderImportantTasks();\n                mainContent.appendChild(importantContent);\n                displayImportantTasks();\n            }\n            else if(link.classList.contains('add-project')){\n                enableProjectAddition();\n            };\n        });\n    });\n};\n\n// DOM for to do list tasks\n\nfunction clearTasks() {\n    const allTasksContainer = document.querySelector('.all-tasks-container');\n    allTasksContainer.innerHTML = '';\n}\n\n\nfunction createTaskElement(task) { \n        const taskContainer = document.createElement('div');\n        taskContainer.classList.add('task-container');\n        const taskStatusTitle = document.createElement('div');\n        taskStatusTitle.classList.add('task-status-title');\n        const taskDetails = document.createElement('div');\n        taskDetails.classList.add('task-details');\n\n        // add the status icon\n        const statusIcon = document.createElement('img');\n        statusIcon.classList.add('circle-icon', 'task-icon');\n        statusIcon.src = \"./images/circle_FILL0_wght400_GRAD0_opsz24.svg\";\n        taskStatusTitle.appendChild(statusIcon);\n\n\n        // add task title \n        const taskTitle = document.createElement('p');\n        taskTitle.classList.add('task-title');\n        taskTitle.textContent = task.title;\n        taskStatusTitle.appendChild(taskTitle);\n\n\n        // add schedule\n        const schedule = document.createElement('span');\n        schedule.classList.add('schedule');\n        schedule.textContent = task.schedule;\n        taskDetails.appendChild(schedule);\n\n        // add priority\n        const priority = document.createElement('span');\n        priority.classList.add('priority');\n        priority.textContent = task.priority;\n        taskDetails.appendChild(priority);\n\n        // add trash icon\n\n        const trashIcon = document.createElement('img');\n        trashIcon.classList.add('trash-icon', 'task-icon');\n        trashIcon.src = \"./images/delete_FILL0_wght400_GRAD0_opsz24.svg\";\n        taskDetails.appendChild(trashIcon);\n\n\n        taskContainer.appendChild(taskStatusTitle);\n        taskContainer.appendChild(taskDetails);\n\n    return taskContainer; \n}\n\nfunction addTaskToContainer(taskElement) {\n    const allTasksContainer = document.querySelector('.all-tasks-container');\n    allTasksContainer.appendChild(taskElement);\n}\n\nfunction removeTaskFromContainer(taskElement) {\n    const allTasksContainer = document.querySelector('.all-tasks-container');\n    allTasksContainer.removeChild(taskElement);\n}\n\nfunction toggleStatusIcon(task, taskElement){\n    const statusIcon = taskElement.querySelector('.circle-icon');\n    task.done = !task.done;\n    const taskTitle = taskElement.querySelector('.task-title');\n\n    if(task.done){\n        statusIcon.src = \"images/check_circle_FILL0_wght400_GRAD0_opsz24.svg\";\n        taskTitle.style.textDecoration = 'line-through';\n    }else{\n        statusIcon.src = \"./images/circle_FILL0_wght400_GRAD0_opsz24.svg\";\n        taskTitle.style.textDecoration = 'none';\n    }\n};\n\n\n\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\ninitializeWebsite()\nupdateMainContent()//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///918\n")}},__webpack_exports__={};__webpack_modules__[918]()})();