(()=>{"use strict";var __webpack_modules__={505:()=>{eval('\n;// CONCATENATED MODULE: ./src/storage.js\n// Save data to local storage\nfunction saveTasksToLocalStorage(tasksArr) {\n  const data = JSON.stringify(tasksArr);\n  localStorage.setItem("tasks", data);\n}\n\n// load tasks from localStorage and parse them back into JavaScript objects:\nfunction loadTasksFromLocalStorage() {\n  const data = localStorage.getItem("tasks");\n  if (data) {\n    return JSON.parse(data);\n  } else {\n    return []; // Return an empty array if no data is found\n  }\n}\n\n;// CONCATENATED MODULE: ./src/todayTasks.js\n\n\nfunction renderTodayTasks() {\n  const todayDiv = document.createElement("div");\n  todayDiv.classList.add("today-div");\n\n  const todayH1 = document.createElement("h1");\n  todayH1.textContent = "Today Tasks";\n\n  const allTasksContainer = document.createElement("div");\n  allTasksContainer.classList.add("all-tasks-container");\n\n  todayDiv.appendChild(todayH1);\n  todayDiv.appendChild(allTasksContainer);\n\n  displayTodayTasks();\n  return todayDiv;\n}\n\nfunction displayTodayTasks() {\n  const allTasksContainer = document.querySelector(".all-tasks-container");\n\n  if (allTasksContainer) {\n    // if there are tasks in inbox\n    allTasksContainer.innerHTML = ""; // Clear previous content\n\n    const todayTasks = tasksArr.filter((task) => isDueToday(task.schedule));\n\n    if (todayTasks.length > 0) {\n      todayTasks.forEach((task) => {\n        const taskElement = createTodayTaskElement(task);\n        allTasksContainer.appendChild(taskElement);\n      });\n    } else {\n      // No tasks for today\n      const noTaskMessage = document.createElement("p");\n      noTaskMessage.textContent = "No tasks today!";\n      noTaskMessage.classList.add("no-task-msg");\n      allTasksContainer.appendChild(noTaskMessage);\n    }\n  }\n}\n\nfunction isDueToday(taskDate) {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n\n  const dueDate = new Date(taskDate);\n  dueDate.setHours(0, 0, 0, 0);\n\n  return today.getTime() === dueDate.getTime();\n}\n\nfunction createTodayTaskElement(task) {\n  const taskContainer = document.createElement("div");\n  taskContainer.classList.add("task-container");\n\n  const taskTitle = document.createElement("p");\n  taskTitle.classList.add("task-title");\n  taskTitle.textContent = task.title;\n  taskContainer.appendChild(taskTitle);\n\n  return taskContainer;\n}\n\n;// CONCATENATED MODULE: ./src/projectManager.js\nfunction enableProjectAddition() {\n  const addProjectLink = document.querySelector(".add-project");\n\n  // Create the input container if it doesn\'t exist\n  let projectNameInputContainer = document.querySelector(\n    ".project-name-input-container",\n  );\n  if (!projectNameInputContainer) {\n    projectNameInputContainer = document.createElement("div");\n    projectNameInputContainer.classList.add("project-name-input-container");\n\n    const projectNameInput = document.createElement("input");\n    projectNameInput.type = "text";\n\n    // add and cancel buttons\n    const buttonsContainer = document.createElement("div");\n    buttonsContainer.classList.add("buttons-container");\n\n    const addBtn = document.createElement("button");\n    addBtn.textContent = "Add";\n    addBtn.classList.add("add-project-btn");\n\n    const cancelBtn = document.createElement("button");\n    cancelBtn.textContent = "Cancel";\n    cancelBtn.classList.add("cancel-adding-btn");\n\n    projectNameInputContainer.appendChild(projectNameInput);\n    buttonsContainer.appendChild(cancelBtn);\n    buttonsContainer.appendChild(addBtn);\n    projectNameInputContainer.appendChild(buttonsContainer);\n\n    // Append the container to the DOM\n    addProjectLink.after(projectNameInputContainer);\n\n    // Initially show the input container\n    projectNameInputContainer.style.display = "flex";\n\n    // Hide the container and clear the input when \'Cancel\' is clicked\n    cancelBtn.addEventListener("click", () => {\n      projectNameInputContainer.style.display = "none";\n      projectNameInput.value = "";\n    });\n\n    // Add the new project name when add project is clicked\n    addBtn.addEventListener("click", () => {\n      const projectsNamesContainer = document.createElement("div");\n      projectsNamesContainer.classList.add("projects-names-container");\n\n      const projectNameContainer = document.createElement("div");\n      projectNameContainer.classList.add("project-name-container");\n\n      const projectName = document.createElement("div");\n      const projectNameValue = projectNameInput.value.trim();\n      projectName.textContent = projectNameValue;\n      projectName.classList.add("project-name");\n      // add cross icon\n      const crossIcon = document.createElement("img");\n      crossIcon.src = "./images/icons8-cross-16.png";\n      crossIcon.alt = "cross";\n      crossIcon.classList.add("cross-icon");\n\n      crossIcon.addEventListener("click", () => {\n        projectsNamesContainer.removeChild(projectNameContainer);\n      });\n\n      projectNameContainer.appendChild(projectName);\n      projectNameContainer.appendChild(crossIcon);\n\n      projectsNamesContainer.appendChild(projectNameContainer);\n      addProjectLink.after(projectsNamesContainer);\n\n      projectNameInputContainer.style.display = "none";\n      projectNameInput.value = "";\n    });\n\n    // Add an event listener for the add project link\n    addProjectLink.addEventListener("click", () => {\n      projectNameInputContainer.style.display =\n        projectNameInputContainer.style.display === "none" ? "flex" : "none";\n    });\n  }\n}\n\n;// CONCATENATED MODULE: ./src/importantTasks.js\n\n\nfunction renderImportantTasks() {\n  const importantDiv = document.createElement("div");\n  importantDiv.classList.add("important-div");\n\n  const importantH1 = document.createElement("h1");\n  importantH1.textContent = "Important Tasks";\n\n  const allTasksContainer = document.createElement("div");\n  allTasksContainer.classList.add("all-tasks-container");\n\n  importantDiv.appendChild(importantH1);\n  importantDiv.appendChild(allTasksContainer);\n\n  return importantDiv;\n}\n\nfunction displayImportantTasks() {\n  // in the task array check for objects that their priority is high,\n  // if that so, add these tasks to tasks container in important div\n  const allTasksContainer = document.querySelector(".all-tasks-container");\n\n  if (allTasksContainer) {\n    // Clear existing content\n    allTasksContainer.innerHTML = "";\n\n    // Loop through tasks and add high-priority tasks\n    tasksArr.forEach((task) => {\n      if (task.priority === "high") {\n        const importantTask = createImportantTaskElement(task);\n        allTasksContainer.appendChild(importantTask);\n      }\n    });\n  }\n}\n\nfunction createImportantTaskElement(task) {\n  const taskContainer = document.createElement("div");\n  taskContainer.classList.add("task-container");\n\n  const taskTitle = document.createElement("p");\n  taskTitle.classList.add("task-title");\n  taskTitle.textContent = task.title;\n  taskContainer.appendChild(taskTitle);\n\n  return taskContainer;\n}\n\n;// CONCATENATED MODULE: ./src/completedTasks.js\n\n\nfunction renderCompletedTasks() {\n  const completedDiv = document.createElement("div");\n  completedDiv.classList.add("completed-div");\n\n  const completedH1 = document.createElement("h1");\n  completedH1.textContent = "Completed Tasks";\n\n  const allTasksContainer = document.createElement("div");\n  allTasksContainer.classList.add("all-tasks-container");\n\n  completedDiv.appendChild(completedH1);\n  completedDiv.appendChild(allTasksContainer);\n\n  return completedDiv;\n}\n\nfunction displayCompletedTasks() {\n  // for each task check if the \'done\' is equal to true for showing it in the completed div\n  const allTasksContainer = document.querySelector(".all-tasks-container");\n\n  if (allTasksContainer) {\n    // Clear existing content\n    allTasksContainer.innerHTML = "";\n\n    // Loop through tasks and add high-priority tasks\n    tasksArr.forEach((task) => {\n      if (task.done === true) {\n        const completedTask = createCompletedTaskElement(task);\n        allTasksContainer.appendChild(completedTask);\n      }\n    });\n  }\n}\n\nfunction createCompletedTaskElement(task) {\n  const taskContainer = document.createElement("div");\n  taskContainer.classList.add("task-container");\n\n  const taskTitle = document.createElement("p");\n  taskTitle.classList.add("task-title");\n  taskTitle.textContent = task.title;\n  taskContainer.appendChild(taskTitle);\n\n  return taskContainer;\n}\n\n;// CONCATENATED MODULE: ./src/UI.js\n\n\n\n\n\n\n\n\n\nfunction updateMainContent() {\n  const mainContent = document.querySelector(".main-content");\n\n  // Grab all sidebar links\n  const sidebarLinks = document.querySelectorAll(".sidebar a");\n\n  // Add an event listener to each link\n  sidebarLinks.forEach((link) => {\n    link.addEventListener("click", (event) => {\n      event.preventDefault(); // Prevent the default link action\n      // Clear the main content\n      mainContent.textContent = " ";\n\n      // Determine which function to call based on clicked link\'s class\n      if (link.classList.contains("inbox")) {\n        const inboxContent = renderInbox();\n        mainContent.appendChild(inboxContent);\n        createAndAddNewTask(); // by clicking add btn in dialog add the new task to tasksArr and the all tasks container in the inbox\n        attachEventListenersToTasksContainer(); // event listener delegation\n\n        if (tasksArr.length > 0) {\n          // if there is already some tasks added show them when navigate back to inbox link\n          renderNewTask();\n        }\n      } else if (link.classList.contains("today")) {\n        const todayContent = renderTodayTasks();\n        mainContent.appendChild(todayContent);\n        displayTodayTasks();\n      } else if (link.classList.contains("completed")) {\n        const completedContent = renderCompletedTasks();\n        mainContent.appendChild(completedContent);\n        displayCompletedTasks();\n      } else if (link.classList.contains("important")) {\n        const importantContent = renderImportantTasks();\n        mainContent.appendChild(importantContent);\n        displayImportantTasks();\n      } else if (link.classList.contains("add-project")) {\n        enableProjectAddition();\n      }\n    });\n  });\n}\n\n// DOM for to do list tasks\n\nfunction clearTasks() {\n  const allTasksContainer = document.querySelector(".all-tasks-container");\n  allTasksContainer.innerHTML = "";\n}\n\nfunction createTaskElement(task) {\n  const taskContainer = document.createElement("div");\n  taskContainer.classList.add("task-container");\n  const taskStatusTitle = document.createElement("div");\n  taskStatusTitle.classList.add("task-status-title");\n  const taskDetails = document.createElement("div");\n  taskDetails.classList.add("task-details");\n\n  // add the status icon\n  const statusIcon = document.createElement("img");\n  statusIcon.classList.add("circle-icon", "task-icon");\n  statusIcon.src = "./images/circle_FILL0_wght400_GRAD0_opsz24.svg";\n  taskStatusTitle.appendChild(statusIcon);\n\n  // add task title\n  const taskTitle = document.createElement("p");\n  taskTitle.classList.add("task-title");\n  taskTitle.textContent = task.title;\n  taskStatusTitle.appendChild(taskTitle);\n\n  // add schedule\n  const schedule = document.createElement("span");\n  schedule.classList.add("schedule");\n  schedule.textContent = task.schedule;\n  taskDetails.appendChild(schedule);\n\n  // add priority\n  const priority = document.createElement("span");\n  priority.classList.add("priority");\n  priority.textContent = task.priority;\n  taskDetails.appendChild(priority);\n\n  // add trash icon\n\n  const trashIcon = document.createElement("img");\n  trashIcon.classList.add("trash-icon", "task-icon");\n  trashIcon.src = "./images/delete_FILL0_wght400_GRAD0_opsz24.svg";\n  taskDetails.appendChild(trashIcon);\n\n  taskContainer.appendChild(taskStatusTitle);\n  taskContainer.appendChild(taskDetails);\n\n  return taskContainer;\n}\n\nfunction addTaskToContainer(taskElement) {\n  const allTasksContainer = document.querySelector(".all-tasks-container");\n  allTasksContainer.appendChild(taskElement);\n}\n\nfunction removeTaskFromContainer(taskElement) {\n  const allTasksContainer = document.querySelector(".all-tasks-container");\n  allTasksContainer.removeChild(taskElement);\n}\n\nfunction toggleStatusIcon(task, taskElement) {\n  const statusIcon = taskElement.querySelector(".circle-icon");\n  task.done = !task.done;\n  const taskTitle = taskElement.querySelector(".task-title");\n\n  // Change the visual representation of the status icon\n  if (task.done) {\n    statusIcon.src = "images/check_circle_FILL0_wght400_GRAD0_opsz24.svg";\n    taskTitle.style.textDecoration = "line-through";\n  } else {\n    statusIcon.src = "./images/circle_FILL0_wght400_GRAD0_opsz24.svg";\n    taskTitle.style.textDecoration = "none";\n  }\n}\n\n;// CONCATENATED MODULE: ./src/toDoItem.js\n\n\n\n\nfunction renderNewTask() {\n  clearTasks(); // clear all tasks container so when adding a new task the previous tasks are not added again with the new one.\n\n  tasksArr.forEach((task) => {\n    const taskElement = createTaskElement(task);\n    updateTaskUI(task, taskElement);\n    addTaskToContainer(taskElement);\n  });\n}\n\nfunction updateTaskUI(task, taskElement) {\n  const statusIcon = taskElement.querySelector(".circle-icon");\n  const taskTitle = taskElement.querySelector(".task-title");\n\n  if (task.done) {\n    statusIcon.src = "images/check_circle_FILL0_wght400_GRAD0_opsz24.svg";\n    taskTitle.style.textDecoration = "line-through";\n  } else {\n    statusIcon.src = "./images/circle_FILL0_wght400_GRAD0_opsz24.svg";\n    taskTitle.style.textDecoration = "none";\n  }\n}\n\nfunction attachEventListenersToTasksContainer() {\n  const allTasksContainer = document.querySelector(".all-tasks-container");\n\n  allTasksContainer.addEventListener("click", (event) => {\n    const taskElement = event.target.closest(".task-container");\n    if (!taskElement) return;\n\n    if (event.target.classList.contains("circle-icon")) {\n      const index = Array.from(allTasksContainer.children).indexOf(taskElement);\n      toggleStatusIcon(tasksArr[index], taskElement);\n    } else if (event.target.classList.contains("trash-icon")) {\n      const index = Array.from(allTasksContainer.children).indexOf(taskElement);\n      removeTaskFromContainer(taskElement);\n      tasksArr.splice(index, 1);\n    }\n\n    // save the updated tasks array to local storage\n    saveTasksToLocalStorage(tasksArr);\n  });\n}\n\n;// CONCATENATED MODULE: ./src/inbox.js\n\n\n\nconst tasksArr = loadTasksFromLocalStorage();\n\nfunction renderInbox() {\n  const inboxDiv = document.createElement("div");\n  inboxDiv.classList.add("inbox-div");\n\n  const inboxH1 = document.createElement("h1");\n  inboxH1.textContent = "Inbox";\n\n  // all tasks container which is below the header and above the add new task div\n  const allTasksContainer = document.createElement("div");\n  allTasksContainer.classList.add("all-tasks-container");\n\n  const addNewTaskDiv = document.createElement("div");\n  addNewTaskDiv.classList.add("add-new-task");\n\n  const plusIcon = document.createElement("img");\n  plusIcon.src = "./images/add_FILL0_wght400_GRAD0_opsz24.svg";\n  plusIcon.classList.add("task-plus-icon");\n  plusIcon.alt = "plus";\n  addNewTaskDiv.appendChild(plusIcon);\n\n  const addTaskP = document.createElement("p");\n  addTaskP.classList.add("add-task-text");\n  addTaskP.textContent = "Add a new task";\n  addNewTaskDiv.appendChild(addTaskP);\n\n  inboxDiv.appendChild(inboxH1);\n  inboxDiv.appendChild(allTasksContainer);\n  inboxDiv.appendChild(addNewTaskDiv);\n\n  createAddTaskDialog();\n\n  return inboxDiv;\n}\n\nfunction createAddTaskDialog() {\n  // Create dialog element\n  const dialog = document.createElement("dialog");\n  dialog.classList.add("add-task-dialog");\n\n  // Create form\n  const form = document.createElement("form");\n  form.action = "dialog";\n\n  // Form inputs\n  const inputsDiv = document.createElement("div");\n  inputsDiv.classList.add("inputsDiv");\n\n  // label input div for each of inputs\n  const individualInput = document.createElement("div");\n  individualInput.classList.add("individual-input");\n\n  // Task title input\n  const taskTitleDiv = document.createElement("div");\n  taskTitleDiv.classList.add("task-title");\n  const taskTitleLabel = document.createElement("label");\n  taskTitleLabel.htmlFor = "task-title";\n  taskTitleLabel.textContent = "Task Title*";\n  const taskTitleInput = document.createElement("input");\n  taskTitleInput.type = "text";\n  taskTitleInput.name = "task-title";\n  taskTitleInput.id = "task-title";\n  taskTitleInput.classList.add("task-title--input");\n  taskTitleInput.placeholder = "e.g. Workout";\n  taskTitleInput.required = true;\n  taskTitleDiv.appendChild(taskTitleLabel);\n  taskTitleDiv.appendChild(taskTitleInput);\n\n  individualInput.appendChild(taskTitleDiv);\n\n  // Priority select\n  const priorityDiv = document.createElement("div");\n  priorityDiv.classList.add("priority");\n  const priorityLabel = document.createElement("label");\n  priorityLabel.htmlFor = "priority";\n  priorityLabel.textContent = "Priority";\n  const prioritySelect = document.createElement("select");\n  prioritySelect.name = "priority";\n  prioritySelect.id = "priority";\n\n  prioritySelect.classList.add("priority--select");\n  ["Low", "Medium", "High"].forEach((priority) => {\n    const option = document.createElement("option");\n    option.value = priority.toLowerCase();\n    option.textContent = priority;\n    prioritySelect.appendChild(option);\n  });\n  priorityDiv.appendChild(priorityLabel);\n  priorityDiv.appendChild(prioritySelect);\n\n  individualInput.appendChild(priorityDiv);\n\n  // Schedule date input\n  const scheduleDiv = document.createElement("div");\n  scheduleDiv.classList.add("schedule");\n  const scheduleLabel = document.createElement("label");\n  scheduleLabel.htmlFor = "schedule";\n  scheduleLabel.textContent = "Schedule";\n  const scheduleInput = document.createElement("input");\n  scheduleInput.type = "date";\n  scheduleInput.name = "schedule";\n  scheduleInput.id = "schedule";\n  scheduleInput.classList.add("due-date");\n  scheduleDiv.appendChild(scheduleLabel);\n  scheduleDiv.appendChild(scheduleInput);\n\n  individualInput.appendChild(scheduleDiv);\n\n  // Buttons\n  const buttonsDiv = document.createElement("div");\n  buttonsDiv.classList.add("buttons");\n  const cancelButton = document.createElement("button");\n  cancelButton.classList.add("cancel-btn");\n  cancelButton.textContent = "Cancel";\n  const addButton = document.createElement("button");\n  addButton.type = "submit";\n  addButton.classList.add("add-btn");\n  addButton.textContent = "Add";\n  buttonsDiv.appendChild(cancelButton);\n  buttonsDiv.appendChild(addButton);\n\n  // Append all inputs and their labels in inputsDiv\n  inputsDiv.appendChild(individualInput);\n\n  // Append all parts to form\n  form.appendChild(inputsDiv);\n  form.appendChild(buttonsDiv);\n\n  dialog.appendChild(form);\n\n  return dialog;\n}\n\nfunction createAndAddNewTask() {\n  // add the new task to the tasks container\n\n  const addNewTaskDiv = document.querySelector(".add-new-task");\n\n  // Attach the event listener to the .add-new-task div\n  addNewTaskDiv.addEventListener("click", () => {\n    const dialog = createAddTaskDialog();\n    document.body.appendChild(dialog);\n    dialog.showModal();\n\n    const cancelButton = dialog.querySelector(".cancel-btn");\n    const addButton = dialog.querySelector(".add-btn");\n\n    cancelButton.addEventListener("click", () => {\n      dialog.close();\n      document.body.removeChild(dialog); // removing the dialog after closing\n    });\n\n    addButton.addEventListener("click", (e) => {\n      e.preventDefault();\n\n      const title = dialog.querySelector("#task-title").value.trim();\n      const priority = dialog.querySelector("#priority").value;\n      const schedule = dialog.querySelector("#schedule").value;\n\n      if (!title) {\n        alert("Task title is required");\n        return;\n      }\n\n      // Handle the situation when the selected due time is in the past\n      const todayDate = new Date();\n      const dueDate = new Date(schedule);\n      todayDate.setHours(0, 0, 0, 0);\n      dueDate.setHours(0, 0, 0, 0);\n\n      if (todayDate > dueDate) {\n        alert("Please select a date in the future, not the past!");\n        return;\n      }\n\n      const newTask = {\n        title: title,\n        priority: priority,\n        schedule: schedule,\n        done: false,\n      };\n\n      tasksArr.push(newTask);\n\n      dialog.close();\n      document.body.removeChild(dialog);\n\n      // add the task to the UI when add button is clicked\n      renderNewTask();\n      // save the updated tasks array to local storage\n      saveTasksToLocalStorage(tasksArr);\n    });\n  });\n}\n\n;// CONCATENATED MODULE: ./src/initializeWebsite.js\n\n\n\nfunction createHeader() {\n  const header = document.createElement("header");\n\n  const headerLogo = document.createElement("img");\n  headerLogo.classList.add("logo");\n  headerLogo.src = "./images/todolist.svg";\n  headerLogo.alt = "logo";\n\n  const headerH1 = document.createElement("h1");\n  headerH1.textContent = "Todo List";\n\n  // add menu icon ( only be shown when on the mobile devices)\n  const menuIcon = document.createElement("img");\n  menuIcon.classList.add("menu-icon");\n  menuIcon.src = "./images/icons8-menu-24.svg";\n  menuIcon.alt = "menu";\n\n  header.appendChild(headerLogo);\n  header.appendChild(headerH1);\n  header.appendChild(menuIcon);\n\n  // Call checkWindowSize with menuIcon as a parameter\n  checkWindowSize(menuIcon);\n\n  return header;\n}\n\n// Modify checkWindowSize to accept the menuIcon as a parameter\nfunction checkWindowSize(menuIcon) {\n  if (window.innerWidth <= 768) {\n    menuIcon.style.display = "block";\n  } else {\n    menuIcon.style.display = "none";\n  }\n}\n\n// Update the event listener for window resize to also pass menuIcon\nwindow.addEventListener("resize", () => {\n  const menuIcon = document.querySelector("img.menu-icon");\n  checkWindowSize(menuIcon);\n});\n\nfunction createSidebar() {\n  const nav = document.createElement("nav");\n  const sidebar = document.createElement("div");\n  sidebar.classList.add("sidebar");\n\n  const sidebarItems = [\n    {\n      class: "inbox",\n      text: "Inbox",\n      imgSrc: "./images/inbox_FILL0_wght400_GRAD0_opsz24.svg",\n      altText: "inbox",\n    },\n    {\n      class: "today",\n      text: "Today",\n      imgSrc: "./images/today_FILL0_wght400_GRAD0_opsz24.svg",\n      altText: "today",\n    },\n    {\n      class: "important",\n      text: "Important",\n      imgSrc: "./images/stars_FILL0_wght400_GRAD0_opsz24.svg",\n      altText: "important",\n    },\n    {\n      class: "completed",\n      text: "Completed",\n      imgSrc: "./images/done_all_FILL0_wght400_GRAD0_opsz24.svg",\n      altText: "completed",\n    },\n    {\n      class: "add-project",\n      text: "Projects",\n      imgSrc: "./images/add_FILL0_wght400_GRAD0_opsz24.svg",\n      altText: "plus",\n    },\n  ];\n\n  // Loop through each sidebar item and create its elements\n  sidebarItems.forEach((item) => {\n    const anchor = document.createElement("a");\n    anchor.classList.add(item.class);\n\n    const img = document.createElement("img");\n    img.src = item.imgSrc;\n    img.alt = item.altText;\n    img.classList.add("navbar", "icon");\n\n    const p = document.createElement("p");\n    p.textContent = item.text;\n    p.classList.add(item.class);\n\n    if (item.class === "add-project") {\n      // Append the text before the icon\n      anchor.appendChild(p);\n      anchor.appendChild(img);\n    } else {\n      // Append the icon before the text\n      anchor.appendChild(img);\n      anchor.appendChild(p);\n    }\n    sidebar.appendChild(anchor);\n  });\n\n  nav.appendChild(sidebar);\n\n  return nav;\n}\n\nfunction createMain() {\n  const main = document.createElement("main");\n  main.classList.add("main-content");\n\n  return main;\n}\n\nfunction createFooter() {\n  const footer = document.createElement("footer");\n\n  const p = document.createElement("p");\n  p.textContent = "Copyright © 2024 ";\n\n  const a = document.createElement("a");\n  a.href = "https://github.com/zahrabateninia";\n  a.textContent = "zahrabateninia";\n  a.setAttribute("target", "_blank"); // Opens link in new tab\n\n  p.appendChild(a);\n\n  const img = document.createElement("img");\n  img.src = "images/github.svg";\n  img.alt = "github";\n\n  footer.appendChild(p);\n  footer.appendChild(img);\n\n  return footer;\n}\n\n// toggle sidebar\n\nfunction toggleSidebar() {\n  const menuIcon = document.querySelector(".menu-icon");\n  const sidebar = document.querySelector("nav");\n\n  menuIcon.addEventListener("click", function () {\n    // Toggle sidebar visibility\n    sidebar.style.left = sidebar.style.left === "0px" ? "-60%" : "0px";\n  });\n\n  document.addEventListener("click", function (event) {\n    // Check if the click is outside the sidebar\n    const isClickInsideSidebar = sidebar.contains(event.target);\n    const isClickOnMenuIcon = menuIcon.contains(event.target);\n\n    if (\n      !isClickInsideSidebar &&\n      !isClickOnMenuIcon &&\n      sidebar.style.left === "0px"\n    ) {\n      // Hide the sidebar if it\'s open and the click was outside\n      sidebar.style.left = "-60%";\n    }\n  });\n}\n\nfunction initializeWebsite() {\n  const wrapper = document.createElement("div");\n  wrapper.classList.add("wrapper");\n\n  const htmlContent = document.querySelector(".content");\n  htmlContent.appendChild(wrapper);\n\n  wrapper.appendChild(createHeader());\n  wrapper.appendChild(createSidebar());\n  toggleSidebar();\n  const mainContent = createMain();\n  wrapper.appendChild(mainContent);\n  // when the website is rendered, the inbox content is shown as a default \n  const inboxContent = renderInbox();\n  mainContent.appendChild(inboxContent);\n  createAndAddNewTask(); \n  attachEventListenersToTasksContainer(); \n\n  wrapper.appendChild(createFooter());\n\n  return wrapper;\n}\n\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\ninitializeWebsite();\nupdateMainContent();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRU87QUFDUDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHlDQUF5QztBQUN6QyxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLGFBQWE7QUFDbkI7QUFDQSxNQUFNLHVCQUF1QjtBQUM3QixLQUFLO0FBQ0wsR0FBRztBQUNIOzs7QUNyTTJEO0FBQ087O0FBRWxFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDOztBQUV0Qzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRWU7QUFDZjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLFdBQVc7QUFDbEM7QUFDQSxFQUFFLG1CQUFtQjtBQUNyQixFQUFFLG9DQUFvQzs7QUFFdEM7O0FBRUE7QUFDQTs7O0FDaE1vRDtBQUNYOztBQUV6QyxpQkFBaUI7QUFDakIsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0b3JhZ2UuanM/NDYwYSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvdG9kYXlUYXNrcy5qcz8zMjNiIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9wcm9qZWN0TWFuYWdlci5qcz9kZDJjIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9pbXBvcnRhbnRUYXNrcy5qcz9lYzRiIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9jb21wbGV0ZWRUYXNrcy5qcz82MTRkIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9VSS5qcz9hMTYyIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy90b0RvSXRlbS5qcz84ZjA5Iiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9pbmJveC5qcz9lYTJlIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9pbml0aWFsaXplV2Vic2l0ZS5qcz8yNzRlIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNhdmUgZGF0YSB0byBsb2NhbCBzdG9yYWdlXG5leHBvcnQgZnVuY3Rpb24gc2F2ZVRhc2tzVG9Mb2NhbFN0b3JhZ2UodGFza3NBcnIpIHtcbiAgY29uc3QgZGF0YSA9IEpTT04uc3RyaW5naWZ5KHRhc2tzQXJyKTtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ0YXNrc1wiLCBkYXRhKTtcbn1cblxuLy8gbG9hZCB0YXNrcyBmcm9tIGxvY2FsU3RvcmFnZSBhbmQgcGFyc2UgdGhlbSBiYWNrIGludG8gSmF2YVNjcmlwdCBvYmplY3RzOlxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRUYXNrc0Zyb21Mb2NhbFN0b3JhZ2UoKSB7XG4gIGNvbnN0IGRhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInRhc2tzXCIpO1xuICBpZiAoZGF0YSkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKGRhdGEpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBbXTsgLy8gUmV0dXJuIGFuIGVtcHR5IGFycmF5IGlmIG5vIGRhdGEgaXMgZm91bmRcbiAgfVxufVxuIiwiaW1wb3J0IHsgdGFza3NBcnIgfSBmcm9tIFwiLi9pbmJveFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyVG9kYXlUYXNrcygpIHtcbiAgY29uc3QgdG9kYXlEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICB0b2RheURpdi5jbGFzc0xpc3QuYWRkKFwidG9kYXktZGl2XCIpO1xuXG4gIGNvbnN0IHRvZGF5SDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG4gIHRvZGF5SDEudGV4dENvbnRlbnQgPSBcIlRvZGF5IFRhc2tzXCI7XG5cbiAgY29uc3QgYWxsVGFza3NDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBhbGxUYXNrc0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiYWxsLXRhc2tzLWNvbnRhaW5lclwiKTtcblxuICB0b2RheURpdi5hcHBlbmRDaGlsZCh0b2RheUgxKTtcbiAgdG9kYXlEaXYuYXBwZW5kQ2hpbGQoYWxsVGFza3NDb250YWluZXIpO1xuXG4gIGRpc3BsYXlUb2RheVRhc2tzKCk7XG4gIHJldHVybiB0b2RheURpdjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpc3BsYXlUb2RheVRhc2tzKCkge1xuICBjb25zdCBhbGxUYXNrc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWxsLXRhc2tzLWNvbnRhaW5lclwiKTtcblxuICBpZiAoYWxsVGFza3NDb250YWluZXIpIHtcbiAgICAvLyBpZiB0aGVyZSBhcmUgdGFza3MgaW4gaW5ib3hcbiAgICBhbGxUYXNrc0NvbnRhaW5lci5pbm5lckhUTUwgPSBcIlwiOyAvLyBDbGVhciBwcmV2aW91cyBjb250ZW50XG5cbiAgICBjb25zdCB0b2RheVRhc2tzID0gdGFza3NBcnIuZmlsdGVyKCh0YXNrKSA9PiBpc0R1ZVRvZGF5KHRhc2suc2NoZWR1bGUpKTtcblxuICAgIGlmICh0b2RheVRhc2tzLmxlbmd0aCA+IDApIHtcbiAgICAgIHRvZGF5VGFza3MuZm9yRWFjaCgodGFzaykgPT4ge1xuICAgICAgICBjb25zdCB0YXNrRWxlbWVudCA9IGNyZWF0ZVRvZGF5VGFza0VsZW1lbnQodGFzayk7XG4gICAgICAgIGFsbFRhc2tzQ29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2tFbGVtZW50KTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBObyB0YXNrcyBmb3IgdG9kYXlcbiAgICAgIGNvbnN0IG5vVGFza01lc3NhZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICAgIG5vVGFza01lc3NhZ2UudGV4dENvbnRlbnQgPSBcIk5vIHRhc2tzIHRvZGF5IVwiO1xuICAgICAgbm9UYXNrTWVzc2FnZS5jbGFzc0xpc3QuYWRkKFwibm8tdGFzay1tc2dcIik7XG4gICAgICBhbGxUYXNrc0NvbnRhaW5lci5hcHBlbmRDaGlsZChub1Rhc2tNZXNzYWdlKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gaXNEdWVUb2RheSh0YXNrRGF0ZSkge1xuICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7XG4gIHRvZGF5LnNldEhvdXJzKDAsIDAsIDAsIDApO1xuXG4gIGNvbnN0IGR1ZURhdGUgPSBuZXcgRGF0ZSh0YXNrRGF0ZSk7XG4gIGR1ZURhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG5cbiAgcmV0dXJuIHRvZGF5LmdldFRpbWUoKSA9PT0gZHVlRGF0ZS5nZXRUaW1lKCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVRvZGF5VGFza0VsZW1lbnQodGFzaykge1xuICBjb25zdCB0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgdGFza0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwidGFzay1jb250YWluZXJcIik7XG5cbiAgY29uc3QgdGFza1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIHRhc2tUaXRsZS5jbGFzc0xpc3QuYWRkKFwidGFzay10aXRsZVwiKTtcbiAgdGFza1RpdGxlLnRleHRDb250ZW50ID0gdGFzay50aXRsZTtcbiAgdGFza0NvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrVGl0bGUpO1xuXG4gIHJldHVybiB0YXNrQ29udGFpbmVyO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGVuYWJsZVByb2plY3RBZGRpdGlvbigpIHtcbiAgY29uc3QgYWRkUHJvamVjdExpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFkZC1wcm9qZWN0XCIpO1xuXG4gIC8vIENyZWF0ZSB0aGUgaW5wdXQgY29udGFpbmVyIGlmIGl0IGRvZXNuJ3QgZXhpc3RcbiAgbGV0IHByb2plY3ROYW1lSW5wdXRDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAgIFwiLnByb2plY3QtbmFtZS1pbnB1dC1jb250YWluZXJcIixcbiAgKTtcbiAgaWYgKCFwcm9qZWN0TmFtZUlucHV0Q29udGFpbmVyKSB7XG4gICAgcHJvamVjdE5hbWVJbnB1dENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgcHJvamVjdE5hbWVJbnB1dENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1uYW1lLWlucHV0LWNvbnRhaW5lclwiKTtcblxuICAgIGNvbnN0IHByb2plY3ROYW1lSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgcHJvamVjdE5hbWVJbnB1dC50eXBlID0gXCJ0ZXh0XCI7XG5cbiAgICAvLyBhZGQgYW5kIGNhbmNlbCBidXR0b25zXG4gICAgY29uc3QgYnV0dG9uc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgYnV0dG9uc0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiYnV0dG9ucy1jb250YWluZXJcIik7XG5cbiAgICBjb25zdCBhZGRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGFkZEJ0bi50ZXh0Q29udGVudCA9IFwiQWRkXCI7XG4gICAgYWRkQnRuLmNsYXNzTGlzdC5hZGQoXCJhZGQtcHJvamVjdC1idG5cIik7XG5cbiAgICBjb25zdCBjYW5jZWxCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGNhbmNlbEJ0bi50ZXh0Q29udGVudCA9IFwiQ2FuY2VsXCI7XG4gICAgY2FuY2VsQnRuLmNsYXNzTGlzdC5hZGQoXCJjYW5jZWwtYWRkaW5nLWJ0blwiKTtcblxuICAgIHByb2plY3ROYW1lSW5wdXRDb250YWluZXIuYXBwZW5kQ2hpbGQocHJvamVjdE5hbWVJbnB1dCk7XG4gICAgYnV0dG9uc0NvbnRhaW5lci5hcHBlbmRDaGlsZChjYW5jZWxCdG4pO1xuICAgIGJ1dHRvbnNDb250YWluZXIuYXBwZW5kQ2hpbGQoYWRkQnRuKTtcbiAgICBwcm9qZWN0TmFtZUlucHV0Q29udGFpbmVyLmFwcGVuZENoaWxkKGJ1dHRvbnNDb250YWluZXIpO1xuXG4gICAgLy8gQXBwZW5kIHRoZSBjb250YWluZXIgdG8gdGhlIERPTVxuICAgIGFkZFByb2plY3RMaW5rLmFmdGVyKHByb2plY3ROYW1lSW5wdXRDb250YWluZXIpO1xuXG4gICAgLy8gSW5pdGlhbGx5IHNob3cgdGhlIGlucHV0IGNvbnRhaW5lclxuICAgIHByb2plY3ROYW1lSW5wdXRDb250YWluZXIuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuXG4gICAgLy8gSGlkZSB0aGUgY29udGFpbmVyIGFuZCBjbGVhciB0aGUgaW5wdXQgd2hlbiAnQ2FuY2VsJyBpcyBjbGlja2VkXG4gICAgY2FuY2VsQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBwcm9qZWN0TmFtZUlucHV0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIHByb2plY3ROYW1lSW5wdXQudmFsdWUgPSBcIlwiO1xuICAgIH0pO1xuXG4gICAgLy8gQWRkIHRoZSBuZXcgcHJvamVjdCBuYW1lIHdoZW4gYWRkIHByb2plY3QgaXMgY2xpY2tlZFxuICAgIGFkZEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgY29uc3QgcHJvamVjdHNOYW1lc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICBwcm9qZWN0c05hbWVzQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0cy1uYW1lcy1jb250YWluZXJcIik7XG5cbiAgICAgIGNvbnN0IHByb2plY3ROYW1lQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIHByb2plY3ROYW1lQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0LW5hbWUtY29udGFpbmVyXCIpO1xuXG4gICAgICBjb25zdCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICBjb25zdCBwcm9qZWN0TmFtZVZhbHVlID0gcHJvamVjdE5hbWVJbnB1dC52YWx1ZS50cmltKCk7XG4gICAgICBwcm9qZWN0TmFtZS50ZXh0Q29udGVudCA9IHByb2plY3ROYW1lVmFsdWU7XG4gICAgICBwcm9qZWN0TmFtZS5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1uYW1lXCIpO1xuICAgICAgLy8gYWRkIGNyb3NzIGljb25cbiAgICAgIGNvbnN0IGNyb3NzSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgICBjcm9zc0ljb24uc3JjID0gXCIuL2ltYWdlcy9pY29uczgtY3Jvc3MtMTYucG5nXCI7XG4gICAgICBjcm9zc0ljb24uYWx0ID0gXCJjcm9zc1wiO1xuICAgICAgY3Jvc3NJY29uLmNsYXNzTGlzdC5hZGQoXCJjcm9zcy1pY29uXCIpO1xuXG4gICAgICBjcm9zc0ljb24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgcHJvamVjdHNOYW1lc0NvbnRhaW5lci5yZW1vdmVDaGlsZChwcm9qZWN0TmFtZUNvbnRhaW5lcik7XG4gICAgICB9KTtcblxuICAgICAgcHJvamVjdE5hbWVDb250YWluZXIuYXBwZW5kQ2hpbGQocHJvamVjdE5hbWUpO1xuICAgICAgcHJvamVjdE5hbWVDb250YWluZXIuYXBwZW5kQ2hpbGQoY3Jvc3NJY29uKTtcblxuICAgICAgcHJvamVjdHNOYW1lc0NvbnRhaW5lci5hcHBlbmRDaGlsZChwcm9qZWN0TmFtZUNvbnRhaW5lcik7XG4gICAgICBhZGRQcm9qZWN0TGluay5hZnRlcihwcm9qZWN0c05hbWVzQ29udGFpbmVyKTtcblxuICAgICAgcHJvamVjdE5hbWVJbnB1dENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICBwcm9qZWN0TmFtZUlucHV0LnZhbHVlID0gXCJcIjtcbiAgICB9KTtcblxuICAgIC8vIEFkZCBhbiBldmVudCBsaXN0ZW5lciBmb3IgdGhlIGFkZCBwcm9qZWN0IGxpbmtcbiAgICBhZGRQcm9qZWN0TGluay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgcHJvamVjdE5hbWVJbnB1dENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID1cbiAgICAgICAgcHJvamVjdE5hbWVJbnB1dENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID09PSBcIm5vbmVcIiA/IFwiZmxleFwiIDogXCJub25lXCI7XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCB7IHRhc2tzQXJyIH0gZnJvbSBcIi4vaW5ib3hcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlckltcG9ydGFudFRhc2tzKCkge1xuICBjb25zdCBpbXBvcnRhbnREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBpbXBvcnRhbnREaXYuY2xhc3NMaXN0LmFkZChcImltcG9ydGFudC1kaXZcIik7XG5cbiAgY29uc3QgaW1wb3J0YW50SDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG4gIGltcG9ydGFudEgxLnRleHRDb250ZW50ID0gXCJJbXBvcnRhbnQgVGFza3NcIjtcblxuICBjb25zdCBhbGxUYXNrc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGFsbFRhc2tzQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJhbGwtdGFza3MtY29udGFpbmVyXCIpO1xuXG4gIGltcG9ydGFudERpdi5hcHBlbmRDaGlsZChpbXBvcnRhbnRIMSk7XG4gIGltcG9ydGFudERpdi5hcHBlbmRDaGlsZChhbGxUYXNrc0NvbnRhaW5lcik7XG5cbiAgcmV0dXJuIGltcG9ydGFudERpdjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpc3BsYXlJbXBvcnRhbnRUYXNrcygpIHtcbiAgLy8gaW4gdGhlIHRhc2sgYXJyYXkgY2hlY2sgZm9yIG9iamVjdHMgdGhhdCB0aGVpciBwcmlvcml0eSBpcyBoaWdoLFxuICAvLyBpZiB0aGF0IHNvLCBhZGQgdGhlc2UgdGFza3MgdG8gdGFza3MgY29udGFpbmVyIGluIGltcG9ydGFudCBkaXZcbiAgY29uc3QgYWxsVGFza3NDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFsbC10YXNrcy1jb250YWluZXJcIik7XG5cbiAgaWYgKGFsbFRhc2tzQ29udGFpbmVyKSB7XG4gICAgLy8gQ2xlYXIgZXhpc3RpbmcgY29udGVudFxuICAgIGFsbFRhc2tzQ29udGFpbmVyLmlubmVySFRNTCA9IFwiXCI7XG5cbiAgICAvLyBMb29wIHRocm91Z2ggdGFza3MgYW5kIGFkZCBoaWdoLXByaW9yaXR5IHRhc2tzXG4gICAgdGFza3NBcnIuZm9yRWFjaCgodGFzaykgPT4ge1xuICAgICAgaWYgKHRhc2sucHJpb3JpdHkgPT09IFwiaGlnaFwiKSB7XG4gICAgICAgIGNvbnN0IGltcG9ydGFudFRhc2sgPSBjcmVhdGVJbXBvcnRhbnRUYXNrRWxlbWVudCh0YXNrKTtcbiAgICAgICAgYWxsVGFza3NDb250YWluZXIuYXBwZW5kQ2hpbGQoaW1wb3J0YW50VGFzayk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlSW1wb3J0YW50VGFza0VsZW1lbnQodGFzaykge1xuICBjb25zdCB0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgdGFza0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwidGFzay1jb250YWluZXJcIik7XG5cbiAgY29uc3QgdGFza1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIHRhc2tUaXRsZS5jbGFzc0xpc3QuYWRkKFwidGFzay10aXRsZVwiKTtcbiAgdGFza1RpdGxlLnRleHRDb250ZW50ID0gdGFzay50aXRsZTtcbiAgdGFza0NvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrVGl0bGUpO1xuXG4gIHJldHVybiB0YXNrQ29udGFpbmVyO1xufVxuIiwiaW1wb3J0IHsgdGFza3NBcnIgfSBmcm9tIFwiLi9pbmJveFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyQ29tcGxldGVkVGFza3MoKSB7XG4gIGNvbnN0IGNvbXBsZXRlZERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbXBsZXRlZERpdi5jbGFzc0xpc3QuYWRkKFwiY29tcGxldGVkLWRpdlwiKTtcblxuICBjb25zdCBjb21wbGV0ZWRIMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMVwiKTtcbiAgY29tcGxldGVkSDEudGV4dENvbnRlbnQgPSBcIkNvbXBsZXRlZCBUYXNrc1wiO1xuXG4gIGNvbnN0IGFsbFRhc2tzQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgYWxsVGFza3NDb250YWluZXIuY2xhc3NMaXN0LmFkZChcImFsbC10YXNrcy1jb250YWluZXJcIik7XG5cbiAgY29tcGxldGVkRGl2LmFwcGVuZENoaWxkKGNvbXBsZXRlZEgxKTtcbiAgY29tcGxldGVkRGl2LmFwcGVuZENoaWxkKGFsbFRhc2tzQ29udGFpbmVyKTtcblxuICByZXR1cm4gY29tcGxldGVkRGl2O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlzcGxheUNvbXBsZXRlZFRhc2tzKCkge1xuICAvLyBmb3IgZWFjaCB0YXNrIGNoZWNrIGlmIHRoZSAnZG9uZScgaXMgZXF1YWwgdG8gdHJ1ZSBmb3Igc2hvd2luZyBpdCBpbiB0aGUgY29tcGxldGVkIGRpdlxuICBjb25zdCBhbGxUYXNrc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWxsLXRhc2tzLWNvbnRhaW5lclwiKTtcblxuICBpZiAoYWxsVGFza3NDb250YWluZXIpIHtcbiAgICAvLyBDbGVhciBleGlzdGluZyBjb250ZW50XG4gICAgYWxsVGFza3NDb250YWluZXIuaW5uZXJIVE1MID0gXCJcIjtcblxuICAgIC8vIExvb3AgdGhyb3VnaCB0YXNrcyBhbmQgYWRkIGhpZ2gtcHJpb3JpdHkgdGFza3NcbiAgICB0YXNrc0Fyci5mb3JFYWNoKCh0YXNrKSA9PiB7XG4gICAgICBpZiAodGFzay5kb25lID09PSB0cnVlKSB7XG4gICAgICAgIGNvbnN0IGNvbXBsZXRlZFRhc2sgPSBjcmVhdGVDb21wbGV0ZWRUYXNrRWxlbWVudCh0YXNrKTtcbiAgICAgICAgYWxsVGFza3NDb250YWluZXIuYXBwZW5kQ2hpbGQoY29tcGxldGVkVGFzayk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlQ29tcGxldGVkVGFza0VsZW1lbnQodGFzaykge1xuICBjb25zdCB0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgdGFza0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwidGFzay1jb250YWluZXJcIik7XG5cbiAgY29uc3QgdGFza1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIHRhc2tUaXRsZS5jbGFzc0xpc3QuYWRkKFwidGFzay10aXRsZVwiKTtcbiAgdGFza1RpdGxlLnRleHRDb250ZW50ID0gdGFzay50aXRsZTtcbiAgdGFza0NvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrVGl0bGUpO1xuXG4gIHJldHVybiB0YXNrQ29udGFpbmVyO1xufVxuIiwiaW1wb3J0IHsgcmVuZGVySW5ib3gsIGNyZWF0ZUFuZEFkZE5ld1Rhc2sgfSBmcm9tIFwiLi9pbmJveFwiO1xuaW1wb3J0IHsgcmVuZGVyVG9kYXlUYXNrcyB9IGZyb20gXCIuL3RvZGF5VGFza3NcIjtcbmltcG9ydCB7IGVuYWJsZVByb2plY3RBZGRpdGlvbiB9IGZyb20gXCIuL3Byb2plY3RNYW5hZ2VyXCI7XG5pbXBvcnQgeyBkaXNwbGF5VG9kYXlUYXNrcyB9IGZyb20gXCIuL3RvZGF5VGFza3NcIjtcbmltcG9ydCB7IGRpc3BsYXlJbXBvcnRhbnRUYXNrcywgcmVuZGVySW1wb3J0YW50VGFza3MgfSBmcm9tIFwiLi9pbXBvcnRhbnRUYXNrc1wiO1xuaW1wb3J0IHsgZGlzcGxheUNvbXBsZXRlZFRhc2tzLCByZW5kZXJDb21wbGV0ZWRUYXNrcyB9IGZyb20gXCIuL2NvbXBsZXRlZFRhc2tzXCI7XG5pbXBvcnQge1xuICBhdHRhY2hFdmVudExpc3RlbmVyc1RvVGFza3NDb250YWluZXIsXG4gIHJlbmRlck5ld1Rhc2ssXG59IGZyb20gXCIuL3RvRG9JdGVtXCI7XG5pbXBvcnQgeyB0YXNrc0FyciB9IGZyb20gXCIuL2luYm94XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVNYWluQ29udGVudCgpIHtcbiAgY29uc3QgbWFpbkNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1haW4tY29udGVudFwiKTtcblxuICAvLyBHcmFiIGFsbCBzaWRlYmFyIGxpbmtzXG4gIGNvbnN0IHNpZGViYXJMaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuc2lkZWJhciBhXCIpO1xuXG4gIC8vIEFkZCBhbiBldmVudCBsaXN0ZW5lciB0byBlYWNoIGxpbmtcbiAgc2lkZWJhckxpbmtzLmZvckVhY2goKGxpbmspID0+IHtcbiAgICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IC8vIFByZXZlbnQgdGhlIGRlZmF1bHQgbGluayBhY3Rpb25cbiAgICAgIC8vIENsZWFyIHRoZSBtYWluIGNvbnRlbnRcbiAgICAgIG1haW5Db250ZW50LnRleHRDb250ZW50ID0gXCIgXCI7XG5cbiAgICAgIC8vIERldGVybWluZSB3aGljaCBmdW5jdGlvbiB0byBjYWxsIGJhc2VkIG9uIGNsaWNrZWQgbGluaydzIGNsYXNzXG4gICAgICBpZiAobGluay5jbGFzc0xpc3QuY29udGFpbnMoXCJpbmJveFwiKSkge1xuICAgICAgICBjb25zdCBpbmJveENvbnRlbnQgPSByZW5kZXJJbmJveCgpO1xuICAgICAgICBtYWluQ29udGVudC5hcHBlbmRDaGlsZChpbmJveENvbnRlbnQpO1xuICAgICAgICBjcmVhdGVBbmRBZGROZXdUYXNrKCk7IC8vIGJ5IGNsaWNraW5nIGFkZCBidG4gaW4gZGlhbG9nIGFkZCB0aGUgbmV3IHRhc2sgdG8gdGFza3NBcnIgYW5kIHRoZSBhbGwgdGFza3MgY29udGFpbmVyIGluIHRoZSBpbmJveFxuICAgICAgICBhdHRhY2hFdmVudExpc3RlbmVyc1RvVGFza3NDb250YWluZXIoKTsgLy8gZXZlbnQgbGlzdGVuZXIgZGVsZWdhdGlvblxuXG4gICAgICAgIGlmICh0YXNrc0Fyci5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgLy8gaWYgdGhlcmUgaXMgYWxyZWFkeSBzb21lIHRhc2tzIGFkZGVkIHNob3cgdGhlbSB3aGVuIG5hdmlnYXRlIGJhY2sgdG8gaW5ib3ggbGlua1xuICAgICAgICAgIHJlbmRlck5ld1Rhc2soKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChsaW5rLmNsYXNzTGlzdC5jb250YWlucyhcInRvZGF5XCIpKSB7XG4gICAgICAgIGNvbnN0IHRvZGF5Q29udGVudCA9IHJlbmRlclRvZGF5VGFza3MoKTtcbiAgICAgICAgbWFpbkNvbnRlbnQuYXBwZW5kQ2hpbGQodG9kYXlDb250ZW50KTtcbiAgICAgICAgZGlzcGxheVRvZGF5VGFza3MoKTtcbiAgICAgIH0gZWxzZSBpZiAobGluay5jbGFzc0xpc3QuY29udGFpbnMoXCJjb21wbGV0ZWRcIikpIHtcbiAgICAgICAgY29uc3QgY29tcGxldGVkQ29udGVudCA9IHJlbmRlckNvbXBsZXRlZFRhc2tzKCk7XG4gICAgICAgIG1haW5Db250ZW50LmFwcGVuZENoaWxkKGNvbXBsZXRlZENvbnRlbnQpO1xuICAgICAgICBkaXNwbGF5Q29tcGxldGVkVGFza3MoKTtcbiAgICAgIH0gZWxzZSBpZiAobGluay5jbGFzc0xpc3QuY29udGFpbnMoXCJpbXBvcnRhbnRcIikpIHtcbiAgICAgICAgY29uc3QgaW1wb3J0YW50Q29udGVudCA9IHJlbmRlckltcG9ydGFudFRhc2tzKCk7XG4gICAgICAgIG1haW5Db250ZW50LmFwcGVuZENoaWxkKGltcG9ydGFudENvbnRlbnQpO1xuICAgICAgICBkaXNwbGF5SW1wb3J0YW50VGFza3MoKTtcbiAgICAgIH0gZWxzZSBpZiAobGluay5jbGFzc0xpc3QuY29udGFpbnMoXCJhZGQtcHJvamVjdFwiKSkge1xuICAgICAgICBlbmFibGVQcm9qZWN0QWRkaXRpb24oKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59XG5cbi8vIERPTSBmb3IgdG8gZG8gbGlzdCB0YXNrc1xuXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJUYXNrcygpIHtcbiAgY29uc3QgYWxsVGFza3NDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFsbC10YXNrcy1jb250YWluZXJcIik7XG4gIGFsbFRhc2tzQ29udGFpbmVyLmlubmVySFRNTCA9IFwiXCI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUYXNrRWxlbWVudCh0YXNrKSB7XG4gIGNvbnN0IHRhc2tDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICB0YXNrQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJ0YXNrLWNvbnRhaW5lclwiKTtcbiAgY29uc3QgdGFza1N0YXR1c1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgdGFza1N0YXR1c1RpdGxlLmNsYXNzTGlzdC5hZGQoXCJ0YXNrLXN0YXR1cy10aXRsZVwiKTtcbiAgY29uc3QgdGFza0RldGFpbHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICB0YXNrRGV0YWlscy5jbGFzc0xpc3QuYWRkKFwidGFzay1kZXRhaWxzXCIpO1xuXG4gIC8vIGFkZCB0aGUgc3RhdHVzIGljb25cbiAgY29uc3Qgc3RhdHVzSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gIHN0YXR1c0ljb24uY2xhc3NMaXN0LmFkZChcImNpcmNsZS1pY29uXCIsIFwidGFzay1pY29uXCIpO1xuICBzdGF0dXNJY29uLnNyYyA9IFwiLi9pbWFnZXMvY2lyY2xlX0ZJTEwwX3dnaHQ0MDBfR1JBRDBfb3BzejI0LnN2Z1wiO1xuICB0YXNrU3RhdHVzVGl0bGUuYXBwZW5kQ2hpbGQoc3RhdHVzSWNvbik7XG5cbiAgLy8gYWRkIHRhc2sgdGl0bGVcbiAgY29uc3QgdGFza1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIHRhc2tUaXRsZS5jbGFzc0xpc3QuYWRkKFwidGFzay10aXRsZVwiKTtcbiAgdGFza1RpdGxlLnRleHRDb250ZW50ID0gdGFzay50aXRsZTtcbiAgdGFza1N0YXR1c1RpdGxlLmFwcGVuZENoaWxkKHRhc2tUaXRsZSk7XG5cbiAgLy8gYWRkIHNjaGVkdWxlXG4gIGNvbnN0IHNjaGVkdWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gIHNjaGVkdWxlLmNsYXNzTGlzdC5hZGQoXCJzY2hlZHVsZVwiKTtcbiAgc2NoZWR1bGUudGV4dENvbnRlbnQgPSB0YXNrLnNjaGVkdWxlO1xuICB0YXNrRGV0YWlscy5hcHBlbmRDaGlsZChzY2hlZHVsZSk7XG5cbiAgLy8gYWRkIHByaW9yaXR5XG4gIGNvbnN0IHByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gIHByaW9yaXR5LmNsYXNzTGlzdC5hZGQoXCJwcmlvcml0eVwiKTtcbiAgcHJpb3JpdHkudGV4dENvbnRlbnQgPSB0YXNrLnByaW9yaXR5O1xuICB0YXNrRGV0YWlscy5hcHBlbmRDaGlsZChwcmlvcml0eSk7XG5cbiAgLy8gYWRkIHRyYXNoIGljb25cblxuICBjb25zdCB0cmFzaEljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICB0cmFzaEljb24uY2xhc3NMaXN0LmFkZChcInRyYXNoLWljb25cIiwgXCJ0YXNrLWljb25cIik7XG4gIHRyYXNoSWNvbi5zcmMgPSBcIi4vaW1hZ2VzL2RlbGV0ZV9GSUxMMF93Z2h0NDAwX0dSQUQwX29wc3oyNC5zdmdcIjtcbiAgdGFza0RldGFpbHMuYXBwZW5kQ2hpbGQodHJhc2hJY29uKTtcblxuICB0YXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2tTdGF0dXNUaXRsZSk7XG4gIHRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza0RldGFpbHMpO1xuXG4gIHJldHVybiB0YXNrQ29udGFpbmVyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkVGFza1RvQ29udGFpbmVyKHRhc2tFbGVtZW50KSB7XG4gIGNvbnN0IGFsbFRhc2tzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hbGwtdGFza3MtY29udGFpbmVyXCIpO1xuICBhbGxUYXNrc0NvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrRWxlbWVudCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVUYXNrRnJvbUNvbnRhaW5lcih0YXNrRWxlbWVudCkge1xuICBjb25zdCBhbGxUYXNrc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWxsLXRhc2tzLWNvbnRhaW5lclwiKTtcbiAgYWxsVGFza3NDb250YWluZXIucmVtb3ZlQ2hpbGQodGFza0VsZW1lbnQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdG9nZ2xlU3RhdHVzSWNvbih0YXNrLCB0YXNrRWxlbWVudCkge1xuICBjb25zdCBzdGF0dXNJY29uID0gdGFza0VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jaXJjbGUtaWNvblwiKTtcbiAgdGFzay5kb25lID0gIXRhc2suZG9uZTtcbiAgY29uc3QgdGFza1RpdGxlID0gdGFza0VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi50YXNrLXRpdGxlXCIpO1xuXG4gIC8vIENoYW5nZSB0aGUgdmlzdWFsIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBzdGF0dXMgaWNvblxuICBpZiAodGFzay5kb25lKSB7XG4gICAgc3RhdHVzSWNvbi5zcmMgPSBcImltYWdlcy9jaGVja19jaXJjbGVfRklMTDBfd2dodDQwMF9HUkFEMF9vcHN6MjQuc3ZnXCI7XG4gICAgdGFza1RpdGxlLnN0eWxlLnRleHREZWNvcmF0aW9uID0gXCJsaW5lLXRocm91Z2hcIjtcbiAgfSBlbHNlIHtcbiAgICBzdGF0dXNJY29uLnNyYyA9IFwiLi9pbWFnZXMvY2lyY2xlX0ZJTEwwX3dnaHQ0MDBfR1JBRDBfb3BzejI0LnN2Z1wiO1xuICAgIHRhc2tUaXRsZS5zdHlsZS50ZXh0RGVjb3JhdGlvbiA9IFwibm9uZVwiO1xuICB9XG59XG4iLCJpbXBvcnQgeyBzYXZlVGFza3NUb0xvY2FsU3RvcmFnZSB9IGZyb20gXCIuL3N0b3JhZ2VcIjtcbmltcG9ydCB7IHRhc2tzQXJyIH0gZnJvbSBcIi4vaW5ib3hcIjtcbmltcG9ydCB7XG4gIGNyZWF0ZVRhc2tFbGVtZW50LFxuICBhZGRUYXNrVG9Db250YWluZXIsXG4gIHRvZ2dsZVN0YXR1c0ljb24sXG4gIHJlbW92ZVRhc2tGcm9tQ29udGFpbmVyLFxuICBjbGVhclRhc2tzLFxufSBmcm9tIFwiLi9VSVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyTmV3VGFzaygpIHtcbiAgY2xlYXJUYXNrcygpOyAvLyBjbGVhciBhbGwgdGFza3MgY29udGFpbmVyIHNvIHdoZW4gYWRkaW5nIGEgbmV3IHRhc2sgdGhlIHByZXZpb3VzIHRhc2tzIGFyZSBub3QgYWRkZWQgYWdhaW4gd2l0aCB0aGUgbmV3IG9uZS5cblxuICB0YXNrc0Fyci5mb3JFYWNoKCh0YXNrKSA9PiB7XG4gICAgY29uc3QgdGFza0VsZW1lbnQgPSBjcmVhdGVUYXNrRWxlbWVudCh0YXNrKTtcbiAgICB1cGRhdGVUYXNrVUkodGFzaywgdGFza0VsZW1lbnQpO1xuICAgIGFkZFRhc2tUb0NvbnRhaW5lcih0YXNrRWxlbWVudCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVUYXNrVUkodGFzaywgdGFza0VsZW1lbnQpIHtcbiAgY29uc3Qgc3RhdHVzSWNvbiA9IHRhc2tFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2lyY2xlLWljb25cIik7XG4gIGNvbnN0IHRhc2tUaXRsZSA9IHRhc2tFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGFzay10aXRsZVwiKTtcblxuICBpZiAodGFzay5kb25lKSB7XG4gICAgc3RhdHVzSWNvbi5zcmMgPSBcImltYWdlcy9jaGVja19jaXJjbGVfRklMTDBfd2dodDQwMF9HUkFEMF9vcHN6MjQuc3ZnXCI7XG4gICAgdGFza1RpdGxlLnN0eWxlLnRleHREZWNvcmF0aW9uID0gXCJsaW5lLXRocm91Z2hcIjtcbiAgfSBlbHNlIHtcbiAgICBzdGF0dXNJY29uLnNyYyA9IFwiLi9pbWFnZXMvY2lyY2xlX0ZJTEwwX3dnaHQ0MDBfR1JBRDBfb3BzejI0LnN2Z1wiO1xuICAgIHRhc2tUaXRsZS5zdHlsZS50ZXh0RGVjb3JhdGlvbiA9IFwibm9uZVwiO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhdHRhY2hFdmVudExpc3RlbmVyc1RvVGFza3NDb250YWluZXIoKSB7XG4gIGNvbnN0IGFsbFRhc2tzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hbGwtdGFza3MtY29udGFpbmVyXCIpO1xuXG4gIGFsbFRhc2tzQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICBjb25zdCB0YXNrRWxlbWVudCA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KFwiLnRhc2stY29udGFpbmVyXCIpO1xuICAgIGlmICghdGFza0VsZW1lbnQpIHJldHVybjtcblxuICAgIGlmIChldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2lyY2xlLWljb25cIikpIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gQXJyYXkuZnJvbShhbGxUYXNrc0NvbnRhaW5lci5jaGlsZHJlbikuaW5kZXhPZih0YXNrRWxlbWVudCk7XG4gICAgICB0b2dnbGVTdGF0dXNJY29uKHRhc2tzQXJyW2luZGV4XSwgdGFza0VsZW1lbnQpO1xuICAgIH0gZWxzZSBpZiAoZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInRyYXNoLWljb25cIikpIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gQXJyYXkuZnJvbShhbGxUYXNrc0NvbnRhaW5lci5jaGlsZHJlbikuaW5kZXhPZih0YXNrRWxlbWVudCk7XG4gICAgICByZW1vdmVUYXNrRnJvbUNvbnRhaW5lcih0YXNrRWxlbWVudCk7XG4gICAgICB0YXNrc0Fyci5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cblxuICAgIC8vIHNhdmUgdGhlIHVwZGF0ZWQgdGFza3MgYXJyYXkgdG8gbG9jYWwgc3RvcmFnZVxuICAgIHNhdmVUYXNrc1RvTG9jYWxTdG9yYWdlKHRhc2tzQXJyKTtcbiAgfSk7XG59XG4iLCJpbXBvcnQgeyBsb2FkVGFza3NGcm9tTG9jYWxTdG9yYWdlLCBzYXZlVGFza3NUb0xvY2FsU3RvcmFnZSB9IGZyb20gXCIuL3N0b3JhZ2VcIjtcbmltcG9ydCB7IHJlbmRlck5ld1Rhc2sgfSBmcm9tIFwiLi90b0RvSXRlbVwiO1xuXG5leHBvcnQgY29uc3QgdGFza3NBcnIgPSBsb2FkVGFza3NGcm9tTG9jYWxTdG9yYWdlKCk7XG5cbmV4cG9ydCBmdW5jdGlvbiByZW5kZXJJbmJveCgpIHtcbiAgY29uc3QgaW5ib3hEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBpbmJveERpdi5jbGFzc0xpc3QuYWRkKFwiaW5ib3gtZGl2XCIpO1xuXG4gIGNvbnN0IGluYm94SDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG4gIGluYm94SDEudGV4dENvbnRlbnQgPSBcIkluYm94XCI7XG5cbiAgLy8gYWxsIHRhc2tzIGNvbnRhaW5lciB3aGljaCBpcyBiZWxvdyB0aGUgaGVhZGVyIGFuZCBhYm92ZSB0aGUgYWRkIG5ldyB0YXNrIGRpdlxuICBjb25zdCBhbGxUYXNrc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGFsbFRhc2tzQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJhbGwtdGFza3MtY29udGFpbmVyXCIpO1xuXG4gIGNvbnN0IGFkZE5ld1Rhc2tEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBhZGROZXdUYXNrRGl2LmNsYXNzTGlzdC5hZGQoXCJhZGQtbmV3LXRhc2tcIik7XG5cbiAgY29uc3QgcGx1c0ljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICBwbHVzSWNvbi5zcmMgPSBcIi4vaW1hZ2VzL2FkZF9GSUxMMF93Z2h0NDAwX0dSQUQwX29wc3oyNC5zdmdcIjtcbiAgcGx1c0ljb24uY2xhc3NMaXN0LmFkZChcInRhc2stcGx1cy1pY29uXCIpO1xuICBwbHVzSWNvbi5hbHQgPSBcInBsdXNcIjtcbiAgYWRkTmV3VGFza0Rpdi5hcHBlbmRDaGlsZChwbHVzSWNvbik7XG5cbiAgY29uc3QgYWRkVGFza1AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgYWRkVGFza1AuY2xhc3NMaXN0LmFkZChcImFkZC10YXNrLXRleHRcIik7XG4gIGFkZFRhc2tQLnRleHRDb250ZW50ID0gXCJBZGQgYSBuZXcgdGFza1wiO1xuICBhZGROZXdUYXNrRGl2LmFwcGVuZENoaWxkKGFkZFRhc2tQKTtcblxuICBpbmJveERpdi5hcHBlbmRDaGlsZChpbmJveEgxKTtcbiAgaW5ib3hEaXYuYXBwZW5kQ2hpbGQoYWxsVGFza3NDb250YWluZXIpO1xuICBpbmJveERpdi5hcHBlbmRDaGlsZChhZGROZXdUYXNrRGl2KTtcblxuICBjcmVhdGVBZGRUYXNrRGlhbG9nKCk7XG5cbiAgcmV0dXJuIGluYm94RGl2O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVBZGRUYXNrRGlhbG9nKCkge1xuICAvLyBDcmVhdGUgZGlhbG9nIGVsZW1lbnRcbiAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpYWxvZ1wiKTtcbiAgZGlhbG9nLmNsYXNzTGlzdC5hZGQoXCJhZGQtdGFzay1kaWFsb2dcIik7XG5cbiAgLy8gQ3JlYXRlIGZvcm1cbiAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpO1xuICBmb3JtLmFjdGlvbiA9IFwiZGlhbG9nXCI7XG5cbiAgLy8gRm9ybSBpbnB1dHNcbiAgY29uc3QgaW5wdXRzRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgaW5wdXRzRGl2LmNsYXNzTGlzdC5hZGQoXCJpbnB1dHNEaXZcIik7XG5cbiAgLy8gbGFiZWwgaW5wdXQgZGl2IGZvciBlYWNoIG9mIGlucHV0c1xuICBjb25zdCBpbmRpdmlkdWFsSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBpbmRpdmlkdWFsSW5wdXQuY2xhc3NMaXN0LmFkZChcImluZGl2aWR1YWwtaW5wdXRcIik7XG5cbiAgLy8gVGFzayB0aXRsZSBpbnB1dFxuICBjb25zdCB0YXNrVGl0bGVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICB0YXNrVGl0bGVEaXYuY2xhc3NMaXN0LmFkZChcInRhc2stdGl0bGVcIik7XG4gIGNvbnN0IHRhc2tUaXRsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICB0YXNrVGl0bGVMYWJlbC5odG1sRm9yID0gXCJ0YXNrLXRpdGxlXCI7XG4gIHRhc2tUaXRsZUxhYmVsLnRleHRDb250ZW50ID0gXCJUYXNrIFRpdGxlKlwiO1xuICBjb25zdCB0YXNrVGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgdGFza1RpdGxlSW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICB0YXNrVGl0bGVJbnB1dC5uYW1lID0gXCJ0YXNrLXRpdGxlXCI7XG4gIHRhc2tUaXRsZUlucHV0LmlkID0gXCJ0YXNrLXRpdGxlXCI7XG4gIHRhc2tUaXRsZUlucHV0LmNsYXNzTGlzdC5hZGQoXCJ0YXNrLXRpdGxlLS1pbnB1dFwiKTtcbiAgdGFza1RpdGxlSW5wdXQucGxhY2Vob2xkZXIgPSBcImUuZy4gV29ya291dFwiO1xuICB0YXNrVGl0bGVJbnB1dC5yZXF1aXJlZCA9IHRydWU7XG4gIHRhc2tUaXRsZURpdi5hcHBlbmRDaGlsZCh0YXNrVGl0bGVMYWJlbCk7XG4gIHRhc2tUaXRsZURpdi5hcHBlbmRDaGlsZCh0YXNrVGl0bGVJbnB1dCk7XG5cbiAgaW5kaXZpZHVhbElucHV0LmFwcGVuZENoaWxkKHRhc2tUaXRsZURpdik7XG5cbiAgLy8gUHJpb3JpdHkgc2VsZWN0XG4gIGNvbnN0IHByaW9yaXR5RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgcHJpb3JpdHlEaXYuY2xhc3NMaXN0LmFkZChcInByaW9yaXR5XCIpO1xuICBjb25zdCBwcmlvcml0eUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICBwcmlvcml0eUxhYmVsLmh0bWxGb3IgPSBcInByaW9yaXR5XCI7XG4gIHByaW9yaXR5TGFiZWwudGV4dENvbnRlbnQgPSBcIlByaW9yaXR5XCI7XG4gIGNvbnN0IHByaW9yaXR5U2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKTtcbiAgcHJpb3JpdHlTZWxlY3QubmFtZSA9IFwicHJpb3JpdHlcIjtcbiAgcHJpb3JpdHlTZWxlY3QuaWQgPSBcInByaW9yaXR5XCI7XG5cbiAgcHJpb3JpdHlTZWxlY3QuY2xhc3NMaXN0LmFkZChcInByaW9yaXR5LS1zZWxlY3RcIik7XG4gIFtcIkxvd1wiLCBcIk1lZGl1bVwiLCBcIkhpZ2hcIl0uZm9yRWFjaCgocHJpb3JpdHkpID0+IHtcbiAgICBjb25zdCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xuICAgIG9wdGlvbi52YWx1ZSA9IHByaW9yaXR5LnRvTG93ZXJDYXNlKCk7XG4gICAgb3B0aW9uLnRleHRDb250ZW50ID0gcHJpb3JpdHk7XG4gICAgcHJpb3JpdHlTZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcbiAgfSk7XG4gIHByaW9yaXR5RGl2LmFwcGVuZENoaWxkKHByaW9yaXR5TGFiZWwpO1xuICBwcmlvcml0eURpdi5hcHBlbmRDaGlsZChwcmlvcml0eVNlbGVjdCk7XG5cbiAgaW5kaXZpZHVhbElucHV0LmFwcGVuZENoaWxkKHByaW9yaXR5RGl2KTtcblxuICAvLyBTY2hlZHVsZSBkYXRlIGlucHV0XG4gIGNvbnN0IHNjaGVkdWxlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgc2NoZWR1bGVEaXYuY2xhc3NMaXN0LmFkZChcInNjaGVkdWxlXCIpO1xuICBjb25zdCBzY2hlZHVsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICBzY2hlZHVsZUxhYmVsLmh0bWxGb3IgPSBcInNjaGVkdWxlXCI7XG4gIHNjaGVkdWxlTGFiZWwudGV4dENvbnRlbnQgPSBcIlNjaGVkdWxlXCI7XG4gIGNvbnN0IHNjaGVkdWxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gIHNjaGVkdWxlSW5wdXQudHlwZSA9IFwiZGF0ZVwiO1xuICBzY2hlZHVsZUlucHV0Lm5hbWUgPSBcInNjaGVkdWxlXCI7XG4gIHNjaGVkdWxlSW5wdXQuaWQgPSBcInNjaGVkdWxlXCI7XG4gIHNjaGVkdWxlSW5wdXQuY2xhc3NMaXN0LmFkZChcImR1ZS1kYXRlXCIpO1xuICBzY2hlZHVsZURpdi5hcHBlbmRDaGlsZChzY2hlZHVsZUxhYmVsKTtcbiAgc2NoZWR1bGVEaXYuYXBwZW5kQ2hpbGQoc2NoZWR1bGVJbnB1dCk7XG5cbiAgaW5kaXZpZHVhbElucHV0LmFwcGVuZENoaWxkKHNjaGVkdWxlRGl2KTtcblxuICAvLyBCdXR0b25zXG4gIGNvbnN0IGJ1dHRvbnNEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBidXR0b25zRGl2LmNsYXNzTGlzdC5hZGQoXCJidXR0b25zXCIpO1xuICBjb25zdCBjYW5jZWxCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBjYW5jZWxCdXR0b24uY2xhc3NMaXN0LmFkZChcImNhbmNlbC1idG5cIik7XG4gIGNhbmNlbEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQ2FuY2VsXCI7XG4gIGNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gIGFkZEJ1dHRvbi50eXBlID0gXCJzdWJtaXRcIjtcbiAgYWRkQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJhZGQtYnRuXCIpO1xuICBhZGRCdXR0b24udGV4dENvbnRlbnQgPSBcIkFkZFwiO1xuICBidXR0b25zRGl2LmFwcGVuZENoaWxkKGNhbmNlbEJ1dHRvbik7XG4gIGJ1dHRvbnNEaXYuYXBwZW5kQ2hpbGQoYWRkQnV0dG9uKTtcblxuICAvLyBBcHBlbmQgYWxsIGlucHV0cyBhbmQgdGhlaXIgbGFiZWxzIGluIGlucHV0c0RpdlxuICBpbnB1dHNEaXYuYXBwZW5kQ2hpbGQoaW5kaXZpZHVhbElucHV0KTtcblxuICAvLyBBcHBlbmQgYWxsIHBhcnRzIHRvIGZvcm1cbiAgZm9ybS5hcHBlbmRDaGlsZChpbnB1dHNEaXYpO1xuICBmb3JtLmFwcGVuZENoaWxkKGJ1dHRvbnNEaXYpO1xuXG4gIGRpYWxvZy5hcHBlbmRDaGlsZChmb3JtKTtcblxuICByZXR1cm4gZGlhbG9nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQW5kQWRkTmV3VGFzaygpIHtcbiAgLy8gYWRkIHRoZSBuZXcgdGFzayB0byB0aGUgdGFza3MgY29udGFpbmVyXG5cbiAgY29uc3QgYWRkTmV3VGFza0RpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLW5ldy10YXNrXCIpO1xuXG4gIC8vIEF0dGFjaCB0aGUgZXZlbnQgbGlzdGVuZXIgdG8gdGhlIC5hZGQtbmV3LXRhc2sgZGl2XG4gIGFkZE5ld1Rhc2tEaXYuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBjb25zdCBkaWFsb2cgPSBjcmVhdGVBZGRUYXNrRGlhbG9nKCk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaWFsb2cpO1xuICAgIGRpYWxvZy5zaG93TW9kYWwoKTtcblxuICAgIGNvbnN0IGNhbmNlbEJ1dHRvbiA9IGRpYWxvZy5xdWVyeVNlbGVjdG9yKFwiLmNhbmNlbC1idG5cIik7XG4gICAgY29uc3QgYWRkQnV0dG9uID0gZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLWJ0blwiKTtcblxuICAgIGNhbmNlbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgZGlhbG9nLmNsb3NlKCk7XG4gICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGRpYWxvZyk7IC8vIHJlbW92aW5nIHRoZSBkaWFsb2cgYWZ0ZXIgY2xvc2luZ1xuICAgIH0pO1xuXG4gICAgYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICBjb25zdCB0aXRsZSA9IGRpYWxvZy5xdWVyeVNlbGVjdG9yKFwiI3Rhc2stdGl0bGVcIikudmFsdWUudHJpbSgpO1xuICAgICAgY29uc3QgcHJpb3JpdHkgPSBkaWFsb2cucXVlcnlTZWxlY3RvcihcIiNwcmlvcml0eVwiKS52YWx1ZTtcbiAgICAgIGNvbnN0IHNjaGVkdWxlID0gZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoXCIjc2NoZWR1bGVcIikudmFsdWU7XG5cbiAgICAgIGlmICghdGl0bGUpIHtcbiAgICAgICAgYWxlcnQoXCJUYXNrIHRpdGxlIGlzIHJlcXVpcmVkXCIpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIEhhbmRsZSB0aGUgc2l0dWF0aW9uIHdoZW4gdGhlIHNlbGVjdGVkIGR1ZSB0aW1lIGlzIGluIHRoZSBwYXN0XG4gICAgICBjb25zdCB0b2RheURhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgY29uc3QgZHVlRGF0ZSA9IG5ldyBEYXRlKHNjaGVkdWxlKTtcbiAgICAgIHRvZGF5RGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgICAgIGR1ZURhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG5cbiAgICAgIGlmICh0b2RheURhdGUgPiBkdWVEYXRlKSB7XG4gICAgICAgIGFsZXJ0KFwiUGxlYXNlIHNlbGVjdCBhIGRhdGUgaW4gdGhlIGZ1dHVyZSwgbm90IHRoZSBwYXN0IVwiKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBuZXdUYXNrID0ge1xuICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgIHByaW9yaXR5OiBwcmlvcml0eSxcbiAgICAgICAgc2NoZWR1bGU6IHNjaGVkdWxlLFxuICAgICAgICBkb25lOiBmYWxzZSxcbiAgICAgIH07XG5cbiAgICAgIHRhc2tzQXJyLnB1c2gobmV3VGFzayk7XG5cbiAgICAgIGRpYWxvZy5jbG9zZSgpO1xuICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChkaWFsb2cpO1xuXG4gICAgICAvLyBhZGQgdGhlIHRhc2sgdG8gdGhlIFVJIHdoZW4gYWRkIGJ1dHRvbiBpcyBjbGlja2VkXG4gICAgICByZW5kZXJOZXdUYXNrKCk7XG4gICAgICAvLyBzYXZlIHRoZSB1cGRhdGVkIHRhc2tzIGFycmF5IHRvIGxvY2FsIHN0b3JhZ2VcbiAgICAgIHNhdmVUYXNrc1RvTG9jYWxTdG9yYWdlKHRhc2tzQXJyKTtcbiAgICB9KTtcbiAgfSk7XG59XG4iLCJpbXBvcnQgeyByZW5kZXJJbmJveCwgY3JlYXRlQW5kQWRkTmV3VGFzayB9IGZyb20gXCIuL2luYm94XCI7XG5pbXBvcnQgeyBhdHRhY2hFdmVudExpc3RlbmVyc1RvVGFza3NDb250YWluZXIgfSBmcm9tIFwiLi90b0RvSXRlbVwiO1xuXG5mdW5jdGlvbiBjcmVhdGVIZWFkZXIoKSB7XG4gIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoZWFkZXJcIik7XG5cbiAgY29uc3QgaGVhZGVyTG9nbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gIGhlYWRlckxvZ28uY2xhc3NMaXN0LmFkZChcImxvZ29cIik7XG4gIGhlYWRlckxvZ28uc3JjID0gXCIuL2ltYWdlcy90b2RvbGlzdC5zdmdcIjtcbiAgaGVhZGVyTG9nby5hbHQgPSBcImxvZ29cIjtcblxuICBjb25zdCBoZWFkZXJIMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMVwiKTtcbiAgaGVhZGVySDEudGV4dENvbnRlbnQgPSBcIlRvZG8gTGlzdFwiO1xuXG4gIC8vIGFkZCBtZW51IGljb24gKCBvbmx5IGJlIHNob3duIHdoZW4gb24gdGhlIG1vYmlsZSBkZXZpY2VzKVxuICBjb25zdCBtZW51SWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gIG1lbnVJY29uLmNsYXNzTGlzdC5hZGQoXCJtZW51LWljb25cIik7XG4gIG1lbnVJY29uLnNyYyA9IFwiLi9pbWFnZXMvaWNvbnM4LW1lbnUtMjQuc3ZnXCI7XG4gIG1lbnVJY29uLmFsdCA9IFwibWVudVwiO1xuXG4gIGhlYWRlci5hcHBlbmRDaGlsZChoZWFkZXJMb2dvKTtcbiAgaGVhZGVyLmFwcGVuZENoaWxkKGhlYWRlckgxKTtcbiAgaGVhZGVyLmFwcGVuZENoaWxkKG1lbnVJY29uKTtcblxuICAvLyBDYWxsIGNoZWNrV2luZG93U2l6ZSB3aXRoIG1lbnVJY29uIGFzIGEgcGFyYW1ldGVyXG4gIGNoZWNrV2luZG93U2l6ZShtZW51SWNvbik7XG5cbiAgcmV0dXJuIGhlYWRlcjtcbn1cblxuLy8gTW9kaWZ5IGNoZWNrV2luZG93U2l6ZSB0byBhY2NlcHQgdGhlIG1lbnVJY29uIGFzIGEgcGFyYW1ldGVyXG5mdW5jdGlvbiBjaGVja1dpbmRvd1NpemUobWVudUljb24pIHtcbiAgaWYgKHdpbmRvdy5pbm5lcldpZHRoIDw9IDc2OCkge1xuICAgIG1lbnVJY29uLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gIH0gZWxzZSB7XG4gICAgbWVudUljb24uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICB9XG59XG5cbi8vIFVwZGF0ZSB0aGUgZXZlbnQgbGlzdGVuZXIgZm9yIHdpbmRvdyByZXNpemUgdG8gYWxzbyBwYXNzIG1lbnVJY29uXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCAoKSA9PiB7XG4gIGNvbnN0IG1lbnVJY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImltZy5tZW51LWljb25cIik7XG4gIGNoZWNrV2luZG93U2l6ZShtZW51SWNvbik7XG59KTtcblxuZnVuY3Rpb24gY3JlYXRlU2lkZWJhcigpIHtcbiAgY29uc3QgbmF2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm5hdlwiKTtcbiAgY29uc3Qgc2lkZWJhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHNpZGViYXIuY2xhc3NMaXN0LmFkZChcInNpZGViYXJcIik7XG5cbiAgY29uc3Qgc2lkZWJhckl0ZW1zID0gW1xuICAgIHtcbiAgICAgIGNsYXNzOiBcImluYm94XCIsXG4gICAgICB0ZXh0OiBcIkluYm94XCIsXG4gICAgICBpbWdTcmM6IFwiLi9pbWFnZXMvaW5ib3hfRklMTDBfd2dodDQwMF9HUkFEMF9vcHN6MjQuc3ZnXCIsXG4gICAgICBhbHRUZXh0OiBcImluYm94XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICBjbGFzczogXCJ0b2RheVwiLFxuICAgICAgdGV4dDogXCJUb2RheVwiLFxuICAgICAgaW1nU3JjOiBcIi4vaW1hZ2VzL3RvZGF5X0ZJTEwwX3dnaHQ0MDBfR1JBRDBfb3BzejI0LnN2Z1wiLFxuICAgICAgYWx0VGV4dDogXCJ0b2RheVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgY2xhc3M6IFwiaW1wb3J0YW50XCIsXG4gICAgICB0ZXh0OiBcIkltcG9ydGFudFwiLFxuICAgICAgaW1nU3JjOiBcIi4vaW1hZ2VzL3N0YXJzX0ZJTEwwX3dnaHQ0MDBfR1JBRDBfb3BzejI0LnN2Z1wiLFxuICAgICAgYWx0VGV4dDogXCJpbXBvcnRhbnRcIixcbiAgICB9LFxuICAgIHtcbiAgICAgIGNsYXNzOiBcImNvbXBsZXRlZFwiLFxuICAgICAgdGV4dDogXCJDb21wbGV0ZWRcIixcbiAgICAgIGltZ1NyYzogXCIuL2ltYWdlcy9kb25lX2FsbF9GSUxMMF93Z2h0NDAwX0dSQUQwX29wc3oyNC5zdmdcIixcbiAgICAgIGFsdFRleHQ6IFwiY29tcGxldGVkXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICBjbGFzczogXCJhZGQtcHJvamVjdFwiLFxuICAgICAgdGV4dDogXCJQcm9qZWN0c1wiLFxuICAgICAgaW1nU3JjOiBcIi4vaW1hZ2VzL2FkZF9GSUxMMF93Z2h0NDAwX0dSQUQwX29wc3oyNC5zdmdcIixcbiAgICAgIGFsdFRleHQ6IFwicGx1c1wiLFxuICAgIH0sXG4gIF07XG5cbiAgLy8gTG9vcCB0aHJvdWdoIGVhY2ggc2lkZWJhciBpdGVtIGFuZCBjcmVhdGUgaXRzIGVsZW1lbnRzXG4gIHNpZGViYXJJdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgY29uc3QgYW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7XG4gICAgYW5jaG9yLmNsYXNzTGlzdC5hZGQoaXRlbS5jbGFzcyk7XG5cbiAgICBjb25zdCBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIGltZy5zcmMgPSBpdGVtLmltZ1NyYztcbiAgICBpbWcuYWx0ID0gaXRlbS5hbHRUZXh0O1xuICAgIGltZy5jbGFzc0xpc3QuYWRkKFwibmF2YmFyXCIsIFwiaWNvblwiKTtcblxuICAgIGNvbnN0IHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICBwLnRleHRDb250ZW50ID0gaXRlbS50ZXh0O1xuICAgIHAuY2xhc3NMaXN0LmFkZChpdGVtLmNsYXNzKTtcblxuICAgIGlmIChpdGVtLmNsYXNzID09PSBcImFkZC1wcm9qZWN0XCIpIHtcbiAgICAgIC8vIEFwcGVuZCB0aGUgdGV4dCBiZWZvcmUgdGhlIGljb25cbiAgICAgIGFuY2hvci5hcHBlbmRDaGlsZChwKTtcbiAgICAgIGFuY2hvci5hcHBlbmRDaGlsZChpbWcpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBBcHBlbmQgdGhlIGljb24gYmVmb3JlIHRoZSB0ZXh0XG4gICAgICBhbmNob3IuYXBwZW5kQ2hpbGQoaW1nKTtcbiAgICAgIGFuY2hvci5hcHBlbmRDaGlsZChwKTtcbiAgICB9XG4gICAgc2lkZWJhci5hcHBlbmRDaGlsZChhbmNob3IpO1xuICB9KTtcblxuICBuYXYuYXBwZW5kQ2hpbGQoc2lkZWJhcik7XG5cbiAgcmV0dXJuIG5hdjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTWFpbigpIHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJtYWluXCIpO1xuICBtYWluLmNsYXNzTGlzdC5hZGQoXCJtYWluLWNvbnRlbnRcIik7XG5cbiAgcmV0dXJuIG1haW47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUZvb3RlcigpIHtcbiAgY29uc3QgZm9vdGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvb3RlclwiKTtcblxuICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIHAudGV4dENvbnRlbnQgPSBcIkNvcHlyaWdodCDCqSAyMDI0IFwiO1xuXG4gIGNvbnN0IGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcbiAgYS5ocmVmID0gXCJodHRwczovL2dpdGh1Yi5jb20vemFocmFiYXRlbmluaWFcIjtcbiAgYS50ZXh0Q29udGVudCA9IFwiemFocmFiYXRlbmluaWFcIjtcbiAgYS5zZXRBdHRyaWJ1dGUoXCJ0YXJnZXRcIiwgXCJfYmxhbmtcIik7IC8vIE9wZW5zIGxpbmsgaW4gbmV3IHRhYlxuXG4gIHAuYXBwZW5kQ2hpbGQoYSk7XG5cbiAgY29uc3QgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgaW1nLnNyYyA9IFwiaW1hZ2VzL2dpdGh1Yi5zdmdcIjtcbiAgaW1nLmFsdCA9IFwiZ2l0aHViXCI7XG5cbiAgZm9vdGVyLmFwcGVuZENoaWxkKHApO1xuICBmb290ZXIuYXBwZW5kQ2hpbGQoaW1nKTtcblxuICByZXR1cm4gZm9vdGVyO1xufVxuXG4vLyB0b2dnbGUgc2lkZWJhclxuXG5mdW5jdGlvbiB0b2dnbGVTaWRlYmFyKCkge1xuICBjb25zdCBtZW51SWNvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWVudS1pY29uXCIpO1xuICBjb25zdCBzaWRlYmFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIm5hdlwiKTtcblxuICBtZW51SWNvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAgIC8vIFRvZ2dsZSBzaWRlYmFyIHZpc2liaWxpdHlcbiAgICBzaWRlYmFyLnN0eWxlLmxlZnQgPSBzaWRlYmFyLnN0eWxlLmxlZnQgPT09IFwiMHB4XCIgPyBcIi02MCVcIiA6IFwiMHB4XCI7XG4gIH0pO1xuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAvLyBDaGVjayBpZiB0aGUgY2xpY2sgaXMgb3V0c2lkZSB0aGUgc2lkZWJhclxuICAgIGNvbnN0IGlzQ2xpY2tJbnNpZGVTaWRlYmFyID0gc2lkZWJhci5jb250YWlucyhldmVudC50YXJnZXQpO1xuICAgIGNvbnN0IGlzQ2xpY2tPbk1lbnVJY29uID0gbWVudUljb24uY29udGFpbnMoZXZlbnQudGFyZ2V0KTtcblxuICAgIGlmIChcbiAgICAgICFpc0NsaWNrSW5zaWRlU2lkZWJhciAmJlxuICAgICAgIWlzQ2xpY2tPbk1lbnVJY29uICYmXG4gICAgICBzaWRlYmFyLnN0eWxlLmxlZnQgPT09IFwiMHB4XCJcbiAgICApIHtcbiAgICAgIC8vIEhpZGUgdGhlIHNpZGViYXIgaWYgaXQncyBvcGVuIGFuZCB0aGUgY2xpY2sgd2FzIG91dHNpZGVcbiAgICAgIHNpZGViYXIuc3R5bGUubGVmdCA9IFwiLTYwJVwiO1xuICAgIH1cbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXRpYWxpemVXZWJzaXRlKCkge1xuICBjb25zdCB3cmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgd3JhcHBlci5jbGFzc0xpc3QuYWRkKFwid3JhcHBlclwiKTtcblxuICBjb25zdCBodG1sQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29udGVudFwiKTtcbiAgaHRtbENvbnRlbnQuYXBwZW5kQ2hpbGQod3JhcHBlcik7XG5cbiAgd3JhcHBlci5hcHBlbmRDaGlsZChjcmVhdGVIZWFkZXIoKSk7XG4gIHdyYXBwZXIuYXBwZW5kQ2hpbGQoY3JlYXRlU2lkZWJhcigpKTtcbiAgdG9nZ2xlU2lkZWJhcigpO1xuICBjb25zdCBtYWluQ29udGVudCA9IGNyZWF0ZU1haW4oKTtcbiAgd3JhcHBlci5hcHBlbmRDaGlsZChtYWluQ29udGVudCk7XG4gIC8vIHdoZW4gdGhlIHdlYnNpdGUgaXMgcmVuZGVyZWQsIHRoZSBpbmJveCBjb250ZW50IGlzIHNob3duIGFzIGEgZGVmYXVsdCBcbiAgY29uc3QgaW5ib3hDb250ZW50ID0gcmVuZGVySW5ib3goKTtcbiAgbWFpbkNvbnRlbnQuYXBwZW5kQ2hpbGQoaW5ib3hDb250ZW50KTtcbiAgY3JlYXRlQW5kQWRkTmV3VGFzaygpOyBcbiAgYXR0YWNoRXZlbnRMaXN0ZW5lcnNUb1Rhc2tzQ29udGFpbmVyKCk7IFxuXG4gIHdyYXBwZXIuYXBwZW5kQ2hpbGQoY3JlYXRlRm9vdGVyKCkpO1xuXG4gIHJldHVybiB3cmFwcGVyO1xufVxuIiwiaW1wb3J0IGluaXRpYWxpemVXZWJzaXRlIGZyb20gXCIuL2luaXRpYWxpemVXZWJzaXRlXCI7XG5pbXBvcnQgeyB1cGRhdGVNYWluQ29udGVudCB9IGZyb20gXCIuL1VJXCI7XG5cbmluaXRpYWxpemVXZWJzaXRlKCk7XG51cGRhdGVNYWluQ29udGVudCgpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///505\n')}},__webpack_exports__={};__webpack_modules__[505]()})();